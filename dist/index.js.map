{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../src/object-plus/tools.ts","../src/object-plus/mixins.ts","../src/object-plus/eventsource.ts","../src/object-plus/events.ts","../src/object-plus/index.ts","../src/validation.ts","../src/traversable.ts","../src/io-tools.ts","../src/transactions.ts","../src/record/attributes/updates.ts","../src/record/attributes/any.ts","../src/record/attributes/owned.ts","../src/record/attributes/attrDef.ts","../src/record/attributes/date.ts","../src/record/attributes/basic.ts","../src/record/attributes/shared.ts","../src/record/attributes/index.ts","../src/record/io-mixin.ts","../src/record/record.ts","../src/record/index.ts","../src/collection/commons.ts","../src/collection/add.ts","../src/collection/set.ts","../src/collection/remove.ts","../src/collection/index.ts","../src/relations/commons.ts","../src/relations/from.ts","../src/relations/subsetOf.ts","../src/relations/store.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","/**\n * Simple overridable logging stubs, writing to `console` by default.\n * Node.js users might want to redirect logging somewhere.\n * \n * This is the singleton avaliable globally through `Object.log` or \n * exported [[log]] variable.\n */\n\n// Logger is the function.\nexport type Logger = ( level : LogLevel, error : string, props? : object ) => void;\n\nexport type LogLevel = 'none' | 'error' | 'warn' | 'info' | 'debug' | 'log';\n\nconst levelToNumber = {\n    none : 0, error : 1, warn : 2, info : 3, log : 4, debug : 5\n}\n\nexport interface Log extends Logger {\n    level : number\n    throw : number\n    stop : number\n    logger : Logger\n}\n\nexport const log : Log = <any>function( a_level : LogLevel, a_msg : string, a_props : object ){\n    let levelAsNumber = levelToNumber[ a_level ], msg, props, level;\n\n    if( levelAsNumber === void 0 && !a_props ){\n        levelAsNumber = 4;\n        msg = a_level;\n        props = a_msg;\n        level = 'log';\n    }\n    else{\n        msg = a_msg, level = a_level, props = a_props;\n    }\n\n    if( levelAsNumber <= log.level ){\n        if( levelAsNumber <= log.throw || !log.logger ){\n            const error = new Error( msg );\n            (error as any).props = props;\n            throw error;\n        }\n        else{\n            log.logger( level, msg, props );\n            \n            if( levelAsNumber <= log.stop ){\n                debugger;\n            }\n        }\n    }\n}\n\ndeclare var process: any;\n\nlog.level = typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'production' ? 1 : 2;\nlog.throw = 0;\nlog.stop = 0;\n\nif( typeof console !== 'undefined' ) {\n    log.logger = function _console( level : LogLevel, error : string, props : object ){\n        const args = [ error ];\n        for( let name in props ){\n            args.push( `\\n\\t${name}:`, props[ name ] );\n        }\n\n        console[ level ].apply( console, args );\n    }\n}\n\n/** Check if value is raw JSON */\nexport function isValidJSON( value : any ) : boolean {\n    if( value === null ){\n        return true;\n    }\n\n    switch( typeof value ){\n    case 'number' :\n    case 'string' :\n    case 'boolean' :\n        return true;\n\n    case 'object':\n        var proto = Object.getPrototypeOf( value );\n\n        if( proto === Object.prototype || proto === Array.prototype ){\n            return every( value, isValidJSON );\n        }\n    }\n\n    return false;\n}\n\n/** Get the base class constructor function.\n * @param Class Subclass constructor function.\n * @returns Base class constructor function.\n */\nexport function getBaseClass( Class : Function ) {\n    return Object.getPrototypeOf( Class.prototype ).constructor\n}\n\nexport function assignToClassProto<T, K extends keyof T>( Class, definition : T, ...names : K[] ) : void {\n    for( let name of names ){\n        const value = definition[ name ];\n        value === void 0 || ( Class.prototype[ name ] = value );\n    }\n}\n\n/** Checks whenever given object is an empty hash `{}` */\nexport function isEmpty( obj : {} ) : boolean {\n    if( obj ){\n        for( let key in obj ){\n            if( obj.hasOwnProperty( key ) ){\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nexport type Iteratee = ( value : any, key? : string | number ) => any;\n\n/** @hidden */\nfunction someArray( arr : any[], fun : Iteratee ) : any {\n    let result;\n\n    for( let i = 0; i < arr.length; i++ ){\n        if( result = fun( arr[ i ], i ) ){\n            return result;\n        }\n    }\n}\n\n/** @hidden */\nfunction someObject( obj : {}, fun : Iteratee ) : any {\n    let result;\n\n    for( let key in obj ){\n        if( obj.hasOwnProperty( key ) ){\n            if( result = fun( obj[ key ], key ) ){\n                return result;\n            }\n        }\n    }\n}\n\n/** Similar to underscore `_.some` */\nexport function some( obj, fun : Iteratee ) : any {\n    if( Object.getPrototypeOf( obj ) === ArrayProto ){\n        return someArray( obj, fun );\n    }\n    else{\n        return someObject( obj, fun );\n    }\n}\n\n/** Similar to underscore `_.every` */\nexport function every( obj : { }, predicate : Iteratee ) : boolean {\n    return !some( obj, x => !predicate( x ) );\n}\n\n/** Similar to `getOwnPropertyDescriptor`, but traverse the whole prototype chain. */\nexport function getPropertyDescriptor( obj : {}, prop : string ) : PropertyDescriptor {\n    let desc : PropertyDescriptor;\n\n    for( let proto = obj; !desc && proto; proto = Object.getPrototypeOf( proto ) ) {\n        desc = Object.getOwnPropertyDescriptor( proto, prop );\n    }\n\n    return desc;\n}\n\n/** Similar to underscore `_.omit` */\nexport function omit( source : {}, ...rest : string[] ) : {}\nexport function omit( source ) : {} {\n    const dest = {}, discard = {};\n\n    for( let i = 1; i < arguments.length; i ++ ){\n        discard[ arguments[ i ] ] = true;\n    }\n\n    for( var name in source ) {\n        if( !discard.hasOwnProperty( name ) && source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** map `source` object properties with a given function, and assign the result to the `dest` object.\n * When `fun` returns `undefined`, skip this value. \n */\nexport function transform< A, B >( dest : { [ key : string ] : A }, source : { [ key : string ] : B }, fun : ( value : B, key : string ) => A | void ) : { [ key : string ] : A } {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            var value = fun( source[ name ], name );\n            value === void 0 || ( dest[ name ] = < A >value );\n        }\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastAssign< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        dest[ name ] = source[ name ];\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastDefaults< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        if( dest[ name ] === void 0 ){\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.extend` and `Object.assign` */\nexport function assign< T >( dest : T, ...sources : Object[] ) : T\nexport function assign< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && assign( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.defaults` */\nexport function defaults< T >( dest : T, ...sources : Object[] ) : T\nexport function defaults< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) && !dest.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && defaults( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n// Polyfill for IE10. Should fix problems with babel and statics inheritance.\ndeclare global {\n    interface ObjectConstructor {\n        setPrototypeOf( target : Object, proto : Object );\n    }\n}\n\nObject.setPrototypeOf || ( Object.setPrototypeOf = defaults ); \n\n/** Similar to underscore `_.keys` */\nexport function keys( o : any ) : string[]{\n    return o ? Object.keys( o ) : [];\n}\n\n/** Similar to underscore `_.once` */\nexport function once( func : Function ) : Function {\n    var memo, first = true;\n    return function() {\n        if ( first ) {\n            first = false;\n            memo = func.apply(this, arguments);\n            func = null;\n        }\n        return memo;\n    };\n}\n\n/** @hidden */\nconst ArrayProto = Array.prototype,\n      DateProto = Date.prototype,\n      ObjectProto = Object.prototype;\n\n/**\n * Determine whenever two values are not equal, deeply traversing \n * arrays and plain JS objects (hashes). Dates are compared by enclosed timestamps, all other\n * values are compared with strict comparison.\n */\nexport function notEqual( a : any, b : any) : boolean {\n    if( a === b ) return false;\n\n    if( a && b && typeof a == 'object' && typeof b == 'object' ) {\n        const protoA = Object.getPrototypeOf( a );\n\n        if( protoA !== Object.getPrototypeOf( b ) ) return true;\n\n        switch( protoA ){\n            case DateProto   : return +a !== +b;\n            case ArrayProto  : return arraysNotEqual( a, b );\n            case ObjectProto :\n            case null:\n                return objectsNotEqual( a, b );\n        }\n    }\n\n    return true;\n}\n\n/** @hidden */\nfunction objectsNotEqual( a, b ) {\n    const keysA = Object.keys( a );\n\n    if( keysA.length !== Object.keys( b ).length ) return true;\n\n    for( let i = 0; i < keysA.length; i++ ) {\n        const key = keysA[ i ];\n\n        if( !b.hasOwnProperty( key ) || notEqual( a[ key ], b[ key ] ) ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/** @hidden */\nfunction arraysNotEqual( a, b ) {\n    if( a.length !== b.length ) return true;\n\n    for( let i = 0; i < a.length; i++ ) {\n        if( notEqual( a[ i ], b[ i ] ) ) return true;\n    }\n\n    return false;\n}\n\n/**\n * Create an object without Object prototype members except hasOwnProperty.\n * @param obj - optional parameter to populate the hash map from.\n */\nconst HashProto = Object.create( null );\nHashProto.hasOwnProperty = ObjectProto.hasOwnProperty;\n\nexport function hashMap( obj? ){\n    const hash = Object.create( HashProto );\n    return obj ? assign( hash, obj ) : hash;\n}","/*****************************************************************\n * Mixins engine and @define metaprogramming class extensions\n *\n * Vlad Balin & Volicon, (c) 2016-2017\n */\nimport { log, assign, omit, hashMap, getPropertyDescriptor, getBaseClass, defaults, transform } from './tools'\nimport { __extends } from 'tslib'\n\nexport interface Subclass< T > extends MixableConstructor {\n    new ( ...args ) : T\n    prototype : T\n}\n\nexport interface MixableConstructor extends Function{\n    __super__? : object;\n    mixins? : MixinsState;\n    onExtend? : ( BaseClass : Function ) => void;\n    onDefine? : ( definition : object, BaseClass : Function ) => void;\n    define? : ( definition? : object, statics? : object ) => MixableConstructor;\n    extend? : <T extends object>( definition? : T, statics? : object ) => Subclass<T>;\n}\n\nexport interface MixableDefinition {\n    mixins? : Mixin[]\n}\n\n/**\n * Base class, holding metaprogramming class extensions.\n * Supports mixins and Class.define metaprogramming method.\n */\nexport class Mixable {\n    static onExtend : ( BaseClass : Function ) => void;\n    static onDefine : ( definition : object, BaseClass : Function ) => object;    \n    static __super__ : object\n    static mixins : MixinsState;\n\n    /** \n     *  Must be called after inheritance and before 'define'.\n     */\n    static define( protoProps : MixableDefinition = {}, staticProps? : object ) : MixableConstructor {\n        const BaseClass : MixableConstructor = getBaseClass( this );\n\n        // Assign statics.\n        staticProps && assign( this, staticProps );\n\n        // Extract and apply mixins from the definition.\n        const { mixins, ...defineMixin } = protoProps;\n        mixins && this.mixins.merge( mixins );\n\n        // Unshift definition to the the prototype.\n        this.mixins.mergeObject( this.prototype, defineMixin, true );\n\n        // Unshift definition from statics to the prototype.\n        this.mixins.mergeObject( this.prototype, this.mixins.getStaticDefinitions( BaseClass ), true );\n\n        // Call onDefine hook, if it's present.\n        this.onDefine && this.onDefine( this.mixins.definitions, BaseClass );\n        \n        // Apply merge rules to inherited members. No mixins can be added after this point.\n        this.mixins.mergeInheritedMembers( BaseClass );\n\n        return this;\n    }\n\n    /** Backbone-compatible extend method to be used in ES5 and for backward compatibility */\n    static extend< T extends object>(spec? : T, statics? : {} ) : Subclass< T > {\n        let TheSubclass : Subclass< T >;\n\n        // 1. Create the subclass (ES5 compatibility shim).\n        // If constructor function is given...\n        if( spec && spec.hasOwnProperty( 'constructor' ) ){\n            // ...we need to manually call internal TypeScript __extend function. Hack! Hack!\n            TheSubclass = spec.constructor as any;\n            __extends( TheSubclass, this );\n        }\n        // Otherwise, create the subclall in usual way.\n        else{\n            TheSubclass = class Subclass extends this {} as any;\n        }\n\n        predefine( TheSubclass );\n        spec && TheSubclass.define( spec, statics );\n\n        return TheSubclass;\n    }\n}\n\n/** @decorator `@predefine` for forward definitions. Can be used with [[Mixable]] classes only.\n * Forwards the call to the [[Mixable.predefine]];\n */\nexport function predefine( Constructor : MixableConstructor ) : void {\n    const BaseClass : MixableConstructor = getBaseClass( Constructor );\n\n    // Legacy systems support\n    Constructor.__super__ = BaseClass.prototype;\n    \n    // Initialize mixins structures...\n    Constructor.define || MixinsState.get( Mixable ).populate( Constructor );\n\n    // Make sure Ctor.mixins are ready before the callback...\n    MixinsState.get( Constructor );\n\n    // Call extend hook.\n    Constructor.onExtend && Constructor.onExtend( BaseClass );\n}\n\n/** @decorator `@define` for metaprogramming magic. Can be used with [[Mixable]] classes only.\n *  Forwards the call to [[Mixable.define]].\n */\nexport function define( ClassOrDefinition : Function ) : void;\nexport function define( ClassOrDefinition : object ) : ClassDecorator;\nexport function define( ClassOrDefinition : object | MixableConstructor ){\n    // @define class\n    if( typeof ClassOrDefinition === 'function' ){\n        predefine( ClassOrDefinition );\n        ClassOrDefinition.define();\n    }\n    // @define({ prop : val, ... }) class\n    else{\n        return function( Ctor : MixableConstructor ){\n            predefine( Ctor );\n            Ctor.define( ClassOrDefinition );\n        }\n    }\n}\n\nexport function definitions( rules : MixinMergeRules ) : ClassDecorator {\n    return ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.definitionRules = defaults( hashMap(), rules, mixins.definitionRules );\n    }\n}\n\nexport function definitionDecorator( definitionKey, value ){\n    return ( proto : object, name : string ) => {\n        MixinsState\n            .get( proto.constructor )\n            .mergeObject( proto, {\n                [ definitionKey ] : {\n                    [ name ] : value\n                }\n            });\n    }\n}\n\nexport class MixinsState {\n    mergeRules : MixinMergeRules;\n    definitionRules : MixinMergeRules;\n    definitions : object = {};\n    appliedMixins : Mixin[];\n\n    // Return mixins state for the class. Initialize if it's not exist.\n    static get( Class ) : MixinsState {\n        const { mixins } = Class;\n    \n        return mixins && Class === mixins.Class ? mixins :\n             Class.mixins = new MixinsState( Class );\n    }\n\n    constructor( public Class : MixableConstructor ){\n        const { mixins } = getBaseClass( Class );\n\n        this.mergeRules = ( mixins && mixins.mergeRules ) || hashMap();\n        this.definitionRules = ( mixins && mixins.definitionRules ) || hashMap();\n        this.appliedMixins = ( mixins && mixins.appliedMixins ) || [];\n    }\n\n    getStaticDefinitions( BaseClass : Function ){\n        const definitions = hashMap(),\n            { Class } = this;\n\n        return transform( definitions, this.definitionRules, ( rule, name ) =>{\n            if( BaseClass[ name ] !== Class[ name ]){\n                return Class[ name ];\n            }\n        });\n    }\n\n    merge( mixins : Mixin[] ){\n        const proto      = this.Class.prototype,\n            { mergeRules } = this;\n\n        // Copy applied mixins array as it's going to be updated.\n        const appliedMixins = this.appliedMixins = this.appliedMixins.slice();\n\n        // Apply mixins in sequence...\n        for( let mixin of mixins ) {\n            // Mixins array should be flattened.\n            if( Array.isArray( mixin ) ) {\n                this.merge( mixin );\n            }\n            // Don't apply mixins twice.\n            else if( appliedMixins.indexOf( mixin ) < 0 ){\n                appliedMixins.push( mixin );\n\n                // For constructors, merge _both_ static and prototype members.\n                if( typeof mixin === 'function' ){\n                    if( getBaseClass( mixin ) !== Object ){\n                        //TODO log error\n                        console.log( 'Mixin error' );\n                    }\n\n                    // Merge static members\n                    this.mergeObject( this.Class, mixin );\n\n                    // merge definitionRules and mergeRules\n                    const sourceMixins = ( mixin as any ).mixins;\n                    if( sourceMixins ){\n                        this.mergeRules = defaults( hashMap(), this.mergeRules, sourceMixins.mergeRules );\n                        this.definitionRules = defaults( hashMap(), this.definitionRules, sourceMixins.definitionRules );\n                        this.appliedMixins = this.appliedMixins.concat( sourceMixins.appliedMixins );\n                    }\n\n                    // Prototypes are merged according with rules.\n                    this.mergeObject( proto, mixin.prototype );\n                }\n                // Handle plain object mixins.\n                else {\n                    this.mergeObject( proto, mixin );\n                }\n            }\n        }\n    }\n\n    populate( ...ctors : Function[] ){\n        for( let Ctor of ctors ) {\n            MixinsState.get( Ctor ).merge([ this.Class ]);\n        }\n    }\n\n    mergeObject( dest : object, source : object, unshift? : boolean ) {\n        forEachOwnProp( source, name => {\n            const sourceProp = Object.getOwnPropertyDescriptor( source, name );\n            let rule : MixinMergeRule;\n\n            if( rule = this.definitionRules[ name ] ){\n                assignProperty( this.definitions, name, sourceProp, rule, unshift );\n            }\n\n            if( !rule || rule === mixinRules.protoValue  ){\n                assignProperty( dest, name, sourceProp, this.mergeRules[ name ], unshift );\n            }\n        });\n    }\n\n    mergeInheritedMembers( BaseClass : Function ){\n        const { mergeRules, Class } = this;\n\n        if( mergeRules ){\n            const proto = Class.prototype,\n                baseProto = BaseClass.prototype;\n\n            for( let name in mergeRules ) {\n                const rule = mergeRules[ name ];\n\n                if( proto.hasOwnProperty( name ) && name in baseProto ){\n                    proto[ name ] = resolveRule( proto[ name ], baseProto[ name ], rule );\n                }\n            }\n        }\n    }\n}\n\nconst dontMix = {\n    function : hashMap({\n        length : true,\n        prototype : true,\n        caller : true,\n        arguments : true,\n        name : true,\n        __super__ : true\n    }),\n    \n    object : hashMap({\n        constructor : true\n    })    \n}\n\nfunction forEachOwnProp( object : object, fun : ( name : string ) => void ){\n    const ignore = dontMix[ typeof object ];\n\n    for( let name of Object.getOwnPropertyNames( object ) ) {\n        ignore[ name ] || fun( name );\n    }\n}\n\nexport interface MixinMergeRules {\n    [ name : string ] : MixinMergeRule\n}\n\nexport type MixinMergeRule = ( a : any, b : any ) => any\nexport type Mixin = { [ key : string ] : any } | Function\n\n// @mixins( A, B, ... ) decorator.\nexport interface MixinRulesDecorator {\n    ( rules : MixinMergeRules ) : ClassDecorator\n    value( a : object, b : object) : object;\n    protoValue( a : object, b : object) : object;\n    merge( a : object, b : object ) : object;\n    pipe( a: Function, b : Function ) : Function;\n    defaults( a: Function, b : Function ) : Function;\n    classFirst( a: Function, b : Function ) : Function;\n    classLast( a: Function, b : Function ) : Function;\n    every( a: Function, b : Function ) : Function;\n    some( a: Function, b : Function ) : Function;\n}\n\nexport const mixins = ( ...list : Mixin[] ) => (\n    ( Class : Function ) => MixinsState.get( Class ).merge( list )\n);\n\n// @mixinRules({ name : rule, ... }) decorator.\nexport const mixinRules = ( ( rules : MixinMergeRules ) => (\n    ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.mergeRules = defaults( rules, mixins.mergeRules );\n    }\n) ) as MixinRulesDecorator;\n\n// Pre-defined mixin merge rules\n\nmixinRules.value = ( a, b ) => a;\n\nmixinRules.protoValue = ( a, b ) => a;\n\n// Recursively merge members\nmixinRules.merge = ( a, b ) => defaults( {}, a, b );\n\n    // Execute methods in pipe, with the class method executed last.\nmixinRules.pipe = ( a, b ) => (\n    function( x : any ) : any {\n        return a.call( this, b.call( this, x ) );\n    }\n);\n\n    // Assume methods return an object, and merge results with defaults (class method executed first)\nmixinRules.defaults = ( a : Function, b : Function ) => (\n    function() : object {\n        return defaults( a.apply( this, arguments ), b.apply( this, arguments ) );\n    }\n);\n\n// Execute methods in sequence staring with the class method.\nmixinRules.classFirst = ( a : Function, b : Function ) => (\n    function() : void {\n        a.apply( this, arguments );\n        b.apply( this, arguments );\n    }\n);\n\n    // Execute methods in sequence ending with the class method.\nmixinRules.classLast = ( a : Function, b : Function ) => (\n    function() : void {\n        b.apply( this, arguments );\n        a.apply( this, arguments );\n    }\n)\n\n    // Execute methods in sequence returning the first falsy result.\nmixinRules.every = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) && b.apply( this, arguments );\n    }\n);\n    // Execute methods in sequence returning the first truthy result.\nmixinRules.some = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) || b.apply( this, arguments );\n    }\n);\n\n/**\n * Helpers\n */\n\nfunction assignProperty( dest : object, name : string, sourceProp : PropertyDescriptor, rule : MixinMergeRule, unshift? : boolean ){\n// Destination prop is defined, thus the merge rules must be applied.\n    if( dest.hasOwnProperty( name ) ){\n        const destProp = Object.getOwnPropertyDescriptor( dest, name );\n\n        if( destProp.configurable && 'value' in destProp ){\n            dest[ name ] = unshift ?\n                resolveRule( sourceProp.value, destProp.value, rule ) :\n                resolveRule( destProp.value, sourceProp.value, rule ) ;\n        }\n    }\n    // If destination is empty, just copy the prop over.\n    else{\n        Object.defineProperty( dest, name, sourceProp );\n    }\n}\n\nfunction resolveRule( dest, source, rule : MixinMergeRule ){\n    // When destination is empty, take the source.\n    if( dest === void 0 ) return source;\n\n    // In these cases we take non-empty destination:\n    if( !rule || source === void 0 ) return dest;\n\n    // In other cases we must merge values.\n    return rule( dest, source );\n}","import { once as _once } from './tools'\n\n/*******************\n * Prebuilt events map, used for optimized bulk event subscriptions.\n *\n * const events = new EventMap({\n *      'change' : true, // Resend this event from self as it is.\n *      'change:attr' : 'localTargetFunction',\n *      'executedInTargetContext' : function(){ ... }\n *      'executedInNativeContext' : '^props.handler'\n * })\n */\n/** @hidden */\nexport interface EventsDefinition {\n    [ events : string ] : Function | string | boolean\n}\n\n/** @hidden */\nexport class EventMap {\n    handlers : EventDescriptor[] = [];\n\n    constructor( map? : EventsDefinition | EventMap ){\n        if( map ){\n            if( map instanceof EventMap ){\n                this.handlers = map.handlers.slice();\n            }\n            else{\n                map && this.addEventsMap( map );\n            }\n        }\n    }\n\n    merge( map : EventMap ){\n        this.handlers = this.handlers.concat( map.handlers );\n    }\n\n    addEventsMap( map : EventsDefinition ){\n        for( let names in map ){\n            this.addEvent( names, map[ names ] )\n        }\n    }\n\n    bubbleEvents( names : string ){\n        for( let name of names.split( eventSplitter ) ){\n            this.addEvent( name, getBubblingHandler( name ) );\n        }\n    }\n\n    addEvent( names : string, callback : Function | string | boolean ){\n        const { handlers } = this;\n\n        for( let name of names.split( eventSplitter ) ){\n            handlers.push( new EventDescriptor( name, callback ) );\n        }\n    }\n\n    subscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            on( source, event.name, event.callback, target );\n        }\n    }\n\n    unsubscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            off( source, event.name, event.callback, target );\n        }\n    }\n}\n\n/** @hidden */\nexport class EventDescriptor {\n    callback : Function\n\n    constructor(\n        public name : string,\n        callback : Function | string | boolean\n    ){\n        if( callback === true ){\n            this.callback = getBubblingHandler( name );\n        }\n        else if( typeof callback === 'string' ){\n            this.callback =\n                function localCallback(){\n                    const handler = this[ callback ];\n                    handler && handler.apply( this, arguments );\n                };\n        }\n        else{\n            this.callback = <Function>callback;\n        }\n    }\n}\n\n/** @hidden */\nconst _bubblingHandlers = {};\n\n/** @hidden */\nfunction getBubblingHandler( event : string ){\n    return _bubblingHandlers[ event ] || (\n        _bubblingHandlers[ event ] = function( a?, b?, c?, d?, e? ){\n            if( d !== void 0 || e !== void 0 ) trigger5( this, event, a, b, c, d, e );\n            if( c !== void 0 ) trigger3( this, event, a, b, c );\n            else trigger2( this, event, a, b );\n        }\n    );\n}\n\n/** @hidden */\nexport interface HandlersByEvent {\n    [ name : string ] : EventHandler\n}\n\n/** @hidden */\nexport class EventHandler {\n    constructor( public callback : Callback, public context : any, public next = null ){}\n}\n\n/** @hidden */\nfunction listOff( _events : HandlersByEvent, name : string, callback : Callback, context : any ){\n    const head = _events[ name ];\n\n    let filteredHead, prev;\n\n    for( let ev = head; ev; ev = ev.next ){\n        // Element must be kept\n        if( ( callback && callback !== ev.callback && callback !== ev.callback._callback ) ||\n            ( context && context !== ev.context ) ){\n            \n            prev = ev;\n            filteredHead || ( filteredHead = ev );\n        }\n        // Element must be skipped\n        else{\n            if( prev ) prev.next = ev.next;\n        }\n    }\n\n    if( head !== filteredHead ) _events[ name ] = filteredHead;\n}\n\n/** @hidden */\nfunction listSend2( head : EventHandler, a, b ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b );\n}\n\n/** @hidden */\nfunction listSend3( head : EventHandler, a, b, c ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c );\n}\n\n/** @hidden */\nfunction listSend4( head : EventHandler, a, b, c, d ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d );\n}\n\n/** @hidden */\nfunction listSend5( head : EventHandler, a, b, c, d, e ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e );\n}\n\n/** @hidden */\nfunction listSend6( head : EventHandler, a, b, c, d, e, f ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e, f );\n}\n\n/** @hidden */\nexport interface Callback extends Function {\n    _callback? : Function\n}\n\n/** @hidden */\nexport function on( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const _events = source._events || ( source._events = Object.create( null ) );\n        _events[ name ] = new EventHandler( callback, context, _events[ name ] );\n    }\n}\n\n/** @hidden */\nexport function once( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const once : Callback = _once( function(){\n            off( source, name, once );\n            callback.apply(this, arguments);\n        });\n\n        once._callback = callback;\n        on( source, name, once, context );\n    }\n}\n\n/** @hidden */\nexport function off( source : EventSource, name? : string, callback? : Callback, context? : any ) : void {\n    const { _events } = source;\n    if( _events ){\n        if( callback || context ) {\n            if( name ){\n                listOff( _events, name, callback, context );\n            }\n            else{\n                for( let name in _events ){\n                    listOff( _events, name, callback, context );\n                }\n            }\n        }\n        else if( name ){\n            _events[ name ] = void 0;\n        }\n        else{\n            source._events = void 0;\n        }\n    }\n}\n\n/** @hidden */\nexport interface EventSource {\n    _events : HandlersByEvent\n}\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nexport function strings( api : ApiEntry, source : EventSource, events : string, callback : Callback, context ){\n    if( eventSplitter.test( events ) ){\n        const names = events.split( eventSplitter );\n        for( let name of names ) api( source, name, callback, context );\n    }\n    else api( source, events, callback, context );\n}\n\n/** @hidden */\nexport type ApiEntry = ( source : EventSource, event : string, callback : Callback, context? : any ) => void\n\n/*********************************\n * Event-triggering API\n */\n\n/** @hidden */\nexport function trigger2( self : EventSource, name : string, a, b ) : void {\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend2( queue, a, b );\n        listSend3( all, name, a, b );\n    }\n};\n\n/** @hidden */\nexport function trigger3( self : EventSource, name : string, a, b, c ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend3( queue, a, b, c );\n        listSend4( all, name, a, b, c );\n    }\n};\n\n/** @hidden */\nexport function trigger5( self : EventSource, name : string, a, b, c, d, e ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend5( queue, a, b, c, d, e );\n        listSend6( all, name, a, b, c, d, e );\n    }\n};","import { define, mixins, Mixable, Mixin, MixableConstructor, MixinsState, mixinRules, definitions, MixinMergeRules } from './mixins'\nimport { omit, transform } from './tools'\nimport { EventMap, EventsDefinition, EventSource, HandlersByEvent } from './eventsource'\nimport * as _eventsApi from './eventsource'\n\nconst { EventHandler, strings, on, off, once, trigger5, trigger2, trigger3 } = _eventsApi;\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nlet _idCount = 0;\n\n/** @hidden */\nfunction uniqueId() : string {\n    return 'l' + _idCount++;\n}\n\nexport { EventMap, EventsDefinition }\n\nexport interface MessengerDefinition {\n    _localEvents? : EventMap\n    localEvents? : EventsDefinition\n    properties? : PropertyMap\n    [ name : string ] : any\n}\n\nexport interface PropertyMap {\n    [ name : string ] : Property\n}\n\nexport type Property = PropertyDescriptor | ( () => any )\n\n/** @hidden */\nexport interface MessengersByCid {\n    [ cid : string ] : Messenger\n}\n\n/** @hidden */\nexport type CallbacksByEvents = { [ events : string ] : Function }\n\n/*************************\n * Messenger is mixable class with capabilities of sending and receiving synchronous events.\n * This class itself can serve as both mixin and base class.\n */\n\n@define\n@definitions({\n    properties : mixinRules.merge,\n    localEvents : mixinRules.merge\n})\nexport abstract class Messenger implements Mixable, EventSource {\n    // Define extendable mixin static properties.\n    static __super__ : object;\n    static mixins : MixinsState;\n    static onExtend : ( BaseClass : Function ) => void;\n    static define : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static extend : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static onDefine({ localEvents, _localEvents, properties } : MessengerDefinition, BaseClass? : typeof Mixable ){\n        // Handle localEvents definition\n        if( localEvents || _localEvents ){\n            const eventsMap = new EventMap( this.prototype._localEvents );\n\n            localEvents && eventsMap.addEventsMap( localEvents );\n            _localEvents && eventsMap.merge( _localEvents );\n            \n            this.prototype._localEvents = eventsMap;\n        }\n\n        // Handle properties definitions...\n        if( properties ){\n            Object.defineProperties( this.prototype, transform( {}, <PropertyMap>properties, toPropertyDescriptor ) );\n        }\n    }\n\n    /** @hidden */ \n    _events : HandlersByEvent = void 0;\n\n    /** @hidden */ \n    _listeningTo : MessengersByCid = void 0\n\n    /** Unique client-only id. */\n    cid : string\n\n    /** @hidden Prototype-only property to manage automatic local events subscription */ \n    _localEvents : EventMap\n\n    /** @hidden */ \n    constructor(){\n        this.cid = uniqueId();\n        this.initialize.apply( this, arguments );\n\n        // TODO: local events subscribe?\n    }\n\n    /** Method is called at the end of the constructor */\n    initialize() : void {}\n    \n    on( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( on, this, events, callback, context );\n        else for( let name in events ) strings( on, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    once( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( once, this, events, callback, context );\n        else for( let name in events ) strings( once, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    off( events? : string | CallbacksByEvents, callback?, context? ) : this {\n        if( !events ) off( this, void 0, callback, context );\n        else if( typeof events === 'string' ) strings( off, this, events, callback, context );\n        else for( let name in events ) strings( off, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger(name : string, a?, b?, c?, d?, e? ) : this {\n        if( d !== void 0 || e !== void 0 ) trigger5( this, name, a, b, c, d, e );\n        else if( c !== void 0 ) trigger3( this, name, a, b, c );\n        else trigger2( this, name, a, b );\n        return this;\n    }\n\n    listenTo( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.on( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    listenToOnce( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.once( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    stopListening( a_source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) : this {\n        const { _listeningTo } = this;\n        if( _listeningTo ){\n            const removeAll = !( a || b ),\n                  second = !b && typeof a === 'object' ? this : b;\n\n            if( a_source ){\n                const source = _listeningTo[ a_source.cid ];\n                if( source ){\n                    if( removeAll ) delete _listeningTo[ a_source.cid ];\n                    source.off( a, second, this );\n                }\n            }\n            else if( a_source == null ){\n                for( let cid in _listeningTo ) _listeningTo[ cid ].off( a, second, this );\n\n                if( removeAll ) ( this._listeningTo = void 0 );\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Destructor. Stops messenger from listening to all objects,\n     * and stop others from listening to the messenger. \n     */\n    _disposed : boolean\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        this.stopListening();\n        this.off();\n\n        this._disposed = true;\n    }\n}\n\n/**\n * Backbone 1.2 API conformant Events mixin.\n */\nexport const Events : Messenger = <Messenger> omit( Messenger.prototype, 'constructor', 'initialize' );\n\n/**\n * Messenger Private Helpers \n */\n\nfunction toPropertyDescriptor( x : Property ) : PropertyDescriptor {\n    if( x ){\n        return typeof x === 'function' ? { get : < () => any >x } : <PropertyDescriptor> x;\n    }\n}\n\n/** @hidden */\nfunction addReference( listener : Messenger, source : Messenger ){\n      const listeningTo = listener._listeningTo || (listener._listeningTo = Object.create( null ) ),\n            cid = source.cid || ( source.cid = uniqueId() );\n\n      listeningTo[ cid ] = source;\n}","// (c) 2016 Vlad Balin and Volicon\n// MixtureJS may be freely distributed under the MIT license. \n\nimport * as tools from './tools'\nexport { tools }\nexport * from './mixins'\nexport * from './events'\nimport * as eventsApi from './eventsource'\nexport { eventsApi }\n\nimport { Mixable, MixableConstructor } from './mixins'\n\ndeclare global {\n    interface ObjectConstructor {\n        /** Polyfill for Object.assign */\n        assign< T >( dest : T, ...sources : Object[] ) : T\n\n        /** Global logging interface, for console debugging. */\n        log : tools.Log\n\n        /** ES5 Object.extend */\n        extend( protoProps : {}, staticProps : {} ) : MixableConstructor\n    }\n}\n\nObject.extend = ( protoProps, staticProps ) => Mixable.extend( protoProps, staticProps );\nObject.assign || ( Object.assign = tools.assign );\nObject.log = tools.log;","export interface ChildrenErrors {\n    [ key : string ] : ValidationError | any\n} \n\nexport interface Validatable {\n    _validateNested( errors : ChildrenErrors ) : number;\n    validate( self : any ) : any\n    get( key : string ) : any\n}\n\n// Validation error object.\nexport class ValidationError {\n    // Invalid nested object keys \n    nested : ChildrenErrors \n    length : number\n\n    // Local error\n    error : any\n\n    constructor( obj : Validatable ){\n        this.length = obj._validateNested( this.nested = {} );\n\n        if( this.error = obj.validate( obj ) ){\n            this.length++;\n        }\n    }\n\n    each( iteratee : ( value : any, key : string ) => void ) : void {\n        const { error, nested } = this;\n\n        if( error ) iteratee( error, null );\n\n        for( const key in nested ){\n            iteratee( nested[ key ], key );\n        }\n    }\n\n    eachError( iteratee : ( error : any, key : string, object : Validatable ) => void, object : Validatable ) : void {\n        this.each( ( value : any, key : string ) => {\n            if( value instanceof ValidationError ){\n                (<ValidationError>value).eachError( iteratee, object.get( key ) );\n            }\n            else{\n                iteratee( value, key, object );\n            }\n        });\n    }\n}","/**\n * Some sketches for reference resolution.\n *\n * \n * a : Model.from( '~collection' )\n * \n * We need two functions. One for get, and one for compile. \n */\nexport interface Traversable {\n    getStore() : Traversable\n    getOwner() : Traversable\n    get( key : string ) : any \n}\n\nconst referenceMask =  /\\^|(store\\.[^.]+)|([^.]+)/g;\n\n// Compile reference to function\nexport type ResolveReference = ( root : Traversable ) => any;  \n\nexport class CompiledReference {\n    resolve : ResolveReference\n    tail : string\n    local : boolean\n\n    constructor( reference : string, splitTail : boolean = false ){\n        const path = reference\n                        .match( referenceMask )\n                        .map( key => {\n                            if( key === '^' || key === 'owner' ) return 'getOwner()';\n\n                            if( key[ 0 ] === '~' ) return `getStore().get(\"${ key.substr( 1 ) }\")`;\n\n                            if( key.indexOf( 'store.' ) === 0 ) return `getStore().get(\"${ key.substr( 6 ) }\")`;\n                            \n                            return key;\n                        } );\n               \n        this.tail = splitTail && path.pop();\n        this.local = !path.length;\n        \n        this.resolve = <any> new Function( 'self', `\n            var v = self.${ path.shift() };\n                           \n            ${ path.map( x => `\n                v = v && v.${ x };\n            `).join('')}\n\n            return v;\n        ` );\n    }\n}\n\nexport function resolveReference( root : Traversable, reference : string, action : ( object, key : string ) => any ) : any {\n    const path = reference.match( referenceMask ),\n          skip = path.length - 1;\n    \n    let self = root;\n\n    for( var i = 0; i < skip; i++ ){\n        const key = path[ i ];\n        switch( key ){\n            case '~' : self = self.getStore(); break;\n            case '^' : self = self.getOwner(); break;\n            default  : self = self.get( key );\n        }\n\n        // Do nothing if object on the path doesn't exist.\n        if( !self ) return;\n    }\n\n    return action( self, path[ skip ] );\n}","export interface IONode {\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise< any >\n}\n\nexport interface IOPromise<T> extends Promise<T> {\n    abort? : () => void\n}\n\nexport interface IOEndpoint {\n    list( options : IOOptions, collection? ) : IOPromise<any>\n    create( json : any, options : IOOptions, record? ) : IOPromise<any>\n    update( id : string | number, json :any, options : IOOptions, record? ) : IOPromise<any>\n    read( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    destroy( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    subscribe( events : IOEvents, collection? ) : IOPromise<any>\n    unsubscribe( events : IOEvents, collection? ) : void\n}\n\nexport interface IOOptions {\n    ioUpdate? : boolean\n}\n\nexport interface IOEvents {\n    updated? : ( json : any ) => void\n    removed? : ( json : any ) => void\n}\n\nexport function getOwnerEndpoint( self ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n\n/**\n * Create abortable promise.\n * Adds `promise.abort()` function which rejects the promise by default\n * initialize() function takes third optional argument `abort : ( resolve, reject ) => void`,\n * which can be used to add custom abort handling.\n */\ndeclare var Promise: PromiseConstructorLike;\n\nexport function createIOPromise( initialize : InitIOPromise ) : IOPromise<any>{\n    let resolve, reject, onAbort;\n\n    function abort( fn ){\n        onAbort = fn;\n    }\n\n    const promise : IOPromise<any> = new Promise( ( a_resolve, a_reject ) =>{\n        reject = a_reject;\n        resolve = a_resolve;\n        initialize( resolve, reject, abort );\n    }) as IOPromise<any>;\n\n    promise.abort = () => {\n        onAbort ? onAbort( resolve, reject ) : reject( new Error( \"I/O Aborted\" ) );\n    }\n\n    return promise;\n}\n\nexport type InitIOPromise = ( resolve : ( x? : any ) => void, reject : ( x? : any ) => void, abort? : ( fn : Function ) => void ) => void;\n\nexport function startIO( self : IONode, promise : IOPromise<any>, options : IOOptions, thenDo : ( json : any ) => any ) : IOPromise<any> {\n    // Stop pending I/O first...\n    abortIO( self );\n\n    // Mark future update transaction as IO transaction.\n    options.ioUpdate = true;\n\n    self._ioPromise = promise\n        .then( resp => {\n            self._ioPromise = null;\n    \n            const result = thenDo ? thenDo( resp ) : resp;\n                \n            triggerAndBubble( self, 'sync', self, resp, options );\n                \n            return result;\n        } )  \n        .catch( err => {\n            self._ioPromise = null;\n\n            console.error( err );\n            \n            triggerAndBubble( self, 'error', self, err, options );\n            \n            throw err;\n        } ) as IOPromise<any>;\n\n    self._ioPromise.abort = promise.abort;\n\n    return self._ioPromise;\n}\n\nexport function abortIO( self : IONode ){\n    if( self._ioPromise && self._ioPromise.abort ){\n        self._ioPromise.abort();\n        self._ioPromise = null;\n    }\n}\n\nexport function triggerAndBubble( eventSource, ...args ){\n    eventSource.trigger.apply( eventSource, args );\n    const { collection } = eventSource;\n    collection && collection.trigger.apply( collection, args ); \n}","import { Messenger, CallbacksByEvents, MessengersByCid, MixinsState, MixinMergeRules, MessengerDefinition, tools, mixins, mixinRules, definitions, eventsApi, define, Subclass } from './object-plus'\nimport { ValidationError, Validatable, ChildrenErrors } from './validation'\nimport { Traversable, resolveReference } from './traversable'\nimport { IOEndpoint, IOPromise, IONode, abortIO } from './io-tools'\n\nconst { assign } = tools,\n      { trigger2, trigger3, on, off } = eventsApi;\n/***\n * Abstract class implementing ownership tree, tho-phase transactions, and validation. \n * 1. createTransaction() - apply changes to an object tree, and if there are some events to send, transaction object is created.\n * 2. transaction.commit() - send and process all change events, and close transaction.\n */\n\n/** @private */\nexport interface TransactionalDefinition extends MessengerDefinition {\n    endpoint? : IOEndpoint\n}\n\nexport enum ItemsBehavior {\n    share       = 0b0001,\n    listen      = 0b0010,\n    persistent  = 0b0100\n}\n\n// Transactional object interface\n@define\n@definitions({\n    endpoint : mixinRules.value\n})\n@mixins( Messenger )\nexport abstract class Transactional implements Messenger, IONode, Validatable, Traversable {\n    // Mixins are hard in TypeScript. We need to copy type signatures over...\n    // Here goes 'Mixable' mixin.\n    static __super__ : object;\n    static mixins : MixinsState;\n    static define : ( definition? : TransactionalDefinition, statics? : object ) => typeof Transactional;\n    static extend : <T extends TransactionalDefinition>( definition? : T, statics? : object ) => any;\n\n    static onDefine( definitions : TransactionalDefinition, BaseClass : typeof Transactional ){\n        if( definitions.endpoint ) this.prototype._endpoint = definitions.endpoint;\n        Messenger.onDefine.call( this, definitions, BaseClass );\n    };\n\n    static onExtend( BaseClass : typeof Transactional ) : void {\n        // Make sure we don't inherit class factories.\n        if( BaseClass.create === this.create ) {\n            this.create = Transactional.create;\n        }\n    }\n\n    // Define extendable mixin static properties.\n    static create( a : any, b? : any ) : Transactional {\n        return new (this as any)( a, b );\n    }\n\n    /** Generic class factory. May be overridden for abstract classes. Not inherited. */\n    on : ( events : string | CallbacksByEvents, callback, context? ) => this\n    once : ( events : string | CallbacksByEvents, callback, context? ) => this\n    off : ( events? : string | CallbacksByEvents, callback?, context? ) => this\n    trigger      : (name : string, a?, b?, c?, d?, e? ) => this\n\n    stopListening : ( source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) => this\n    listenTo : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    listenToOnce : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    \n    _disposed : boolean;\n\n    // State accessor. \n    readonly __inner_state__ : any;\n\n    // Shared modifier (used by collections of shared models)\n    _shared? : number; \n    \n    dispose() : void {\n        if( this._disposed ) return;\n        \n        abortIO( this );\n        this._owner = void 0;\n        this._ownerKey = void 0;\n        this.off();\n        this.stopListening();\n        this._disposed = true;\n    }\n\n    // Must be called at the end of the constructor in the subclass.\n    initialize() : void {}\n\n    /** @private */\n    _events : eventsApi.HandlersByEvent = void 0;\n\n    /** @private */\n    _listeningTo : MessengersByCid\n\n    /** @private */\n    _localEvents : eventsApi.EventMap\n\n    cid : string\n    cidPrefix : string\n\n    static shared : any;\n\n    // Unique version token replaced on change\n    /** @private */\n    _changeToken : {} = {}\n\n    // true while inside of the transaction\n    /** @private */\n    _transaction : boolean = false;\n\n    // Holds current transaction's options, when in the middle of transaction and there're changes but is an unsent change event\n    /** @private */\n    _isDirty  : TransactionOptions = null;\n\n    // Backreference set by owner (Record, Collection, or other object)\n    /** @private */\n    _owner : Owner = void 0;\n\n    // Key supplied by owner. Used by record to identify attribute key.\n    // Only collections doesn't set the key, which is used to distinguish collections.\n    /** @private */  \n    _ownerKey : string = void 0;\n\n    // Name of the change event\n    /** @private */\n    _changeEventName : string\n\n    /**\n     * Subsribe for the changes.\n     */\n    onChanges( handler : Function, target? : Messenger ){\n        on( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Unsubscribe from changes.\n     */\n    offChanges( handler? : Function, target? : Messenger ){\n        off( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Listen to changes event. \n     */\n    listenToChanges( target : Transactional, handler ){\n        this.listenTo( target, target._changeEventName, handler );\n    }\n\n    constructor( cid : string | number ){\n        this.cid = this.cidPrefix + cid;\n    }\n\n    // Deeply clone ownership subtree\n    abstract clone( options? : CloneOptions ) : this\n    \n    // Execute given function in the scope of ad-hoc transaction.\n    transaction( fun : ( self : this ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = transactionApi.begin( this );\n        const update = fun.call( this, this );\n        update && this.set( update );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Loop through the members in the scope of transaction.\n    // Transactional version of each()\n    updateEach( iteratee : ( val : any, key : string | number ) => void, options? : TransactionOptions ){\n        const isRoot = transactionApi.begin( this );\n        this.each( iteratee );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( values : any, options? : TransactionOptions ) : this {\n        if( values ){ \n            const transaction = this._createTransaction( values, options );\n            transaction && transaction.commit();\n        } \n\n        return this;\n    }\n\n    // Assign transactional object \"by value\", copying aggregated items.\n    assignFrom( source : Transactional | Object ) : this {\n        this.set( ( <any>source ).__inner_state__ || source, { merge : true } );\n\n        // Synchronize change tokens\n        const { _changeToken } = source as any;\n\n        if( _changeToken ){\n            this._changeToken = _changeToken;\n        }\n\n        return this;\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.\n    // Returns null if there are no any changes.\n    /** @private */  \n    abstract _createTransaction( values : any, options? : TransactionOptions ) : Transaction | void\n    \n    // Parse function applied when 'parse' option is set for transaction.\n    parse( data : any, options? : TransactionOptions ) : any { return data }\n\n    // Convert object to the serializable JSON structure\n    abstract toJSON() : {}\n\n    /*******************\n     * Traversals and member access\n     */\n    \n    // Get object member by its key.\n    abstract get( key : string ) : any\n\n    // Get object member by symbolic reference.\n    deepGet( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.get ? object.get( key ) : object[ key ] );\n    }\n\n    //_isCollection : boolean\n\n    // Return owner skipping collections.\n    getOwner() : Owner {\n        return this._owner;\n    }\n\n    // Store used when owner chain store lookup failed. Static value in the prototype. \n    /** @private */\n    _defaultStore : Transactional\n\n    // Locate the closest store. Store object stops traversal by overriding this method. \n    getStore() : Transactional {\n        const { _owner } = this;\n        return _owner ? <Transactional> _owner.getStore() : this._defaultStore;\n    }\n\n\n    /***************************************************\n     * Iteration API\n     */\n\n    // Loop through the members. Must be efficiently implemented in container class.\n    abstract each( iteratee : ( val : any, key : string | number ) => void, context? : any )\n\n    // Map members to an array\n    map<T>( iteratee : ( val : any, key : string | number ) => T, context? : any ) : T[]{\n        const arr : T[] = [],\n              fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee;\n        \n        this.each( ( val, key ) => {\n            const result = fun( val, key );\n            if( result !== void 0 ) arr.push( result );\n        } );\n\n        return arr;\n    }\n\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise<any>\n\n    hasPendingIO() : IOPromise<any> { return this._ioPromise; }\n\n    fetch( options? : object ) : IOPromise<any> { throw new Error( \"Not implemented\" ); }\n\n    getEndpoint() : IOEndpoint {\n        return getOwnerEndpoint( this ) || this._endpoint;\n    }\n\n    // Map members to an object\n    mapObject<T>( iteratee : ( val : any, key : string | number ) => T, context? : any ) : { [ key : string ] : T }{\n        const obj : { [ key : string ] : T } = {},\n            fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee;\n        \n        this.each( ( val, key ) => {\n            const result = iteratee( val, key );\n            if( result !== void 0 ) obj[ key ] = result;\n        } );\n\n        return obj;\n    }\n    \n    /*********************************\n     * Validation API\n     */\n\n    // Lazily evaluated validation error\n    /** @private */\n    _validationError : ValidationError = void 0\n\n    // Validate ownership tree and return valudation error \n    get validationError() : ValidationError {\n        const error = this._validationError || ( this._validationError = new ValidationError( this ) );\n        return error.length ? error : null; \n    }\n\n    // Validate nested members. Returns errors count.\n    /** @private */\n    abstract _validateNested( errors : ChildrenErrors ) : number\n\n    // Object-level validator. Returns validation error.\n    validate( obj? : Transactional ) : any {}\n\n    // Return validation error (or undefined) for nested object with the given key. \n    getValidationError( key : string ) : any {\n        var error = this.validationError;\n        return ( key ? error && error.nested[ key ] : error ) || null;\n    }\n\n    // Get validation error for the given symbolic reference.\n    deepValidationError( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.getValidationError( key ) );\n    }\n\n    // Iterate through all validation errors across the ownership tree.\n    eachValidationError( iteratee : ( error : any, key : string, object : Transactional ) => void ) : void {\n        const { validationError } = this;\n        validationError && validationError.eachError( iteratee, this );\n    }\n\n    // Check whenever member with a given key is valid. \n    isValid( key : string ) : boolean {\n        return !this.getValidationError( key );\n    }\n\n    valueOf() : Object { return this.cid; }\n    toString(){ return this.cid; }\n\n    // Get class name for an object instance. Works fine with ES6 classes definitions (not in IE).\n    getClassName() : string {\n        const { name } = <any>this.constructor;\n        if( name !== 'Subclass' ) return name;\n    }\n\n    // Logging interface for run time errors and warnings.\n    abstract _log( level : string, text : string, value : any ) : void;\n}\n\nexport interface CloneOptions {\n    // 'Pin store' shall assign this._defaultStore = this.getStore();\n    pinStore? : boolean\n}\n\n// Owner must accept children update events. It's an only way children communicates with an owner.\n/** @private */\nexport interface Owner extends Traversable, Messenger {\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void;\n    getOwner() : Owner\n    getStore() : Transactional\n}\n\n// Transaction object used for two-phase commit protocol.\n// Must be implemented by subclasses.\n// Transaction must be created if there are actual changes and when markIsDirty returns true.\n/** @private */ \nexport interface Transaction {\n    // Object transaction is being made on.\n    object : Transactional\n\n    // Send out change events, process update triggers, and close transaction.\n    // Nested transactions must be marked with isNested flag (it suppress owner notification).\n    commit( initiator? : Transactional )\n}\n\n// Options for distributed transaction  \nexport interface TransactionOptions {\n    // Invoke parsing \n    parse? : boolean\n\n    // Suppress change notifications and update triggers\n    silent? : boolean\n\n    // Update existing transactional members in place, or skip the update (ignored by models)\n    merge? : boolean // =true\n\n    // Should collections remove elements in set (ignored by models)  \n    remove? : boolean // =true\n\n    // Always replace enclosed objects with new instances\n    reset? : boolean // = false\n\n    // Do not dispose aggregated members\n    unset? : boolean\n\n    validate? : boolean\n\n    // `true` if the transaction is initiated as a result of IO operation\n    ioUpdate? : boolean\n\n    // The hint for IOEndpoint\n    // If `true`, `record.save()` will behave as \"upsert\" operation for the records having id.\n    upsert? : boolean\n}\n\n/**\n * Low-level transactions API. Must be used like this:\n * const isRoot = begin( record );\n * ...\n * isRoot && commit( record, options );\n * \n * When committing nested transaction, the flag must be set to true. \n * commit( object, options, isNested ) \n */\n\nexport const transactionApi = {\n    // Start transaction. Return true if it's the root one.\n    /** @private */\n    begin( object : Transactional ) : boolean {\n        return object._transaction ? false : ( object._transaction = true );  \n    },\n\n    // Mark object having changes inside of the current transaction.\n    // Returns true whenever there notifications are required.\n    /** @private */\n    markAsDirty( object : Transactional, options : TransactionOptions ) : boolean {\n        // If silent option is in effect, don't set isDirty flag.\n        const dirty = !options.silent;\n        if( dirty ) object._isDirty = options;\n        \n        // Reset version token.\n        object._changeToken = {};\n\n        // Object is changed, so validation must happen again. Clear the cache.\n        object._validationError = void 0;\n\n        return dirty;\n    },\n\n    // Commit transaction. Send out change event and notify owner. Returns true if there were changes.\n    // Must be executed for the root transaction only.\n    /** @private */\n    commit( object : Transactional, initiator? : Transactional ){\n        let originalOptions = object._isDirty;\n\n        if( originalOptions ){\n            // Send the sequence of change events, handling chained handlers.\n            while( object._isDirty ){\n                const options = object._isDirty;\n                object._isDirty = null; \n                trigger3( object, object._changeEventName, object, options, initiator );\n            }\n            \n            // Mark transaction as closed.\n            object._transaction = false;\n\n            // Notify owner on changes out of transaction scope.  \n            const { _owner } = object;  \n            if( _owner && _owner !== <any> initiator ){ // If it's the nested transaction, owner is already aware there are some changes.\n                _owner._onChildrenChange( object, originalOptions );\n            }\n        }\n        else{\n            // No changes. Silently close transaction.\n            object._isDirty = null;\n            object._transaction = false;\n        }\n    },\n\n    /************************************\n     * Ownership management\n     */\n\n    // Add reference to the record.\n    /** @private */\n    aquire( owner : Owner, child : Transactional, key? : string ) : boolean {\n        if( !child._owner ){\n            child._owner = owner;\n            child._ownerKey = key;\n            return true;\n        }\n\n        return child._owner === owner;\n    },\n\n    // Remove reference to the record.\n    /** @private */\n    free( owner : Owner, child : Transactional ) : void {\n        if( owner === child._owner ){\n            child._owner = void 0;\n            child._ownerKey = void 0;\n        }\n    }\n}\n\nfunction getOwnerEndpoint( self : Transactional ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self as any;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner as any;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n","import { Transactional, Transaction, TransactionOptions, Owner, transactionApi } from \"../../transactions\"\nconst { begin : _begin, markAsDirty : _markAsDirty, commit } = transactionApi;\n\nimport { eventsApi } from '../../object-plus'\nconst { trigger3 } = eventsApi;\n\nexport interface ConstructorsMixin {\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n}\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\nexport type AttributesConstructor = new ( record : AttributesContainer, values : object, options : TransactionOptions ) => AttributesValues;\nexport type AttributesCopyConstructor = new ( values : object ) => AttributesValues;\n\nexport interface AttributesContainer extends Transactional, Owner, ConstructorsMixin {\n    // Attribute descriptors.\n    _attributes : AttributesDescriptors\n\n    // Attribute values.\n    attributes : AttributesValues\n\n    // Previous attribute values.\n    _previousAttributes : AttributesValues\n\n    // Changed attributes cache. \n    _changedAttributes : AttributesValues\n}\n\nexport interface AttributesValues {\n    [ name : string ] : any\n}\n\nexport interface AttributesDescriptors {\n    [ name : string ] : AttributeUpdatePipeline\n}\n\nexport interface AttributeUpdatePipeline{\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : Transaction[] ) : boolean\n}\n\n // Optimized single attribute transactional update. To be called from attributes setters\n // options.silent === false, parse === false. \nexport function setAttribute( record : AttributesContainer, name : string, value : any ) : void {\n    // Open the transaction.\n    const isRoot  = begin( record ),\n          options = {};\n\n    // Update attribute.      \n    if( record._attributes[ name ].doUpdate( value, record, options ) ){\n        // Notify listeners on changes.\n        markAsDirty( record, options );\n        trigger3( record, 'change:' + name, record, record.attributes[ name ], options );\n    }\n\n    // Close the transaction.\n    isRoot && commit( record );\n}\n\nfunction begin( record : AttributesContainer ){\n    if( _begin( record ) ){\n        record._previousAttributes = new record.AttributesCopy( record.attributes );\n        record._changedAttributes = null;\n        return true;\n    }\n    \n    return false;\n}\n\nfunction markAsDirty( record : AttributesContainer, options : TransactionOptions ){\n    // Need to recalculate changed attributes, when we have nested set in change:attr handler\n    if( record._changedAttributes ){\n        record._changedAttributes = null;\n    }\n\n    return _markAsDirty( record, options );\n}\n\n/**\n * TODO: There's an opportunity to create an optimized pipeline for primitive types and Date, which makes the majority\n * of attributes. It might create the major speedup.\n * \n * Create the dedicated pipeline for owned and shared attributes as well.\n * \n * Three elements of the pipeline:\n * - from constructor\n * - from assignment\n * - from `set`\n */\n\nexport const UpdateRecordMixin = {\n// Need to override it here, since begin/end transaction brackets are overriden. \n    transaction( this : AttributesContainer, fun : ( self : AttributesContainer ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = begin( this );\n        fun.call( this, this );\n        isRoot && commit( this );\n    },\n            \n    // Handle nested changes. TODO: propagateChanges == false, same in transaction.\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void {\n        const { _ownerKey } = child,\n              attribute = this._attributes[ _ownerKey ];\n\n        if( !attribute /* TODO: Must be an opposite, likely the bug */ || attribute.propagateChanges ) this.forceAttributeChange( _ownerKey, options );\n    },\n\n    // Simulate attribute change \n    forceAttributeChange( key : string, options : TransactionOptions = {} ){\n        // Touch an attribute in bounds of transaction\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            trigger3( this, 'change:' + key, this, this.attributes[ key ], options );\n        }\n        \n        isRoot && commit( this );\n    },\n\n    _createTransaction( this : AttributesContainer, a_values : {}, options : TransactionOptions = {} ) : Transaction {\n        const isRoot = begin( this ),\n                changes : string[] = [],\n                nested : RecordTransaction[]= [],\n                { _attributes } = this,\n                values = options.parse ? this.parse( a_values, options ) : a_values;\n\n        let unknown;\n\n        if( shouldBeAnObject( this, values ) ){\n            for( let name in values ){\n                const spec = _attributes[ name ];\n\n                if( spec ){\n                    if( spec.doUpdate( values[ name ], this, options, nested ) ){\n                        changes.push( name );\n                    }\n                }\n                else{\n                    unknown || ( unknown = [] );\n                    unknown.push( `'${ name }'` );\n                }\n            }\n\n            if( unknown ){\n                // this._log( 'warn', `Undefined attributes ${ unknown.join(', ')} are ignored!`, values );\n            }\n        }\n        \n        if( changes.length && markAsDirty( this, options ) ){\n            return new RecordTransaction( this, isRoot, nested, changes );\n        }\n        \n        // No changes, but there might be silent attributes with open transactions.\n        for( let pendingTransaction of nested ){\n            pendingTransaction.commit( this );\n        }\n\n        isRoot && commit( this );\n    }\n};\n\n// One of the main performance tricks of Type-R.\n// Create loop unrolled constructors for internal attribute hash,\n// so the hidden class JIT optimization will be engaged and they will become static structs.\n// It dramatically improves record performance.\nexport function constructorsMixin( attrDefs : AttributesDescriptors ) : ConstructorsMixin {\n    const attrs = Object.keys( attrDefs );\n\n    const AttributesCopy : AttributesCopyConstructor = new Function( 'values', `\n        ${ attrs.map( attr =>`\n            this.${ attr } = values.${ attr };\n        `).join( '' ) }\n    `) as any;\n\n    AttributesCopy.prototype = Object.prototype;\n\n    const Attributes : AttributesConstructor = new Function( 'record', 'values', 'options', `\n        var _attrs = record._attributes;\n\n        ${ attrs.map( attr =>`\n            this.${ attr } = _attrs.${ attr }.doInit( values.${ attr }, record, options );\n        `).join( '' ) }\n    `) as any;\n\n    Attributes.prototype = Object.prototype;\n\n    return { Attributes, AttributesCopy };\n}\n\nexport function shouldBeAnObject( record : AttributesContainer, values : object ){\n    if( values && values.constructor === Object ) return true;\n\n    record._log( 'warn', 'update with non-object is ignored!', { values } );\n    return false;\n}\n\n// Transaction class. Implements two-phase transactions on object's tree. \n// Transaction must be created if there are actual changes and when markIsDirty returns true. \nexport class RecordTransaction implements Transaction {\n    // open transaction\n    constructor( public object : AttributesContainer,\n                 public isRoot : boolean,\n                 public nested : Transaction[],\n                 public changes : string[] ){}\n\n    // commit transaction\n    commit( initiator? : AttributesContainer ) : void {\n        const { nested, object, changes } = this;\n\n        // Commit all pending nested transactions...\n        for( let transaction of nested ){ \n            transaction.commit( object );\n        }\n\n        // Notify listeners on attribute changes...\n        // Transaction is never created when silent option is set, so just send events out.\n        const { attributes, _isDirty } = object;\n        for( let key of changes ){\n            trigger3( object, 'change:' + key, object, attributes[ key ], _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}","import { setAttribute, AttributesContainer, AttributeUpdatePipeline, RecordTransaction } from './updates'\nimport { tools } from '../../object-plus'\nimport { Owner, Transactional, TransactionOptions } from '../../transactions'\nimport { IOEndpoint } from '../../io-tools'\n\nconst { notEqual, assign} = tools;\n\ndeclare global {\n    interface Function {\n        _attribute : typeof AnyType\n    }\n}\n\nexport type Transform = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => any;\nexport type ChangeHandler = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => void;\n\nexport interface AttributeOptions {\n    _attribute? : typeof AnyType\n    validate? : ( record : AttributesContainer, value : any, key : string ) => any\n    isRequired? : boolean\n    changeEvents? : boolean\n\n    endpoint? : IOEndpoint\n\n    type? : Function\n    value? : any\n    hasCustomDefault? : boolean\n\n    parse? : Parse\n    toJSON? : AttributeToJSON\n   \n    getHooks? : GetHook[]\n    transforms? : Transform[]\n    changeHandlers? : ChangeHandler[]\n\n    _onChange? : ChangeAttrHandler\n}\n\nexport type Parse = ( value : any, key : string ) => any;\nexport type GetHook = ( value : any, key : string ) => any;\nexport type AttributeToJSON = ( value : any, key : string ) => any\nexport type AttributeParse = ( value : any, key : string ) => any\nexport type ChangeAttrHandler = ( ( value : any, attr : string ) => void ) | string;\n\n// TODO: interface differs from options, do something obout it\nconst emptyOptions : TransactionOptions = {};\n\n/**\n * Typeless attribute. Is the base class for all other attributes.\n */\nexport class AnyType implements AttributeUpdatePipeline {\n    // Factory method to create attribute from options \n    static create( options : AttributeOptions, name : string ) : AnyType {\n        const type = options.type,\n              AttributeCtor = options._attribute || ( type ? type._attribute : AnyType );\n\n        return new AttributeCtor( name, options );\n    }\n    /**\n     * Update pipeline functions\n     * =========================\n     *\n     * Stage 0. canBeUpdated( value )\n     * - presence of this function implies attribute's ability to update in place.\n     */\n    canBeUpdated( prev, next, options : TransactionOptions ) : any {}\n\n    /**\n     * Stage 1. Transform stage\n     */\n    transform( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    // convert attribute type to `this.type`.\n    convert( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    /**\n     * Stage 2. Check if attr value is changed\n     */\n    isChanged( a : any, b : any ) : boolean {\n        return notEqual( a, b );\n    }\n\n    /**\n     * Stage 3. Handle attribute change\n     */\n    handleChange( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) {}\n\n    /**\n     * End update pipeline definitions.\n     */\n\n    // create empty object passing backbone options to constructor...\n    create() { return void 0; }\n\n    // generic clone function for typeless attributes\n    // Must be overriden in sublass\n    clone( value : any, record : AttributesContainer ) {\n        return value;\n    }\n\n    dispose( record : AttributesContainer, value : any ) : void {\n        this.handleChange( void 0, value, record, emptyOptions );\n    }\n\n    validate( record : AttributesContainer, value : any, key : string ){}\n\n    toJSON( value, key ) {\n        return value && value.toJSON ? value.toJSON() : value;\n    }\n\n    createPropertyDescriptor() : PropertyDescriptor | void {\n        const { name, getHook } = this;\n\n        if( name !== 'id' ){\n            return {\n                // call to optimized set function for single argument.\n                set( value ){\n                    setAttribute( this, name, value );\n                },\n\n                // attach get hook to the getter function, if it present\n                get : (\n                    getHook ?\n                        function() {\n                            return getHook.call( this, this.attributes[ name ], name );\n                        } :\n                        function() { return this.attributes[ name ]; }\n                )\n            }\n        }\n    }\n\n    value : any\n\n    // Used as global default value for the given metatype\n    static defaultValue : any;\n\n    type : Function\n\n    initialize( name : string, options : TransactionOptions ){}\n\n    options : AttributeOptions\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        const v = value === void 0 ? this.defaultValue() : value,\n            x = this.transform( v, void 0, record, options );\n            \n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\n        const { name } = this,\n            { attributes } = record,\n              prev = attributes[ name ];\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ name ] = next;\n\n        if( this.isChanged( next, prev ) ) {\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n            return true;\n        }\n\n        return false;\n    }\n\n    propagateChanges : boolean\n\n    _log( level : tools.LogLevel, text : string, value, record : AttributesContainer ){\n        tools.log( level, `[Attribute Update Error] ${ record.getClassName() }.${ this.name }: ` + text, {\n            'Record' : record,\n            'Attribute definition' : this,\n            'Prev. value' : record.attributes[ this.name ],\n            'New value' : value\n        });\n    }\n\n    defaultValue(){\n        return this.value;\n    }\n\n    parse : Parse\n\n    constructor( public name : string, a_options : AttributeOptions ) {        \n        // Save original options...\n        this.options = a_options;\n\n        // Clone options.\n        const options : AttributeOptions = assign( { getHooks : [], transforms : [], changeHandlers : [] }, a_options );\n        options.getHooks = options.getHooks.slice();\n        options.transforms = options.transforms.slice();\n        options.changeHandlers = options.changeHandlers.slice();\n\n        const {\n                  value, type, parse, toJSON, changeEvents,\n                  validate, getHooks, transforms, changeHandlers\n              } = options;\n\n        // Initialize default value...\n        this.value = value;\n        this.type  = type;\n\n        // TODO: An opportunity to optimize for attribute subtype.\n        if( !options.hasCustomDefault && type ){\n            this.defaultValue = this.create;\n        }\n        else if( tools.isValidJSON( value ) ){ \n            // JSON literals must be deep copied.\n            this.defaultValue = new Function( `return ${ JSON.stringify( value ) };` ) as any;\n        }\n        else{\n            this.defaultValue = this.defaultValue;\n        }\n\n        // Changes must be bubbled when they are not disabled for an attribute and transactional object.\n        this.propagateChanges = changeEvents !== false;\n\n        this.toJSON = toJSON === void 0 ? this.toJSON : toJSON;\n\n        this.validate = validate || this.validate;\n        \n        if( options.isRequired ){\n            this.validate = wrapIsRequired( this.validate );\n        }\n\n        /**\n         * Assemble pipelines...\n         */\n\n        // `convert` is default transform, which is always present...\n        transforms.unshift( this.convert );\n\n        // Attribute-level parse transform must always go first...\n        this.parse = parse || this.parse;\n\n        // Get hook from the attribute will be used first...\n        if( this.get ) getHooks.unshift( this.get );\n\n        // let subclasses configure the pipeline...\n        this.initialize.call( this, options );\n\n        // let attribute spec configure the pipeline...\n        if( getHooks.length ){\n            const getHook = this.getHook = getHooks.reduce( chainGetHooks );\n\n            const { validate } = this;\n            this.validate = function( record : AttributesContainer, value : any, key : string ){\n                return validate.call( this, record, getHook.call( record, value, key ), key );\n            }\n        }\n        \n        this.transform = transforms.length ? transforms.reduce( chainTransforms ) : this.transform;\n        \n        this.handleChange = changeHandlers.length ? changeHandlers.reduce( chainChangeHandlers ) : this.handleChange;\n    }\n\n    getHook : ( value, key : string ) => any = null\n    get : ( value, key : string ) => any\n}\n\n\nfunction chainGetHooks( prevHook : GetHook, nextHook : GetHook ) : GetHook {\n    return function( value, name ) {\n        return nextHook.call( this, prevHook.call( this, value, name ), name );\n    }\n}\n\nfunction chainTransforms( prevTransform : Transform, nextTransform : Transform ) : Transform {\n    return function( next, prev, record, options ) {\n        return nextTransform.call( this, prevTransform.call( this, next, prev, record, options ), prev, record, options );\n    }\n}\n\nfunction chainChangeHandlers( prevHandler : ChangeHandler, nextHandler : ChangeHandler ) : ChangeHandler {\n    return function( next, prev, record, options ) {\n        prevHandler.call( this, next, prev, record, options );\n        nextHandler.call( this, next, prev, record, options );\n    }\n}\n\nfunction wrapIsRequired( validate ){\n    return function( record : AttributesContainer, value : any, key : string ){\n        return value ? validate.call( this, record, value, key ) : 'Required';\n    }\n}","import { AnyType } from './any'\nimport { Owner, transactionApi, Transactional, ItemsBehavior, TransactionOptions } from '../../transactions'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer, ConstructorOptions } from './updates'\nimport { ValidationError } from '../../validation'\n\nconst { free, aquire } = transactionApi;\n\nexport class AggregatedType extends AnyType {\n    type : typeof Transactional\n\n    clone( value : Transactional ) : Transactional {\n        return value ? value.clone() : value;\n    }\n\n    toJSON( x ){ return x && x.toJSON(); }\n\n    doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null ){\n            if( next instanceof this.type ){\n                // In case if merge option explicitly specified, force merge.\n                if( options.merge ) return next.__inner_state__;\n            }\n            else{\n                return next;\n            }\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        // Invoke class factory to handle abstract classes\n        if( next == null ) return next;\n        \n        if( next instanceof this.type ){\n            if( next._shared && !( next._shared & ItemsBehavior.persistent ) ) { // TODO: think more about shared types assignment compatibility. \n                this._log( 'error', 'aggregated collection attribute is assigned with shared collection', next, record );\n            }\n\n            // With explicit 'merge' option we need to clone an object if its previous value was 'null'.\n            // This is an only case we could be here when merge === true.\n            return options.merge ? next.clone() : next;\n        }\n\n        return <any>this.type.create( next, options );\n    }\n\n    dispose ( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    validate( record : AttributesContainer, value : Transactional ) : ValidationError {\n        var error = value && value.validationError;\n        if( error ) return error;\n    }\n\n    create() : Transactional {\n        return (<any>this.type).create(); // this the subclass of Transactional here.\n    }\n\n    initialize( options ){\n        options.changeHandlers.unshift( this._handleChange );\n    }\n\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options : TransactionOptions ){\n        if( prev ){\n            free( record, prev );\n            options.unset || prev.dispose();\n        } \n        \n        if( next && !aquire( record, next, this.name ) ){\n            this._log( 'error', 'aggregated attribute assigned with object already having an owner', next, record );\n        }\n    }\n}","/**\n * Type spec engine. Declare attributes using chainable syntax,\n * and returns object with spec.\n */\nimport { Transactional } from '../../transactions'\nimport { ChangeAttrHandler, AttributeOptions, Parse } from './any'\nimport {  AttributesContainer } from './updates'\nimport { EventMap, EventsDefinition, definitionDecorator, tools } from '../../object-plus'\nimport { IOEndpoint } from '../../io-tools'\n\nconst { assign } = tools;\n\nexport interface AttributeCheck {\n    ( value : any, key : string ) : boolean\n    error? : any\n}\n\nexport class ChainableAttributeSpec {\n    options : AttributeOptions;\n\n    constructor( options : AttributeOptions ) {\n        // Shallow copy options, fill it with defaults.\n        this.options = { getHooks : [], transforms : [], changeHandlers : []};\n        if( options ) assign( this.options, options );\n    }\n\n    check( check : AttributeCheck, error? : any ) : ChainableAttributeSpec {\n        function validate( model, value, name ){\n            if( !check.call( model, value, name ) ){\n                const msg = error || check.error || name + ' is not valid';\n                return typeof msg === 'function' ? msg.call( model, name ) : msg;\n            }\n        }\n\n        const prev = this.options.validate;\n\n        return this.metadata({\n            validate : prev ? (\n                            function( model, value, name ){\n                                return prev( model, value, name ) || validate( model, value, name );\n                            }\n                       ) : validate\n        });\n    }\n\n    get asProp(){\n        return definitionDecorator( 'attributes', this );\n    }\n\n    get isRequired() : ChainableAttributeSpec {\n        return this.metadata({ isRequired : true }); \n    }\n\n    endpoint( endpoint : IOEndpoint ){\n        return this.metadata({ endpoint });\n    }\n\n    watcher( ref : string | ( ( value : any, key : string ) => void ) ) : ChainableAttributeSpec {\n        return this.metadata({ _onChange : ref });\n    }\n\n    // Attribute-specific parse transform\n    parse( fun : Parse ) : ChainableAttributeSpec {\n        return this.metadata({ parse : fun });\n    }\n\n    toJSON( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            toJSON : typeof fun === 'function' ? fun : ( fun ? x => x && x.toJSON() : emptyFunction ) \n        });\n    }\n\n    // Attribute get hook.\n    get( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            getHooks : this.options.getHooks.concat( fun )\n        });\n    }\n\n    // Attribute set hook.\n    set( fun ) : ChainableAttributeSpec {\n        function handleSetHook( next, prev, record : AttributesContainer, options ) {\n            if( this.isChanged( next, prev ) ) {\n                const changed = fun.call( record, next, this.name );\n                return changed === void 0 ? prev : this.convert( changed, prev, record, options );\n            }\n\n            return prev;\n        }\n\n        return this.metadata({\n            transforms : this.options.transforms.concat( handleSetHook )\n        });\n    }\n\n    changeEvents( events : boolean ) : ChainableAttributeSpec {\n        return this.metadata({ changeEvents : events });\n    }\n\n    // Subsribe to events from an attribute.\n    events( map : EventsDefinition ) : ChainableAttributeSpec {\n        const eventMap = new EventMap( map );\n\n        function handleEventsSubscribtion( next, prev, record : AttributesContainer ){\n            prev && prev.trigger && eventMap.unsubscribe( record, prev );\n\n            next && next.trigger && eventMap.subscribe( record, next );\n        }\n\n        return this.metadata({\n            changeHandlers : this.options.changeHandlers.concat( handleEventsSubscribtion )\n        });\n    }\n\n    // Creates a copy of the spec.\n    get has() : ChainableAttributeSpec {\n        return this;\n    }\n\n    metadata( options : AttributeOptions ) : ChainableAttributeSpec {\n        const cloned = new ChainableAttributeSpec( this.options );\n        assign( cloned.options, options );\n        return cloned;\n    }\n\n    value( x ) : ChainableAttributeSpec {\n        return this.metadata({ value : x, hasCustomDefault : true });\n    }\n}\n\nfunction emptyFunction(){}\n\ndeclare global {\n    interface Function{\n        value : ( x : any ) => ChainableAttributeSpec;\n        isRequired : ChainableAttributeSpec;\n        asProp : PropertyDecorator\n        has : ChainableAttributeSpec;\n    }\n}\n\nFunction.prototype.value = function( x ) {\n    return new ChainableAttributeSpec( { type : this, value : x, hasCustomDefault : true } );\n};\n\nObject.defineProperty( Function.prototype, 'isRequired', {\n    get() { return this._isRequired || this.has.isRequired; },\n    set( x ){ this._isRequired = x; }\n});\n\nObject.defineProperty( Function.prototype, 'asProp', {\n    get() { return this.has.asProp; },\n});\n\nObject.defineProperty( Function.prototype, 'has', {\n    get() {\n        // workaround for sinon.js and other libraries overriding 'has'\n        return this._has || new ChainableAttributeSpec( {\n            type : this,\n            value : this._attribute.defaultValue,\n            hasCustomDefault : this._attribute.defaultValue !== void 0\n        } );\n    },\n\n    set( value ) { this._has = value; }\n} );\n\nexport function toAttributeOptions( spec : any ) : AttributeOptions {\n    let attrSpec : ChainableAttributeSpec;\n\n    if( typeof spec === 'function' ) {\n        attrSpec = spec.has;\n    }\n    else if( spec && spec instanceof ChainableAttributeSpec ) {\n        attrSpec = spec;\n    }\n    else{\n        // Infer type from value.\n        const type = inferType( spec );\n\n        // Transactional types inferred from values must have shared type. \n        if( type && type.prototype instanceof Transactional ){\n            attrSpec = (<any>type).shared.value( spec );\n        }\n        // All others will be created in regular way.\n        else{\n            attrSpec = new ChainableAttributeSpec({ type : type, value : spec, hasCustomDefault : true });\n        }\n    }\n \n    return attrSpec.options;\n}\n\nfunction inferType( value : {} ) : Function {\n    switch( typeof value ) {\n        case 'number' :\n            return Number;\n        case 'string' :\n            return String;\n        case 'boolean' :\n            return Boolean;\n        case 'undefined' :\n            return void 0;\n        case 'object' :\n            return value ? <any> value.constructor : void 0;\n    }\n}\n","/**\n * Date attribute type.\n * \n * Implements validation, cross-browser compatibility fixes, variety of Date serialization formats,\n * and optimized update pipeline.\n */\nimport { AnyType } from './any'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer } from './updates'\nimport { TransactionOptions } from '../../transactions'\nimport { ChainableAttributeSpec } from './attrDef'\n\nconst DateProto = Date.prototype;\n\n// Date Attribute\n/** @private */\nexport class DateType extends AnyType {\n    create(){\n        return new Date();\n    }\n    \n    convert( next : any, a, record ){\n        if( next == null || next instanceof Date ) return next;\n\n        const date = new Date( next ),\n              timestamp = date.getTime();\n\n        if( timestamp !== timestamp ){\n            this._log( 'warn', 'assigned with Invalid Date', next, record );\n        }\n\n        return date;\n    }\n\n    validate( model, value, name ) {\n        if( value != null ){\n            const timestamp = value.getTime(); \n            if( timestamp !== timestamp ) return name + ' is Invalid Date';\n        }\n    }\n\n    toJSON( value ) { return value && value.toISOString(); }\n\n    isChanged( a, b ) { return ( a && a.getTime() ) !== ( b && b.getTime() ); }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        // Date don't have handleChanges step.\n        return this.transform( value === void 0 ? this.defaultValue() : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        // Date don't have handleChanges step.\n        return this.isChanged( prev , attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    clone( value ) { return value && new Date( value.getTime() ); }\n    dispose(){}\n}\n\nDate._attribute = DateType;\n\nconst msDatePattern  = /\\/Date\\(([0-9]+)\\)\\//;\n\nexport class MSDateType extends DateType {\n    convert( next ) {\n        if( typeof next === 'string' ){\n            const msDate = msDatePattern.exec( next );\n            if( msDate ){\n                return new Date( Number( msDate[ 1 ] ) );\n            }\n        }\n\n        return DateType.prototype.convert.apply( this, arguments );\n    }\n\n    toJSON( value ) { return value && `/Date(${ value.getTime() })/`; }\n}\n\nexport class TimestampType extends DateType {\n    toJSON( value ) { return value && value.getTime(); }\n}\n\ndeclare global {\n    interface DateConstructor {\n        microsoft : ChainableAttributeSpec\n        timestamp :  ChainableAttributeSpec\n    }\n}\n\nObject.defineProperties( Date, {\n    microsoft : {\n        get(){\n            return new ChainableAttributeSpec({\n                type : Date,\n                _attribute : MSDateType\n            })\n        }\n    },\n\n    timestamp : {\n        get(){\n            return new ChainableAttributeSpec({\n                type : Date,\n                _attribute : TimestampType\n            })\n        }\n    }\n});\n\n// If ISO date is not supported by date constructor (such as in Safari), polyfill it.\nfunction supportsDate( date ){\n    return !isNaN( ( new Date( date ) ).getTime() );\n}\n\nif( !supportsDate('2011-11-29T15:52:30.5') ||\n    !supportsDate('2011-11-29T15:52:30.52') ||\n    !supportsDate('2011-11-29T15:52:18.867') ||\n    !supportsDate('2011-11-29T15:52:18.867Z') ||\n    !supportsDate('2011-11-29T15:52:18.867-03:30') ){\n\n    DateType.prototype.convert = function( value ){\n        return value == null || value instanceof Date ? value : new Date( safeParseDate( value ) );\n    }\n}\n\nconst numericKeys    = [ 1, 4, 5, 6, 7, 10, 11 ],\n      isoDatePattern = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n\nfunction safeParseDate( date : string ) : number {\n    var timestamp, struct : any[], minutesOffset = 0;\n\n    if( ( struct = isoDatePattern.exec( date )) ) {\n        // avoid NaN timestamps caused by undefined values being passed to Date.UTC\n        for( var i = 0, k; ( k = numericKeys[ i ] ); ++i ) {\n            struct[ k ] = +struct[ k ] || 0;\n        }\n\n        // allow undefined days and months\n        struct[ 2 ] = (+struct[ 2 ] || 1) - 1;\n        struct[ 3 ] = +struct[ 3 ] || 1;\n\n        if( struct[ 8 ] !== 'Z' && struct[ 9 ] !== undefined ) {\n            minutesOffset = struct[ 10 ] * 60 + struct[ 11 ];\n\n            if( struct[ 9 ] === '+' ) {\n                minutesOffset = 0 - minutesOffset;\n            }\n        }\n\n        timestamp =\n            Date.UTC( struct[ 1 ], struct[ 2 ], struct[ 3 ], struct[ 4 ], struct[ 5 ] + minutesOffset, struct[ 6 ],\n                    struct[ 7 ] );\n    }\n    else {\n        timestamp = Date.parse( date );\n    }\n\n    return timestamp;\n}","/**\n * Built-in JSON types attributes: Object, Array, Number, String, Boolean, and immutable class.\n * \n * Adds type assertions, default validation, and optimized update pipeline.\n */\n\nimport { AnyType } from './any'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer } from './updates'\nimport { TransactionOptions } from '../../transactions'\n\n/**\n * Custom class must be immutable class which implements toJSON() method\n * with a constructor taking json.\n */\nclass ImmutableClassType extends AnyType {\n    type : new ( value? : any ) => {}\n\n    create(){\n        return new this.type();\n    }\n\n    convert( next : any ) : any {\n        return next == null || next instanceof this.type ? next : new this.type( next );\n    }\n\n    toJSON( value ){\n        return value && value.toJSON ? value.toJSON() : value;\n    }\n\n    clone( value ) {\n        return new this.type( this.toJSON( value ) );\n    }\n\n    isChanged( a, b ){\n        return a !== b;\n    }\n}\n\nFunction.prototype._attribute = ImmutableClassType;\n\n/**\n * Optimized attribute of primitive type.\n * \n * Primitives has specialized simplified pipeline.\n */\nexport class PrimitiveType extends AnyType {\n    type : NumberConstructor | StringConstructor | BooleanConstructor\n\n    dispose(){}\n    create() { return this.type(); }\n\n    toJSON( value ) { return value; }\n\n    convert( next ) { return next == null ? next : this.type( next ); }\n\n    isChanged( a, b ) { return a !== b; }\n\n    clone( value ) { return value; }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        return this.transform( value === void 0 ? this.value : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        return prev !== ( attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    initialize(){\n        if( !this.options.hasCustomDefault ){\n            this.value = this.type();\n        }\n    }\n}\n\nBoolean._attribute = String._attribute = PrimitiveType;\n\n// Number type with special validation algothim.\n/** @private */ \nexport class NumericType extends PrimitiveType {\n    type : NumberConstructor\n\n    create(){\n        return 0;\n    }\n\n    convert( next, prev?, record? ) {\n        const num = next == null ? next : this.type( next );\n\n        if( num !== num ){\n            this._log( 'warn', 'assigned with Invalid Number', next, record );\n        }\n        \n        return num;\n    }\n\n    validate( model, value, name ) {\n        // Whatever is not symmetrically serializable to JSON, is not valid by default.\n        if( value != null && !isFinite( value ) ) {\n            return name + ' is not valid number';\n        }\n    }\n}\n\nNumber._attribute = NumericType;\n\n/**\n * Add Number.integer attrubute type\n */\ndeclare global {\n    interface NumberConstructor {\n        integer : Function\n    }\n\n    interface Window {\n        Integer : Function;\n    }\n}\n\nfunction Integer( x ){\n    return x ? Math.round( x ) : 0;\n}\nInteger._attribute = NumericType;\nNumber.integer = Integer;\n\n\nif( typeof window !== 'undefined' ){\n    window.Integer = Number.integer;\n}\n\n/**\n * Compatibility wrapper for Array type.\n * @private\n */ \nexport class ArrayType extends AnyType {\n    toJSON( value ) { return value; }\n    dispose(){}\n    create(){ return []; }\n\n    convert( next, prev, record ) {\n        // Fix incompatible constructor behaviour of Array...\n        if( next == null || Array.isArray( next ) ) return next;\n\n        this._log( 'warn', 'assignment of non-array to Array attribute is ignored', next, record );\n\n        return [];\n    }\n\n    clone( value ){\n        return value && value.slice();\n    }\n}\n\nArray._attribute = ArrayType;\n\nexport class ObjectType extends AnyType {\n    create(){ return {}; }\n\n    convert( next, prev, record ) {\n        if( next == null || typeof next === 'object' ) return next;\n                \n        this._log( 'warn', 'assignment of non-object to Object attribute is ignored', next, record );\n        return {};\n    }\n}\n\nObject._attribute = ObjectType;\n\nexport function doNothing(){}\n\nexport class FunctionType extends AnyType {\n    // Functions are not serialized.\n    toJSON( value ) { return void 0; }\n    create(){ return doNothing; }\n    dispose(){}\n\n    convert( next, prev, record ) {\n        // Fix incompatible constructor behaviour of Function...\n        if( next == null || typeof next === 'function' ) return next;\n\n        this._log( 'warn', 'assigned with non-function', next, record );\n\n        return doNothing;\n    }\n\n    // Functions are not cloned.\n    clone( value ){ return value; }\n}\n\nFunction._attribute = FunctionType;","import { AnyType } from './any'\nimport { AttributesContainer, ConstructorOptions } from './updates'\nimport { ItemsBehavior, Owner, transactionApi, Transactional, TransactionOptions } from '../../transactions' \nimport { tools, eventsApi } from '../../object-plus'\n\nconst { on, off } = eventsApi,\n    { free, aquire } = transactionApi;\n\n/************************\n * Shared attribute definition.\n * - Not serialized.\n * - Listening to the changes.\n * - Doesn't take ownership when assigned with object of proper type.\n * - Takes ownership on objects which are converted.\n */\n\nconst shareAndListen = ItemsBehavior.listen | ItemsBehavior.share;\n\n/** @private */\nexport class SharedType extends AnyType {\n    type : typeof Transactional\n\n     doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value, record ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clone( value : Transactional, record : AttributesContainer ) : Transactional {\n        // References are not cloned.\n        if( !value || value._owner !== record ) return value;\n\n        // Implicitly created objects are cloned.\n        const clone = value.clone();\n        aquire( record, clone, this.name );\n        return clone;\n    }\n\n    // Do not serialize by default.\n    toJSON(){}\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null && !( next instanceof this.type ) ){\n            return next;\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        if( next == null || next instanceof this.type ) return next;\n\n        // Convert type using implicitly created rtransactional object.\n        const implicitObject = new ( this.type as any )( next, options, shareAndListen );\n\n        // To prevent a leak, we need to take an ownership on it.\n        aquire( record, implicitObject, this.name );\n\n        return implicitObject;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n\n    // They are always created as null.\n    create() : Transactional {\n        return null;\n    }\n\n    // Listening to the change events\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options ){\n        if( prev ){\n            // If there was an implicitly created object, remove an ownership.\n            if( prev._owner === record ){\n                free( record, prev );\n                options.unset || prev.dispose();\n            }\n            else{\n                off( prev, prev._changeEventName, this._onChange, record );\n            }\n        }  \n \n        if( next ){\n            // No need to take an ownership for an implicit object - already done in convert or clone.\n            if( next._owner !== record ){\n                on( next, next._changeEventName, this._onChange, record );\n            }\n        } \n    }\n\n    dispose( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    _onChange : ( child : Transactional, options : TransactionOptions, initiator : Transactional ) => void \n\n    initialize( options ){\n        // Create change event handler which knows current attribute name. \n        const attribute = this;\n        this._onChange = this.propagateChanges ? function( child, options, initiator ){\n            this === initiator || this.forceAttributeChange( attribute.name, options );\n        } : ignore;\n\n        options.changeHandlers.unshift( this._handleChange );\n    }\n}\n\nfunction ignore(){}","import { tools as _, eventsApi } from '../../object-plus'\n\nexport * from './any'\nexport * from './owned'\nexport * from './date'\nexport * from './basic'\nexport * from './shared'\nexport * from './updates'\nexport * from './attrDef'\n\nimport { AnyType } from './any'\nimport { ConstructorsMixin, constructorsMixin } from './updates'\nimport { toAttributeOptions, ChainableAttributeSpec } from './attrDef'\nimport { CompiledReference } from '../../traversable'\nimport { IOEndpoint } from '../../io-tools'\n\nexport interface RecordAttributesMixin extends ConstructorsMixin {\n    // Attributes descriptors\n    _attributes : AttributeDescriptors\n    _attributesArray : AnyType[]\n    \n    // Attribute's property descriptors\n    properties : PropertyDescriptorMap\n\n    // Attributes serialization\n    _toJSON() : any\n\n    // Event map for record's local events.\n    _localEvents? : eventsApi.EventMap,\n\n    _endpoints : { [ name : string ] : IOEndpoint }\n}\n\nexport interface AttributeDescriptors {\n    [ name : string ] : AnyType\n}\n\n// Create record mixin from the given record's attributes definition\nexport default function( attributesDefinition : object, baseClassAttributes : AttributeDescriptors ) : RecordAttributesMixin {\n    const myAttributes = _.transform( {} as AttributeDescriptors, attributesDefinition, createAttribute ),\n          allAttributes = _.defaults( {} as AttributeDescriptors, myAttributes, baseClassAttributes );\n\n    const ConstructorsMixin = constructorsMixin( allAttributes );\n\n    return {\n        ...ConstructorsMixin,\n        _attributes : new ConstructorsMixin.AttributesCopy( allAttributes ),\n        _attributesArray : Object.keys( allAttributes ).map( key => allAttributes[ key ] ),\n        properties : _.transform( <PropertyDescriptorMap>{}, myAttributes, x => x.createPropertyDescriptor() ),\n        _toJSON : createToJSON( allAttributes ),\n        ...parseMixin( allAttributes ),\n        ...localEventsMixin( myAttributes ),\n        _endpoints : _.transform( {}, allAttributes, attrDef => attrDef.options.endpoint )\n    }            \n}\n\n// Create attribute from the type spec.\nexport function createAttribute( spec : any, name : string ) : AnyType {\n    return AnyType.create( toAttributeOptions( spec ), name );\n}\n\nfunction parseMixin( attributes : AttributeDescriptors ){\n    const attrsWithParse = Object.keys( attributes ).filter( name => attributes[ name ].parse );\n\n    return attrsWithParse.length ? {\n        _parse : new Function( 'json', `\n            var _attrs = this._attributes;\n\n            ${ attrsWithParse.map( name => `                \n                json.${ name } === void 0 || ( json.${ name } = _attrs.${ name }.parse.call( this, json.${ name }, \"${ name }\" ) );\n            ` ).join('')}\n\n            return json;\n        ` )\n    } : {};\n}\n\nfunction createToJSON( attributes : AttributeDescriptors ) : () => void {\n    return new Function(`\n        var json = {},\n            v = this.attributes,\n            a = this._attributes;\n\n        ${ Object.keys( attributes ).map( key => {\n            if( attributes[ key ].toJSON ){\n                return `json.${key} = a.${key}.toJSON.call( this, v.${ key }, '${key}' );`;\n            }\n        } ).join( '\\n' ) }\n\n        return json;\n    `) as any;\n}\n\nexport function createSharedTypeSpec( Constructor : Function, Attribute : typeof AnyType ){\n    if( !Constructor.hasOwnProperty( 'shared' ) ){\n        Object.defineProperty( Constructor, 'shared', {\n            get(){\n                return new ChainableAttributeSpec({\n                    value : null,\n                    type : Constructor,\n                    _attribute : Attribute\n                });\n            }\n        });\n    }\n}\n\ninterface LocalEventsMixin {\n    _localEvents? : eventsApi.EventMap\n}\n\nfunction localEventsMixin( attrSpecs : AttributeDescriptors ) : LocalEventsMixin {\n    let _localEvents : eventsApi.EventMap;\n\n    for( var key in attrSpecs ){\n        const attribute = attrSpecs[ key ],\n            { _onChange } = attribute.options; \n\n        if( _onChange ){\n            _localEvents || ( _localEvents = new eventsApi.EventMap() );\n\n            _localEvents.addEvent( 'change:' + key,\n                typeof _onChange === 'string' ?\n                    createWatcherFromRef( _onChange, key ) : \n                    wrapWatcher( _onChange, key ) );\n        }\n    }\n\n    return _localEvents ? { _localEvents } : {};\n}\n\nfunction wrapWatcher( watcher, key ){\n    return function( record, value ){\n        watcher.call( record, value, key );\n    } \n}\n\nfunction createWatcherFromRef( ref : string, key : string ){\n    const { local, resolve, tail } = new CompiledReference( ref, true );\n    return local ?\n        function( record, value ){\n            record[ tail ]( value, key );\n        } :\n        function( record, value ){\n            resolve( record )[ tail ]( value, key );\n        }\n}","import { getOwnerEndpoint, startIO, IOOptions, IOEndpoint, IOPromise, IONode } from '../io-tools'\n\nexport interface IORecord extends IONode {\n    getEndpoint() : IOEndpoint\n    save( options? : IOOptions ) : IOPromise<any>\n    fetch( options? : IOOptions ) : IOPromise<any>\n    destroy( options? : IOOptions ) : IOPromise<any>\n    toJSON() : any\n    isNew() : boolean\n    id : string | number\n    set( json : object, options : object )\n}\n\nexport const IORecordMixin = {\n    save( this : IORecord, options : IOOptions = {} ){\n        const endpoint = this.getEndpoint(),\n              json = this.toJSON();\n\n        return startIO(\n            this,\n            this.isNew() ?\n                endpoint.create( json, options, this ) :\n                endpoint.update( this.id, json, options, this ),\n            options,\n\n            update => {\n                this.set( update, { parse : true, ...options } );\n            }\n        );\n    },\n\n    fetch( options : IOOptions = {} ){\n        return startIO(\n            this,\n            this.getEndpoint().read( this.id, options, this ),\n            options,\n\n            json => this.set( json, { parse : true, ...options } )\n        );\n    },\n\n    destroy( options : IOOptions = {} ){  \n        return startIO(\n            this,\n            this.getEndpoint().destroy( this.id, options, this ),\n            options,\n\n            () => {\n                const { collection } = this;\n                if( collection ){\n                    collection.remove( this, options );\n                }\n                else{\n                    this.dispose();\n                }\n            }\n        )\n    }\n}","/**\n * Record core implementing transactional updates.\n * The root of all definitions. \n */\n\nimport { tools, eventsApi, Mixable, definitions, mixins,  mixinRules, define } from '../object-plus'\n\nimport { CloneOptions, Transactional, TransactionalDefinition, Transaction, TransactionOptions, Owner } from '../transactions'\nimport { ChildrenErrors } from '../validation'\n\nimport { Collection } from '../collection'\n\nimport { AnyType, AggregatedType, setAttribute, UpdateRecordMixin, \n    AttributesValues, AttributesContainer,\n    ConstructorsMixin, AttributesConstructor, AttributesCopyConstructor } from './attributes'\n\nimport { IORecord, IORecordMixin } from './io-mixin'\nimport { IOPromise, IOEndpoint } from '../io-tools'\n\nconst { assign, isEmpty, log } = tools;\n\n/*******************************************************\n * Record core implementation\n */\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\n// Client unique id counter\nlet _cidCounter : number = 0;\n\n/***************************************************************\n * Record Definition as accepted by Record.define( definition )\n */\nexport interface RecordDefinition extends TransactionalDefinition {\n    idAttribute? : string\n    attributes? : AttributesValues\n    collection? : object\n    Collection? : typeof Transactional\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'm',\n\n    // Name of the change event\n    _changeEventName : 'change',\n\n    // Default id attribute name\n    idAttribute : 'id'\n})\n@definitions({\n    defaults : mixinRules.merge,\n    attributes : mixinRules.merge,\n    collection : mixinRules.merge,\n    Collection : mixinRules.value,\n    idAttribute : mixinRules.protoValue\n})\nexport class Record extends Transactional implements IORecord, AttributesContainer {\n    // Hack\n    static onDefine( definition, BaseClass ){}\n\n    static Collection : typeof Collection;\n    static DefaultCollection : typeof Collection;\n\n    static from : ( collectionReference : any ) => any;\n    \n    static defaults( attrs : AttributesValues ) : typeof Record {\n        return <any>this.extend({ attributes : attrs });\n    }\n    \n    static attributes : AttributesValues\n\n    /********************\n     * IO Methods\n     */\n     _endpoints : { [ name : string ] : IOEndpoint }\n\n     // Save record\n     save( options? : object ) : IOPromise<any> { throw new Error( 'Implemented by mixin' ); }\n\n     // Destroy record\n     destroy( options? : object ) : IOPromise<any> { throw new Error( 'Implemented by mixin' ); }\n\n    /***********************************\n     * Core Members\n     */\n    // Previous attributes\n    _previousAttributes : {}\n\n    previousAttributes(){ return new this.AttributesCopy( this._previousAttributes ); } \n\n    // Current attributes    \n    attributes : AttributesValues\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.attributes; }\n\n    // Lazily evaluated changed attributes hash\n    _changedAttributes : AttributesValues\n\n    get changed(){\n        let changed = this._changedAttributes;\n\n        if( !changed ){\n            const prev = this._previousAttributes;\n            changed = {};\n\n            const { _attributes, attributes } = this;\n\n            for( let attr of this._attributesArray ){\n                const key = attr.name,\n                    value = attributes[ key ];\n\n                if( attr.isChanged( value, prev[ key ] ) ){\n                    changed[ key ] = value;\n                }\n            }\n\n            this._changedAttributes = changed;\n        }\n\n        return changed;    \n    }\n\n    changedAttributes( diff? : {} ) : boolean | {} {\n        if( !diff ) return this.hasChanged() ? assign( {}, this.changed ) : false;\n\n        var val, changed : {} | boolean = false,\n            old          = this._transaction ? this._previousAttributes : this.attributes,\n            attrSpecs    = this._attributes;\n\n        for( var attr in diff ){\n            if( !attrSpecs[ attr ].isChanged( old[ attr ], ( val = diff[ attr ] ) ) ) continue;\n            (changed || (changed = {}))[ attr ] = val;\n        }\n\n        return changed;        \n    }\n\n    hasChanged( key? : string ) : boolean {\n        const { _previousAttributes } = this;\n        if( !_previousAttributes ) return false;\n\n        return key ?\n                this._attributes[ key ].isChanged( this.attributes[ key ], _previousAttributes[ key ] ) :\n                !isEmpty( this.changed );\n    }\n\n    previous( key : string ) : any {\n        if( key ){\n            const { _previousAttributes } = this;\n            if( _previousAttributes ) return _previousAttributes[ key ];\n        }\n        \n        return null;\n    }\n\n    isNew() : boolean {\n        return this.id == null;\n    }\n\n    has( key : string ) : boolean {\n        return this[ key ] != void 0;\n    }\n\n    // Return attribute value, setting an attribute to undefined.\n    // TODO: If attribute was aggregated, don't dispose it.\n    unset( key : string, options? ) : any {\n        const value = this[ key ];\n        this.set({ [ key ] : void 0 }, { unset : true, ...options });\n        return value;\n    }\n\n    // Undocumented. Move to NestedTypes?\n    clear( options? ) : this {\n        const nullify = options && options.nullify;\n\n        this.transaction( () =>{\n            this.forEachAttr( this.attributes, ( value, key ) => this[ key ] = nullify ? null : void 0 );\n        }, options );\n\n        return this;\n    }\n\n    // Returns Record owner skipping collections. TODO: Move out\n    getOwner() : Owner {\n        const owner : any = this._owner;\n\n        // If there are no key, owner must be transactional object, and it's the collection.\n        // We don't expect that collection can be the member of collection, so we're skipping just one level up. An optimization.\n        return this._ownerKey ? owner : owner && owner._owner;\n    }\n\n    /***********************************\n     * Identity managements\n     */\n\n    // Id attribute name ('id' by default)\n    idAttribute : string;\n\n    // Fixed 'id' property pointing to id attribute\n    get id() : string | number { return this.attributes[ this.idAttribute ]; }\n    set id( x : string | number ){ setAttribute( this, this.idAttribute, x ); }\n\n    /***********************************\n     * Dynamically compiled stuff\n     */\n\n    // Attributes specifications \n    _attributes : { [ key : string ] : AnyType }\n    _attributesArray : AnyType[]\n\n    // Attributes object copy constructor\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n\n    // forEach function for traversing through attributes, with protective default implementation\n    // Overriden by dynamically compiled loop unrolled function in define.ts\n    forEachAttr( attrs : {}, iteratee : ( value : any, key? : string, spec? : AnyType ) => void ) : void {\n        const { _attributes } = this;\n        let unknown : string[];\n\n        for( let name in attrs ){\n            const spec = _attributes[ name ];\n\n            if( spec ){\n                iteratee( attrs[ name ], name, spec );\n            }\n            else{\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            this._log( 'warn', `attributes ${ unknown.join(', ')} are not defined`,{\n                attributes : attrs\n            } );\n        }\n    }\n\n    each( iteratee : ( value : any, key : string ) => void, context? : any ){\n        const fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee,\n            { attributes } = this;\n\n        for( const key in this.attributes ){\n            const value = attributes[ key ];\n            if( value !== void 0 ) fun( value, key );\n        }\n    }\n\n    // Get array of attribute keys (Record) or record ids (Collection) \n    keys() : string[] {\n        const keys : string[] = [];\n\n        this.each( ( value, key ) => value === void 0 || keys.push( key ) );\n\n        return keys;\n    }\n\n    // Get array of attribute values (Record) or records (Collection)\n    values() : any[] {\n        return this.map( value => value );\n    }\n\n    // Attributes-level serialization\n    _toJSON(){ return {}; }\n\n    // Attributes-level parse\n    _parse( data ){ return data; }\n\n    // Create record default values, optionally augmenting given values.\n    defaults( values = {} ){\n        const defaults = {},\n            { _attributesArray } = this;\n\n        for( let attr of _attributesArray ){\n            const key = attr.name,\n            value = values[ key ];\n\n            defaults[ key ] = value === void 0 ? attr.defaultValue() : value;\n        }\n\n        return defaults;\n    }\n\n    /***************************************************\n     * Record construction\n     */\n    // Create record, optionally setting an owner\n    constructor( a_values? : {}, a_options? : ConstructorOptions ){\n        super( _cidCounter++ );\n        this.attributes = {};\n        \n        const options = a_options || {},\n              values = ( options.parse ? this.parse( a_values, options ) :  a_values ) || {};\n\n        if( log.level > 1 ) typeCheck( this, values );\n\n        this._previousAttributes = this.attributes = new this.Attributes( this, values, options );\n\n        this.initialize( a_values, a_options );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    // Initialization callback, to be overriden by the subclasses \n    initialize( values?, options? ){}\n\n    // Deeply clone record, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const copy : this = new (<any>this.constructor)( this.attributes, { clone : true } );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n\n        return copy;\n    }\n\n    // Deprecated, every clone is the deep one now.\n    deepClone() : this { return this.clone() };\n\n    // Validate attributes.\n    _validateNested( errors : ChildrenErrors ) : number {\n        var length    = 0;\n\n        this.forEachAttr( this.attributes, ( value, name, attribute ) => {\n            const error = attribute.validate( this, value, name );\n\n            if( error ){\n                errors[ name ] = error;\n                length++;\n            }\n        } );\n\n        return length;\n    }\n\n    // Get attribute by key\n    get( key : string ) : any {\n        return this[ key ];\n    }\n\n    /**\n     * Serialization control\n     */\n\n    // Default record-level serializer, to be overriden by subclasses \n    toJSON() : Object {\n        const json = {};\n\n        this.forEachAttr( this.attributes, ( value, key : string, { toJSON } ) =>{\n            // If attribute serialization is not disabled, and its value is not undefined...\n            if( value !== void 0 ){\n                // ...serialize it according to its spec.\n                const asJson = toJSON.call( this, value, key );\n\n                // ...skipping undefined values. Such an attributes are excluded.\n                if( asJson !== void 0 ) json[ key ] = asJson; \n            }\n        });\n\n        return json;\n    }\n    \n    // Default record-level parser, to be overriden by the subclasses.\n    parse( data, options? : TransactionOptions ){\n        // Call dynamically compiled loop-unrolled attribute-level parse function.\n        return this._parse( data );\n    }\n\n    /**\n     * Transactional control\n     */\n\n    deepSet( name : string, value : any, options? ){\n        // Operation might involve series of nested object updates, thus it's wrapped in transaction.\n        this.transaction( () => {\n            const path  = name.split( '.' ),\n                l     = path.length - 1,\n                attr  = path[ l ];\n\n            let model = this;\n\n            // Locate the model, traversing the path.\n            for( let i = 0; i < l; i++ ){\n                const key = path[ i ];\n\n                // There might be collections in path, so use `get`.\n                let next    = model.get ? model.get( key ) : model[ key ];\n\n                // Create models, if they are not exist.\n                if( !next ){\n                    const attrSpecs = model._attributes;\n                    if( attrSpecs ){\n                        // If current object is model, create default attribute\n                        var newModel = attrSpecs[ key ].create();\n\n                        // If created object is model, nullify attributes when requested\n                        if( options && options.nullify && newModel._attributes ){\n                            newModel.clear( options );\n                        }\n\n                        model[ key ] = next = newModel;\n                    }\n                    // Silently fail in other case.\n                    else return;\n                }\n                \n                model = next;\n            }\n\n            // Set model attribute.\n            if( model.set ){\n                model.set({ [ attr ] : value }, options );\n            }\n            else{\n                model[ attr ] = value;\n            }\n        });\n\n        return this;\n    }\n            \n    // Returns owner without the key (usually it's collection)\n    get collection() : any {\n        return this._ownerKey ? null : this._owner;\n    }\n\n    // Dispose object and all childrens\n    dispose(){\n        if( this._disposed ) return;\n        \n        this.forEachAttr( this.attributes, ( value, key, attribute ) => {\n            attribute.dispose( this, value );\n        });\n\n        super.dispose();\n    }\n\n    _log( level : tools.LogLevel, text : string, props : object ) : void {\n        tools.log( level, '[Record] ' + text, {\n            'Record' : this,\n            'Attributes definition:' : this._attributes,\n            ...props\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Record';\n    }\n\n    // Dummies to \n    _createTransaction( values : object, options : TransactionOptions ) : Transaction { return void 0; }\n    // Simulate attribute change \n    forceAttributeChange : ( key : string, options : TransactionOptions ) => void\n    _onChildrenChange : ( child : Transactional, options : TransactionOptions ) => void\n};\n\nassign( Record.prototype, UpdateRecordMixin, IORecordMixin );\n\n/***********************************************\n * Helper functions\n */\n\nclass BaseRecordAttributes {\n    id : string | number\n\n    constructor( record : Record, x : AttributesValues, options : TransactionOptions ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.Attributes = BaseRecordAttributes;\n\nclass BaseRecordAttributesCopy {\n    id : string | number\n\n    constructor( x : AttributesValues ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.AttributesCopy = BaseRecordAttributesCopy;\n\nconst IdAttribute = AnyType.create({ value : void 0 }, 'id' );\nRecord.prototype._attributes = { id : IdAttribute };\nRecord.prototype._attributesArray = [ IdAttribute ];\nRecord._attribute = AggregatedType;\n\nimport { shouldBeAnObject } from './attributes'\n\nfunction typeCheck( record : Record, values : object ){\n    if( shouldBeAnObject( record, values ) ){\n        const { _attributes } = record;\n        let unknown : string[];\n\n        for( let name in values ){\n            if( !_attributes[ name ] ){\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            record._log( 'warn', `undefined attributes ${ unknown.join(', ')} are ignored.`, { values } );\n        }\n    }\n}\n","import { Record, RecordDefinition } from './record'\nimport { Mixable, tools, predefine, define, MixinsState } from '../object-plus'\nimport compile from './attributes'\nimport { Transactional } from '../transactions'\n\nimport { createSharedTypeSpec, AggregatedType, MSDateType, TimestampType, NumericType, SharedType } from './attributes'\n\nexport * from './attributes'\nexport { Record }\n\nconst { assign, defaults, omit, getBaseClass } = tools;\n\nRecord.onExtend = function( this : typeof Record, BaseClass : typeof Record ){\n    Transactional.onExtend.call( this, BaseClass );\n\n    // Create the default collection\n    const Class = this;\n\n    @predefine class DefaultCollection extends BaseClass.Collection<any> {\n        static model = Class;\n    }\n\n    this.DefaultCollection = DefaultCollection;\n\n    // If there are no collection defined in statics, use the default collection.\n    // It will appear in onDefine's definition, overriding all other settings.\n    if( Class.Collection === BaseClass.Collection ){\n        this.Collection = DefaultCollection;\n    }\n\n    // Create Class.shared modifier\n    createSharedTypeSpec( this, SharedType );\n}\n\nRecord.onDefine = function( definition : RecordDefinition, BaseClass : typeof Record ){\n    const baseProto : Record = BaseClass.prototype;\n\n    // Compile attributes spec, creating definition mixin.\n    const { properties, _localEvents, ...dynamicMixin } = compile( this.attributes = getAttributes( definition ), baseProto._attributes );\n    assign( this.prototype, dynamicMixin );\n    \n    definition.properties = defaults( definition.properties || {}, properties );\n    definition._localEvents = _localEvents;\n    \n    Transactional.onDefine.call( this, definition, BaseClass );\n\n    // Finalize the definition of the default collection.\n    this.DefaultCollection.define( definition.collection || {} );\n\n    // assign collection from the definition.\n    this.Collection = definition.Collection;\n    this.Collection.prototype.model = this;\n\n    if( definition.endpoint ) this.Collection.prototype._endpoint = definition.endpoint;    \n}\n\nRecord._attribute = AggregatedType;\ncreateSharedTypeSpec( Record, SharedType );\n\nfunction getAttributes({ defaults, attributes, idAttribute } : RecordDefinition ) {\n    const definition = attributes || defaults || {};\n    \n    // If there is an undeclared idAttribute, add its definition as untyped generic attribute.\n    if( idAttribute && !( idAttribute in definition ) ){\n        definition[ idAttribute ] = void 0;\n    }\n\n    return definition;\n}\n\ndeclare var Reflect;\n\nexport function attr( proto, attrName? ) : any {\n    if( attrName ){\n        // Called without the spec. Extract the type.\n        if( typeof Reflect !== 'undefined' && Reflect.getMetadata ){\n            Reflect\n                .getMetadata( \"design:type\", proto, attrName )\n                .asProp( proto, attrName );\n        }\n        else{\n            proto._log( 'error', 'Add import \"reflect-metadata\"; as the first line of your app.' );\n        }\n    }\n    else{\n        return proto.asProp;\n    }\n}\n\nexport function prop( spec ) : any {\n    return spec.asProp;\n}","import { Record } from '../record'\nimport { Owner, Transaction, ItemsBehavior,\n        TransactionOptions, Transactional, transactionApi } from '../transactions'\n\nimport { eventsApi, tools } from '../object-plus'\n\nconst { EventMap, trigger2, trigger3, on, off } = eventsApi,\n      { commit, markAsDirty } = transactionApi,\n      _aquire = transactionApi.aquire, _free = transactionApi.free;\n\n/** @private */\nexport interface CollectionCore extends Transactional, Owner {\n    _byId : IdIndex\n    models : Record[]\n    model : typeof Record\n    idAttribute : string // TODO: Refactor inconsistent idAttribute usage\n    _comparator : Comparator\n    get( objOrId : string | Record | Object ) : Record    \n    _itemEvents? : eventsApi.EventMap\n    _shared : number\n    _aggregationError : Record[]\n\n    _log( level : string, text : string, value : any ) : void\n}\n\n// Collection's manipulation methods elements\nexport type Elements = ( Object | Record )[];\n\nexport interface CollectionOptions extends TransactionOptions {\n    sort? : boolean\n}\n\nexport type Comparator = ( a : Record, b : Record ) => number;  \n\n/** @private */\nexport function dispose( collection : CollectionCore ) : Record[]{\n    const { models } = collection;\n\n    collection.models = [];\n    collection._byId  = {};\n\n    freeAll( collection, models );\n    return models;\n}\n\n/** @private */\nexport function convertAndAquire( collection : CollectionCore, attrs : {} | Record, options : CollectionOptions ){\n    const { model } = collection;\n    \n    let record : Record;\n\n    if( collection._shared ){\n        record = attrs instanceof model ? attrs : <Record>model.create( attrs, options );\n\n        if( collection._shared & ItemsBehavior.listen ){\n            on( record, record._changeEventName, collection._onChildrenChange, collection );\n        }\n    }\n    else{\n        record = attrs instanceof model ? ( options.merge ? attrs.clone() : attrs ) : <Record>model.create( attrs, options );\n\n        if( !_aquire( collection, record ) ){\n            const errors = collection._aggregationError || ( collection._aggregationError = [] );\n            errors.push( record );\n        }\n    }    \n\n    // Subscribe for events...\n    const { _itemEvents } = collection;\n    _itemEvents && _itemEvents.subscribe( collection, record );\n\n    return record;\n}\n\n/** @private */\nexport function free( owner : CollectionCore, child : Record, unset? : boolean ) : void {\n    if( owner._shared ){\n        if( owner._shared & ItemsBehavior.listen ){\n            off( child, child._changeEventName, owner._onChildrenChange, owner );\n        }\n    }\n    else{\n        _free( owner, child );\n        unset || child.dispose();\n    }\n\n    const { _itemEvents } = owner;\n    _itemEvents && _itemEvents.unsubscribe( owner, child );\n}\n\n/** @private */\nexport function freeAll( collection : CollectionCore, children : Record[] ) : Record[] {\n    for( let child of children ){\n        free( collection, child );\n    }\n\n    return children;\n}\n\n/**\n * Silently sort collection, if its required. Returns true if sort happened.\n * @private\n */   \nexport function sortElements( collection : CollectionCore, options : CollectionOptions ) : boolean {\n    let { _comparator } = collection;\n    if( _comparator && options.sort !== false ){\n        collection.models.sort( _comparator );\n        return true;\n    }\n\n    return false;\n}\n\n/**********************************\n * Collection Index\n * @private \n */\nexport interface IdIndex {\n    [ id : string ] : Record\n}\n\n/** @private Add record */ \nexport function addIndex( index : IdIndex, model : Record ) : void {\n    index[ model.cid ] = model;\n    var id             = model.id;\n    \n    if( id || id === 0 ){\n        index[ id ] = model;\n    }\n}\n\n/** @private Remove record */ \nexport function removeIndex( index : IdIndex, model : Record ) : void {\n    delete index[ model.cid ];\n    var id = model.id;\n    if( id || id === 0 ){\n        delete index[ id ];\n    }\n}\n\nexport function updateIndex( index : IdIndex, model : Record ){\n    delete index[ model.previous( model.idAttribute ) ];\n\n    const { id } = model;\n    id == null || ( index[ id ] = model );\n}\n\n/***\n * In Collections, transactions appears only when\n * add remove or change events might be emitted.\n * reset doesn't require transaction.\n * \n * Transaction holds information regarding events, and knows how to emit them.\n * \n * Two major optimization cases.\n * 1) Population of an empty collection\n * 2) Update of the collection (no or little changes) - it's crucial to reject empty transactions.\n */\n\n\n// Transaction class. Implements two-phase transactions on object's tree.\n/** @private */ \nexport class CollectionTransaction implements Transaction {\n    // open transaction\n    constructor(    public object : CollectionCore,\n                    public isRoot : boolean,\n                    public added : Record[],\n                    public removed : Record[],\n                    public nested : Transaction[],\n                    public sorted : boolean ){}\n\n    // commit transaction\n    commit( initiator? : Transactional ){\n        const { nested, object } = this,\n              { _isDirty } = object;\n\n        // Commit all nested transactions...\n        for( let transaction of nested ){\n            transaction.commit( object );\n        }\n\n        if( object._aggregationError ){\n            logAggregationError( object );\n        }\n\n        // Just trigger 'change' on collection, it must be already triggered for models during nested commits.\n        // ??? TODO: do it in nested transactions loop? This way appears to be more correct. \n        for( let transaction of nested ){\n            trigger2( object, 'change', transaction.object, _isDirty );\n        }\n\n        // Notify listeners on attribute changes...\n        const { added, removed } = this;\n\n        // Trigger `add` events for both model and collection.\n        for( let record of added ){\n            trigger3( record, 'add', record, object, _isDirty );\n            trigger3( object, 'add', record, object, _isDirty );\n        }\n\n        // Trigger `remove` events for both model and collection.\n        for( let record of removed ){\n            trigger3( record, 'remove', record, object, _isDirty );\n            trigger3( object, 'remove', record, object, _isDirty );\n        }\n\n        if( this.sorted ){\n            trigger2( object, 'sort', object, _isDirty );\n        }\n\n        if( added.length || removed.length ){\n            trigger2( object, 'update', object, _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}\n\nexport function logAggregationError( collection : CollectionCore ){\n    collection._log( 'error', 'added records already have an owner', collection._aggregationError );\n    collection._aggregationError = void 0;\n}","import { Transaction, transactionApi } from '../transactions'\nimport { CollectionTransaction, logAggregationError, sortElements, convertAndAquire, free, CollectionOptions, addIndex, updateIndex, CollectionCore } from './commons'\nimport { Record } from '../record'\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\nexport interface AddOptions extends CollectionOptions {\n    at? : number \n}\n\n/** @private */\nexport function addTransaction( collection : CollectionCore, items : any[], options : AddOptions, merge? : boolean ){\n    const isRoot = begin( collection ),\n          nested : Transaction[]= [];\n\n    var added = appendElements( collection, items, nested, options, merge );\n\n    if( added.length || nested.length ){\n        let needSort = sortOrMoveElements( collection, added, options );\n        if( markAsDirty( collection, options ) ){\n            return new CollectionTransaction( collection, isRoot, added, [], nested, needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n// Handle sort or insert at options for add operation. Reurns true if sort happened.\n/** @private */ \nfunction sortOrMoveElements( collection : CollectionCore, added : Record[], options : AddOptions ) : boolean {\n    let at = options.at;\n\n    // if `at` option is given, it overrides sorting option...\n    if( at != null ){\n        // Take an original collection's length. \n        const length = collection.models.length - added.length;\n\n        // Crazy Backbone rules about `at` index. I don't know what that guys smoke.\n        at = Number( at );\n        if( at < 0 ) at += length + 1;\n        if( at < 0 ) at = 0;\n        if( at > length ) at = length;\n\n        // Move added elements to desired position. In place.\n        moveElements( collection.models, at, added );\n        return false;\n    }\n\n    return sortElements( collection, options );\n}\n\n/** @private */\nfunction moveElements( source : any[], at : number, added : any[] ) : void {\n    for( var j = source.length - 1, i = j - added.length; i >= at; i--, j-- ){\n        source[ j ] = source[ i ];\n    }\n\n    for( i = 0, j = at; i < added.length; i++, j++ ){\n        source[ j ] = added[ i ];\n    }\n}\n\n// append data to model and index\n/** @private */\nfunction appendElements( collection : CollectionCore, a_items : any[], nested : Transaction[], a_options : AddOptions, forceMerge : boolean ){\n    var { _byId, models } = collection,\n        merge       = ( forceMerge || a_options.merge ) && !collection._shared,\n        parse       = a_options.parse,\n        idAttribute = collection.model.prototype.idAttribute,\n        prevLength = models.length;\n\n    for( const item of a_items ){\n        let model = item ? _byId[ item[ idAttribute ] ] || _byId[ item.cid ] : null;\n\n        if( model ){\n            if( merge && item !== model ){\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, a_options );\n                transaction && nested.push( transaction );\n\n                if( model.hasChanged( idAttribute ) ){\n                    updateIndex( _byId, model );\n                }\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, a_options );\n            models.push( model );\n            addIndex( _byId, model );\n        }\n    }\n\n    return models.slice( prevLength );\n}\n","import { Transaction, transactionApi } from '../transactions'\nimport { CollectionTransaction, logAggregationError, IdIndex, convertAndAquire, free, sortElements, CollectionOptions, addIndex, CollectionCore, Elements, freeAll } from './commons'\nimport { Record } from '../record'\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\n/** @private */\nconst silentOptions = { silent : true };\n\n/** @private */\nexport function emptySetTransaction( collection : CollectionCore, items : Elements, options : CollectionOptions, silent? : boolean ){\n    const isRoot = begin( collection );\n\n    const added = _reallocateEmpty( collection, items, options );\n\n    if( added.length ){\n        const needSort = sortElements( collection, options );\n\n        if( markAsDirty( collection, silent ? silentOptions : options ) ){\n            // 'added' is the reference to this.models. Need to copy it.\n            return new CollectionTransaction( collection, isRoot, added.slice(), [], [], needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n/** @private */\nexport function setTransaction( collection, items, options ){\n    const isRoot = begin( collection ),\n          nested = [];\n\n    var previous = collection.models,\n        added    = _reallocate( collection, items, nested, options );\n\n    const reusedCount = collection.models.length - added.length,\n          removed = reusedCount < previous.length ? (\n                        reusedCount ? _garbageCollect( collection, previous ) :\n                                        freeAll( collection, previous )\n                    ) : [];                    \n    \n    const addedOrChanged = nested.length || added.length,\n          // As we are reallocating models array, it needs to be sorted even if there are no changes.\n          sorted = ( sortElements( collection, options ) && addedOrChanged ) || added.length || options.sorted;\n\n    if( addedOrChanged || removed.length || sorted ){\n        if( markAsDirty( collection, options ) ){ \n            return new CollectionTransaction( collection, isRoot, added, removed, nested, sorted );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    isRoot && commit( collection );\n};\n\n// Remove references to all previous elements, which are not present in collection.\n// Returns an array with removed elements.\n/** @private */\nfunction _garbageCollect( collection : CollectionCore, previous : Record[] ) : Record[]{\n    const { _byId }  = collection,\n          removed = [];\n\n    // Filter out removed models and remove them from the index...\n    for( let record of previous ){\n        if( !_byId[ record.cid ] ){\n            removed.push( record );\n            free( collection, record );\n        }\n    }\n\n    return removed;\n}\n\n// reallocate model and index\n/** @private */\nfunction _reallocate( collection : CollectionCore, source : any[], nested : Transaction[], options ){\n    var models      = Array( source.length ),\n        _byId : IdIndex = {},\n        merge       = ( options.merge == null ? true : options.merge ) && !collection._shared,\n        _prevById   = collection._byId,\n        prevModels  = collection.models, \n        idAttribute = collection.model.prototype.idAttribute,\n        toAdd       = [],\n        orderKept   = true;\n\n    // for each item in source set...\n    for( var i = 0, j = 0; i < source.length; i++ ){\n        var item  = source[ i ],\n            model : Record = null;\n\n        if( item ){\n            var id  = item[ idAttribute ],\n                cid = item.cid;\n\n            if( _byId[ id ] || _byId[ cid ] ) continue;\n\n            model = _prevById[ id ] || _prevById[ cid ];\n        }\n\n        if( model ){\n            if( merge && item !== model ){\n                if( orderKept && prevModels[ j ] !== model ) orderKept = false;\n\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, options );\n                transaction && nested.push( transaction );\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, options );\n            toAdd.push( model );\n        }\n\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    collection.models   = models;\n    collection._byId    = _byId;\n\n    if( !orderKept ) options.sorted = true;\n\n    return toAdd;\n}\n\n/** @private */\nfunction _reallocateEmpty( self, source, options ){\n    var len         = source ? source.length : 0,\n        models      = Array( len ),\n        _byId : IdIndex = {},\n        idAttribute = self.model.prototype.idAttribute;\n\n    for( var i = 0, j = 0; i < len; i++ ){\n        var src = source[ i ];\n\n        if( src && ( _byId[ src[ idAttribute ] ] || _byId[ src.cid ] ) ){\n            continue;\n        }\n\n        var model = convertAndAquire( self, src, options );\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    self._byId    = _byId;\n\n    return self.models = models;\n}","/*************\n * Remove items from collections.\n * \n * Cannot be a part of two-phase transaction on object tree.\n * Can be executed in the scope of ad-hoc transaction or from the trigger, though.\n *\n * Implemented with low-level API. \n * Most frequent operation - single element remove. Thus, it have the fast-path.\n */\n\nimport { Record } from '../record'\nimport { free, CollectionCore, CollectionTransaction, removeIndex } from './commons'\nimport { eventsApi } from '../object-plus'\nimport { TransactionOptions, transactionApi } from '../transactions' \n\nconst { trigger2, trigger3 } = eventsApi,\n    { markAsDirty, begin, commit } = transactionApi;\n\n/** @private */\nexport function removeOne( collection : CollectionCore, el : Record | {} | string, options : TransactionOptions ) : Record {\n    var model : Record = collection.get( el );\n\n    if( model ){\n        const isRoot = begin( collection ),\n              models = collection.models;\n\n        // Remove model form the collection. \n        models.splice( models.indexOf( model ), 1 );\n        removeIndex( collection._byId, model );\n        \n        // Mark transaction as dirty. \n        const notify = markAsDirty( collection, options );\n\n        // Send out events.\n        if( notify ){\n            trigger3( model, 'remove', model, collection, options );\n            trigger3( collection, 'remove', model, collection, options );\n        } \n\n        free( collection, model, options.unset );\n\n        notify && trigger2( collection, 'update', collection, options );\n\n        // Commit transaction.\n        isRoot && commit( collection );\n\n        return model;\n    }\n};\n\n/** Optimized for removing many elements\n * 1. Remove elements from the index, checking for duplicates\n * 2. Create new models array matching index\n * 3. Send notifications and remove references\n */\n\n/** @private */\nexport function removeMany( collection : CollectionCore, toRemove : any[], options ){\n    const removed = _removeFromIndex( collection, toRemove, options.unset );\n    if( removed.length ){\n        const isRoot = begin( collection );\n\n        _reallocate( collection, removed.length );\n\n        if( markAsDirty( collection, options ) ){\n            const transaction = new CollectionTransaction( collection, isRoot, [], removed, [], false );\n            transaction.commit();\n        }\n        else{\n            // Commit transaction.\n            isRoot && commit( collection );\n        }\n    }\n\n    return removed;\n};\n\n// remove models from the index...\n/** @private */\nfunction _removeFromIndex( collection, toRemove, unset : boolean ){\n    var removed = Array( toRemove.length ),\n        _byId   = collection._byId;\n\n    for( var i = 0, j = 0; i < toRemove.length; i++ ){\n        var model = collection.get( toRemove[ i ] );\n        if( model ){\n            removed[ j++ ] = model;\n            removeIndex( _byId, model );\n            free( collection, model, unset );\n        }\n    }\n\n    removed.length = j;\n\n    return removed;\n}\n\n// Allocate new models array removing models not present in the index.\n/** @private */\nfunction _reallocate( collection, removed ){\n    var prev   = collection.models,\n        models = collection.models = Array( prev.length - removed ),\n        _byId = collection._byId;\n\n    for( var i = 0, j = 0; i < prev.length; i++ ){\n        var model = prev[ i ];\n\n        if( _byId[ model.cid ] ){\n            models[ j++ ] = model;\n        }\n    }\n\n    models.length = j;\n}","import { define, tools, eventsApi, EventMap, definitions, mixinRules, EventsDefinition, Mixable } from '../object-plus'\nimport { ItemsBehavior, transactionApi, Transactional, CloneOptions, Transaction, TransactionOptions, TransactionalDefinition, Owner } from '../transactions'\nimport { Record, SharedType, AggregatedType, createSharedTypeSpec } from '../record'\n\nimport { IdIndex, free, sortElements, dispose, Elements, CollectionCore, addIndex, removeIndex, updateIndex, Comparator, CollectionTransaction } from './commons'\nimport { addTransaction, AddOptions } from './add'\nimport { setTransaction, emptySetTransaction } from './set'\nimport { removeOne, removeMany } from './remove'\nimport { IOPromise, startIO } from '../io-tools'\n\nconst { trigger2, on, off } = eventsApi,\n    { begin, commit, markAsDirty } = transactionApi,\n    { omit, log, assign, defaults, assignToClassProto } = tools;\n\nlet _count = 0;\n\nexport type GenericComparator = string | ( ( x : Record ) => number ) | ( ( a : Record, b : Record ) => number ); \n\nexport interface CollectionOptions extends TransactionOptions {\n    comparator? : GenericComparator\n    model? : typeof Record\n}\n\nexport type Predicate<R> = ( val : R, key : number ) => boolean | object;\n\nexport interface CollectionDefinition extends TransactionalDefinition {\n    model? : typeof Record,\n    itemEvents? : EventsDefinition\n    _itemEvents? : EventMap\n}\n\nconst slice = Array.prototype.slice;\n\nclass CollectionRefsType extends SharedType {\n    static defaultValue = [];\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'c',\n    model : Record,\n    _changeEventName : 'changes',\n    _aggregationError : null\n})\n@definitions({\n    comparator : mixinRules.value,\n    model : mixinRules.protoValue,\n    itemEvents : mixinRules.merge\n})\nexport class Collection< R extends Record = Record> extends Transactional implements CollectionCore {\n    _shared : number\n    _aggregationError : R[]\n\n    static Subset : typeof Collection\n    static Refs : typeof Collection\n    static _SubsetOf : typeof Collection\n    \n    createSubset( models : ElementsArg, options ){\n        const SubsetOf = (<any>this.constructor).subsetOf( this ).options.type,\n            subset   = new SubsetOf( models, options );\n            \n        subset.resolve( this );\n        return subset;\n    }\n\n    static onExtend( BaseClass : typeof Transactional ){\n        // Cached subset collection must not be inherited.\n        const Ctor = this;\n        this._SubsetOf = null;\n\n        function RefsCollection( a, b, listen? ){\n            Ctor.call( this, a, b, ItemsBehavior.share | ( listen ? ItemsBehavior.listen : 0 ) );\n        }\n\n        Mixable.mixins.populate( RefsCollection );\n        \n        RefsCollection.prototype = this.prototype;\n        RefsCollection._attribute = CollectionRefsType;\n\n        this.Refs = this.Subset = <any>RefsCollection;\n\n        Transactional.onExtend.call( this, BaseClass );\n        createSharedTypeSpec( this, SharedType );\n    }\n    \n    static onDefine( definition : CollectionDefinition, BaseClass : any ){\n        if( definition.itemEvents ){\n            const eventsMap = new EventMap( BaseClass.prototype._itemEvents );\n            eventsMap.addEventsMap( definition.itemEvents );\n            this.prototype._itemEvents = eventsMap;\n        }\n\n        if( definition.comparator !== void 0 ) this.prototype.comparator = definition.comparator;\n\n        Transactional.onDefine.call( this, definition );\n    }\n\n    static subsetOf : ( collectionReference : any ) => any;\n    \n    _itemEvents : EventMap\n\n    /***********************************\n     * Core Members\n     */\n    // Array of the records\n    models : R[]\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.models; }\n\n    // Index by id and cid\n    _byId : { [ id : string ] : R }\n\n    set comparator( x : GenericComparator ){\n        let compare;\n\n        switch( typeof x ){\n            case 'string' :\n                this._comparator = ( a, b ) => {\n                    const aa = a[ <string>x ], bb = b[ <string>x ];\n                    if( aa === bb ) return 0;\n                    return aa < bb ? -1 : + 1;\n                } \n                break;\n            case 'function' :\n                if( x.length === 1 ){\n                    this._comparator = ( a, b ) => {\n                        const aa = (<any>x).call( this, a ), bb = (<any>x).call( this, b );\n                        if( aa === bb ) return 0;\n                        return aa < bb ? -1 : + 1;\n                    }\n                }\n                else{\n                    this._comparator = ( a, b ) => (<any>x).call( this, a, b );\n                }\n                break;\n                \n            default :\n                this._comparator = null;\n        }\n    }\n    \n    // TODO: Improve typing\n    getStore() : Transactional {\n        return this._store || ( this._store = this._owner ? this._owner.getStore() : this._defaultStore );\n    }\n\n    _store : Transactional\n\n    get comparator(){ return this._comparator; }\n    _comparator : ( a : R, b : R ) => number\n\n    _onChildrenChange( record : R, options : TransactionOptions = {}, initiator? : Transactional ){\n        // Ignore updates from nested transactions.\n        if( initiator === this ) return;\n\n        const { idAttribute } = this;\n\n        if( record.hasChanged( idAttribute ) ){\n            updateIndex( this._byId, record );\n        }\n\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            // Forward change event from the record.\n            trigger2( this, 'change', record, options )\n        }\n\n        isRoot && commit( this );\n    }\n\n    get( objOrId : string | R | Object ) : R {\n        if( objOrId == null ) return;\n\n        if( typeof objOrId === 'object' ){\n            const id = objOrId[ this.idAttribute ];\n            return ( id !== void 0 && this._byId[ id ] ) || this._byId[ (<R>objOrId).cid ];\n        }\n        else{\n            return this._byId[ objOrId ];\n        }        \n    }\n\n    each( iteratee : ( val : R, key : number ) => void, context? : any ){\n        const fun = bindContext( iteratee, context ),\n            { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            fun( models[ i ], i ); \n        }\n    }\n\n    every( iteratee : Predicate<R>, context? : any ) : boolean {\n        const fun = toPredicateFunction( iteratee, context ),\n            { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            if( !fun( models[ i ], i ) ) return false;\n        }\n\n        return true;\n    }\n\n    filter( iteratee : Predicate<R>, context? : any ) : R[] {\n        const fun = toPredicateFunction( iteratee, context ),\n            { models } = this;\n\n        return this.map( ( x, i ) => fun( x, i ) ? x : void 0 );\n    }\n\n    find( iteratee : Predicate<R>, context? : any ) : R {\n        const fun = toPredicateFunction( iteratee, context ),\n        { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            if( fun( models[ i ], i ) ) return models[ i ];\n        }\n\n        return null;\n    }\n\n    some( iteratee : Predicate<R>, context? : any ) : boolean {\n        return Boolean( this.find( iteratee, context ) );\n    }\n\n    map< T >( iteratee : ( val : R, key : number ) => T, context? : any ) : T[]{\n        const fun = bindContext( iteratee, context ),\n            { models } = this,\n            mapped = Array( models.length );\n\n        let j = 0;\n\n        for( let i = 0; i < models.length; i++ ){\n            const x = fun( models[ i ], i );\n            x === void 0 || ( mapped[ j++ ] = x ); \n        }\n\n        mapped.length = j;\n\n        return mapped;\n    }\n\n    _validateNested( errors : {} ) : number {\n        // Don't validate if not aggregated.\n        if( this._shared ) return 0;\n\n        let count = 0;\n\n        this.each( record => {\n            const error = record.validationError;\n            if( error ){\n                errors[ record.cid ] = error;\n                count++;\n            }\n        });\n\n        return count;\n    }\n\n    model : typeof Record\n\n    // idAttribute extracted from the model type.\n    idAttribute : string\n\n    constructor( records? : ( R | {} )[], options : CollectionOptions = {}, shared? : number ){\n        super( _count++ );\n        this.models = [];\n        this._byId = {};\n        \n        this.comparator  = this.comparator;\n\n        if( options.comparator !== void 0 ){\n            this.comparator = options.comparator;\n            options.comparator = void 0;\n        }\n        \n        this.model       = this.model;\n        \n        if( options.model ){\n            this.model = options.model;\n            options.model = void 0;\n        }\n\n        this.idAttribute = this.model.prototype.idAttribute; //TODO: Remove?\n\n        this._shared = shared || 0;\n\n        if( records ){\n            const elements = toElements( this, records, options );\n            emptySetTransaction( this, elements, options, true );\n        }\n\n        this.initialize.apply( this, arguments );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    initialize(){}\n\n    get length() : number { return this.models.length; }\n    first() : R { return this.models[ 0 ]; }\n    last() : R { return this.models[ this.models.length - 1 ]; }\n    at( a_index : number ) : R {\n        const index = a_index < 0 ? a_index + this.models.length : a_index;    \n        return this.models[ index ];\n    }\n\n    // Deeply clone collection, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const models = this._shared & ItemsBehavior.share ? this.models : this.map( model => model.clone() ),\n              copy : this = new (<any>this.constructor)( models, { model : this.model, comparator : this.comparator }, this._shared );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n        \n        return copy;\n    }\n\n    toJSON() : Object[] {\n        return this.models.map( model => model.toJSON() );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( elements : ElementsArg = [], options : TransactionOptions = {} ) : this {\n        if( (<any>options).add !== void 0 ){\n            this._log( 'warn', \"Collection.set doesn't support 'add' option, behaving as if options.add === true.\", options );\n        }\n\n        // Handle reset option here - no way it will be populated from the top as nested transaction.\n        if( options.reset ){\n            this.reset( elements, options )\n        }\n        else{\n            const transaction = this._createTransaction( elements, options );\n            transaction && transaction.commit();\n        } \n\n        return this;    \n    }\n\n        /**\n     * Enable or disable live updates.\n     * \n     * `true` enables full collection synchronization.\n     * `false` cancel live updates.\n     * `json => true | false` - filter updates\n     */\n    liveUpdates( enabled : LiveUpdatesOption ) : IOPromise<any> {\n        if( enabled ){\n            this.liveUpdates( false );\n\n            const filter = typeof enabled === 'function' ? enabled : () => true;\n\n            this._liveUpdates = {\n                updated : json => {\n                    filter( json ) && this.add( json, { parse : true, merge : true } );\n                },\n\n                removed : id => this.remove( id )\n            };\n\n            return this.getEndpoint().subscribe( this._liveUpdates, this );\n        }\n        else{\n            if( this._liveUpdates ){\n                this.getEndpoint().unsubscribe( this._liveUpdates, this );\n                this._liveUpdates = null;\n            }\n        }\n    }\n\n    _liveUpdates : object\n\n    fetch( a_options : { liveUpdates? : LiveUpdatesOption } & TransactionOptions = {} ) : IOPromise<any> {\n        const options = { parse : true, ...a_options },\n            endpoint = this.getEndpoint();\n\n        return startIO(\n            this,\n            endpoint.list( options, this ),\n            options,\n\n            json => {\n                let result : any = this.set( json, { parse : true, ...options } as TransactionOptions );\n                \n                if( options.liveUpdates ){\n                    result = this.liveUpdates( options.liveUpdates );\n                }\n\n                return result;\n            }\n        );\n    }\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        const aggregated = !this._shared;\n\n        for( let record of this.models ){\n            free( this, record );\n\n            if( aggregated ) record.dispose();\n        }\n\n        this.liveUpdates( false );\n\n        super.dispose();\n    }\n\n    reset( a_elements? : ElementsArg, options : TransactionOptions = {} ) : R[] {\n        const isRoot = begin( this ),\n              previousModels = this.models;\n\n        // Make all changes required, but be silent.\n        if( a_elements ){            \n            emptySetTransaction( this, toElements( this, a_elements, options ), options, true );\n        }\n        else{\n            this._byId = {};\n            this.models = [];\n        }\n\n        markAsDirty( this, options );\n\n        options.silent || trigger2( this, 'reset', this, defaults( { previousModels : previousModels }, options ) );\n\n        // Dispose models which are not in the updated collection.\n        const { _byId } = this;\n        \n        for( let toDispose of previousModels ){\n            _byId[ toDispose.cid ] || free( this, toDispose );\n        }\n\n        isRoot && commit( this );\n        return this.models;\n    }\n\n    // Add elements to collection.\n    add( a_elements : ElementsArg , options : AddOptions = {} ){\n        const elements = toElements( this, a_elements, options ),\n              transaction = this.models.length ?\n                    addTransaction( this, elements, options ) :\n                    emptySetTransaction( this, elements, options );\n\n        if( transaction ){\n            transaction.commit();\n            return transaction.added;\n        }\n    }\n\n    // Remove elements. \n    remove( recordsOrIds : any, options : CollectionOptions = {} ) : R[] | R {\n        if( recordsOrIds ){\n            return Array.isArray( recordsOrIds ) ?\n                        removeMany( this, recordsOrIds, options ) as R[]:\n                        removeOne( this, recordsOrIds, options ) as R;\n        }\n\n        return [];\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.   \n    _createTransaction( a_elements : ElementsArg, options : TransactionOptions = {} ) : CollectionTransaction | void {\n        const elements = toElements( this, a_elements, options );\n\n        if( this.models.length ){\n            return options.remove === false ?\n                        addTransaction( this, elements, options, true ) :\n                        setTransaction( this, elements, options );\n        }\n        else{\n            return emptySetTransaction( this, elements, options );\n        }\n    }\n\n    static _attribute = AggregatedType;\n\n    /***********************************\n     * Collection manipulation methods\n     */\n\n    pluck( key : keyof R ) : any[] {\n        return this.models.map( model => model[ key ] );\n    }\n\n    sort( options : TransactionOptions = {} ) : this {\n        if( sortElements( this, options ) ){\n            const isRoot = begin( this );\n            \n            if( markAsDirty( this, options ) ){\n                trigger2( this, 'sort', this, options );\n            }\n\n            isRoot && commit( this );\n        }\n\n        return this;\n    }\n\n    // Add a model to the end of the collection.\n    push(model : ElementsArg, options : CollectionOptions ) {\n      return this.add(model, assign({at: this.length}, options));\n    }\n\n    // Remove a model from the end of the collection.\n    pop( options : CollectionOptions ) : R {\n      var model = this.at(this.length - 1);\n      this.remove(model, { unset : true, ...options });\n      return model;\n    }\n\n    // Remove and return given model.\n    // TODO: do not dispose the model for aggregated collection.\n    unset( modelOrId : R | string, options? ) : R {\n        const value = this.get( modelOrId );\n        this.remove( modelOrId, { unset : true, ...options } );\n        return value;\n    }\n\n    // Add a model to the beginning of the collection.\n    unshift(model : ElementsArg, options : CollectionOptions ) {\n      return this.add(model, assign({at: 0}, options));\n    }\n\n    // Remove a model from the beginning of the collection.\n    shift( options? : CollectionOptions ) : R {\n      var model = this.at(0);\n      this.remove( model, { unset : true, ...options } );\n      return model;\n    }\n\n    // Slice out a sub-array of models from the collection.\n    slice() : R[] {\n      return slice.apply(this.models, arguments);\n    }\n\n    indexOf( modelOrId : any ) : number {\n        const record = this.get( modelOrId );\n        return this.models.indexOf( record );\n    }\n\n    modelId( attrs : {} ) : any {\n        return attrs[ this.model.prototype.idAttribute ];\n    }\n\n    // Toggle model in collection.\n    toggle( model : R, a_next? : boolean ) : boolean {\n        var prev = Boolean( this.get( model ) ),\n            next = a_next === void 0 ? !prev : Boolean( a_next );\n\n        if( prev !== next ){\n            if( prev ){\n                this.remove( model );\n            }\n            else{\n                this.add( model );\n            }\n        }\n\n        return next;\n    }\n\n    _log( level : tools.LogLevel, text : string, value ) : void {\n        tools.log( level, `[Collection Update] ${ this.model.prototype.getClassName() }.${ this.getClassName() }: ` + text, {\n            Argument : value,\n            'Attributes spec' : this.model.prototype._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Collection';\n    }\n}\n\nexport type LiveUpdatesOption = boolean | ( ( x : any ) => boolean );\n\nexport type ElementsArg = Object | Record | Object[] | Record[];\n\n// TODO: make is safe for parse to return null (?)\nfunction toElements( collection : Collection, elements : ElementsArg, options : CollectionOptions ) : Elements {\n    const parsed = options.parse ? collection.parse( elements, options ) : elements; \n    return Array.isArray( parsed ) ? parsed : [ parsed ];\n}\n\ncreateSharedTypeSpec( Collection, SharedType );\n\nRecord.Collection = <any>Collection;\n\nfunction bindContext( fun : Function, context? : any ){\n    return context !== void 0 ? ( v, k ) => fun.call( context, v, k ) : fun;\n}\n\nfunction toPredicateFunction<R>( iteratee : Predicate<R>, context : any ){\n    if( typeof iteratee === 'object' ){\n        // Wrap object to the predicate...\n        return x => {\n            for( let key in iteratee as any ){\n                if( iteratee[ key ] !== x[ key ] )\n                    return false;\n            }\n\n            return true;\n        }\n    }\n    \n    return bindContext( iteratee, context );\n\n}","import { Collection } from '../collection'\nimport { Record } from '../record'\nimport { CompiledReference } from '../traversable'\n\nexport type CollectionReference = ( () => Collection ) | Collection | string; \n\n/** @private */\nexport function parseReference( collectionRef : CollectionReference ) : ( root : Record ) => Collection {\n    switch( typeof collectionRef ){\n        case 'function' :\n            return root => (<any>collectionRef).call( root );\n        case 'object'   :\n            return () => <Collection>collectionRef;\n        case 'string'   :\n            const { resolve } = new CompiledReference( <string>collectionRef );\n            return resolve;\n    }\n}","import { AnyType, AttributeOptions } from '../record'\nimport { parseReference, CollectionReference } from './commons'\nimport { Collection } from '../collection'\nimport { Record } from '../record'\n\nimport { ChainableAttributeSpec } from '../record'\n\n/********\n * Reference to model by id.\n * \n * Untyped attribute. Holds model id, when unresolved. When resolved, is substituted\n * with a real model.\n * \n * No model changes are detected and counted as owner's change. That's intentional.\n */\n\n/** @private */\ntype RecordRefValue = Record | string;\n\n/** @private */\nclass RecordRefType extends AnyType {\n    // It is always serialized as an id, whenever it's resolved or not. \n    toJSON( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Wne \n    clone( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Model refs by id are equal when their ids are equal.\n    isChanged( a : RecordRefValue, b : RecordRefValue){\n        var aId = a && ( (<Record>a).id == null ? a : (<Record>a).id ),\n            bId = b && ( (<Record>b).id == null ? b : (<Record>b).id );\n\n        return aId !== bId;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n}\n\nRecord.from = function from( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const getMasterCollection = parseReference( masterCollection );\n\n    const typeSpec = new ChainableAttributeSpec({\n        value : null,\n        _attribute : RecordRefType\n    });\n    \n    return typeSpec\n        .get( function( objOrId : RecordRefValue, name : string ) : Record {\n            if( typeof objOrId === 'object' ) return objOrId;\n\n            // So, we're dealing with an id reference. Resolve it.\n            const collection = getMasterCollection( this );\n            let   record : Record = null;\n\n            // If master collection exists and is not empty...\n            if( collection && collection.length ){\n                // Silently update attribute with record from this collection.\n                record = collection.get( objOrId ) || null;\n                this.attributes[ name ] = record;\n\n                // Subscribe for events manually. delegateEvents won't be invoked.\n                record && this._attributes[ name ].handleChange( record, null, this, {} );\n            }\n\n            return record;\n        });\n};","import { Collection, CollectionOptions } from '../collection'\nimport { tools, eventsApi, define } from '../object-plus'\nimport { Record, AggregatedType } from '../record'\nimport { parseReference, CollectionReference } from './commons'\nimport { ChainableAttributeSpec } from '../record'\nimport { Transactional, ItemsBehavior, TransactionOptions, transactionApi } from '../transactions'\n\nconst { fastDefaults } = tools;\n\ntype RecordsIds = ( string | number )[];\n\nCollection.subsetOf = function subsetOf( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const SubsetOf = this._SubsetOf || ( this._SubsetOf = defineSubsetCollection( this ) ),\n        getMasterCollection = parseReference( masterCollection ),\n        typeSpec = new ChainableAttributeSpec({\n            type : SubsetOf\n        });\n\n    return typeSpec.get(\n        function( refs ){\n            !refs || refs.resolvedWith || refs.resolve( getMasterCollection( this ) );\n            return refs;\n        }\n    );\n};\n\nconst subsetOfBehavior = ItemsBehavior.share | ItemsBehavior.persistent;\n\nfunction defineSubsetCollection( CollectionConstructor : typeof Collection ) {\n    @define class SubsetOfCollection extends CollectionConstructor {\n        refs : any[];\n        resolvedWith : Collection = null;\n\n        _attribute : AggregatedType\n\n        get __inner_state__(){ return this.refs || this.models; }\n\n        constructor( recordsOrIds?, options? ){\n            super( [], options, subsetOfBehavior );\n            this.refs = toArray( recordsOrIds );\n        }\n\n        // Remove should work fine as it already accepts ids. Add won't...\n        add( a_elements, options = {} ){\n            const { resolvedWith } = this,\n                    toAdd = toArray( a_elements );\n            \n            if( resolvedWith ){\n                // If the collection is resolved already, everything is simple.\n                return super.add( resolveRefs( resolvedWith, toAdd ), options );\n            }\n            else{\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                if( toAdd.length ){\n                    const isRoot = transactionApi.begin( this );\n\n                    // Save elements to resolve in future...\n                    this.refs = this.refs ? this.refs.concat( toAdd ) : toAdd.slice();\n\n                    transactionApi.markAsDirty( this, options );\n\n                    // And throw the 'changes' event.\n                    isRoot && transactionApi.commit( this );\n                }\n            }\n        }\n\n        reset( a_elements?, options = {} ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super.reset( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options ) || [];\n        }\n\n        _createTransaction( a_elements, options? ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super._createTransaction( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options );\n        }\n\n        // Serialized as an array of model ids.\n        toJSON() : RecordsIds {\n            return this.refs ?\n                this.refs.map( objOrId => objOrId.id || objOrId ) :\n                this.models.map( model => model.id );\n        }\n\n        // Subset is always valid.\n        _validateNested(){ return 0; }\n\n        // Must be shallow copied on clone.\n        clone( owner? ){\n            var Ctor = (<any>this).constructor,\n                copy = new Ctor( [], {\n                    model : this.model,\n                    comparator : this.comparator\n                });\n\n            if( this.resolvedWith ){\n                copy.resolvedWith = this.resolvedWith;\n                copy.refs = null;\n                copy.reset( this.models, { silent : true } );\n            }\n            else{\n                copy.refs = this.refs.slice();\n            }\n\n            return copy;\n        }\n\n        // Clean up the custom parse method possibly defined in the base class.\n        parse( raw : any ) : Record[] {\n            return raw;\n        }\n\n        resolve( collection : Collection ) : this {\n            if( collection && collection.length ){\n                this.resolvedWith = collection;\n\n                if( this.refs ){\n                    this.reset( this.refs, { silent : true } );\n                    this.refs = null;\n                }\n            }\n\n            return this;\n        }\n\n        getModelIds() : RecordsIds { return this.toJSON(); }\n\n        toggle( modelOrId : any, val : boolean ) : boolean {\n            return super.toggle( this.resolvedWith.get( modelOrId ), val );\n        }\n\n        addAll() : Record[] {\n            if( this.resolvedWith ){\n                this.set( this.resolvedWith.models );\n                return this.models;\n            }\n\n            throw new Error( \"Cannot add elemens because the subset collection is not resolved yet.\" );\n        }\n\n        toggleAll() : Record[] {\n            return this.length ? this.reset() : this.addAll();\n        }\n    }\n\n    // Clean up all custom item events to prevent memory leaks.\n    SubsetOfCollection.prototype._itemEvents = void 0;\n\n    return SubsetOfCollection;\n}\n\nfunction resolveRefs( master, elements ){\n    const records = [];\n    \n    for( let el of elements ){\n        const record = master.get( el );\n        if( record ) records.push( record );\n    }\n\n    return records;\n}\n\nfunction delaySet( collection, elements, options ) : void {\n    if( tools.notEqual( collection.refs, elements ) ){\n        const isRoot = transactionApi.begin( collection );\n\n        // Save elements to resolve in future...\n        collection.refs = elements.slice();\n\n        transactionApi.markAsDirty( collection, options );\n        \n        // And throw the 'changes' event.\n        isRoot && transactionApi.commit( collection );\n    }\n}\n\nfunction toArray( elements ){\n    return elements ? ( \n        Array.isArray( elements ) ? elements : [ elements ]\n    ) : [];\n}","import { Record } from '../record'\nimport { Transactional } from '../transactions'\nimport { startIO, IOPromise } from '../io-tools'\n\nlet _store : Store = null;\n\nexport class Store extends Record {\n    getStore() : Store { return this; }\n \n    // delegate item lookup to owner, and to the global store if undefined\n    get( name : string ) : any {\n        // Lookup for resource in the current store. \n        let local = this[ name ];\n\n        // If something is found or it's the global store, return result.\n        if( local || this === this._defaultStore ) return local;\n\n        // Forward failed lookup to owner or global store.\n        return this._owner ? this._owner.get( name ) : this._defaultStore.get( name ); \n    }\n\n    static get global(){ return _store; }\n    static set global( store : Store ){\n        if( _store ){\n          _store.dispose();\n        }\n\n        Transactional.prototype._defaultStore = _store = store;\n    }\n}\n\nStore.global = new Store();","/**\n * Export everything \n */\nexport * from './object-plus'\nexport * from './collection'\nexport * from './relations'\nexport * from './record'\n\nexport * from './transactions'\n\nexport { IOEndpoint, IOPromise, createIOPromise } from './io-tools'\n\n// Exported module itself is the global event bus.\nimport { Events } from './object-plus/'\nexport const { on, off, trigger, once, listenTo, stopListening, listenToOnce } = <any>Events;\n\nimport { Collection } from './collection'\n\n// Define synonims for NestedTypes backward compatibility.\nimport { Record as Model } from './record' \nimport { define, Mixable as Class } from './object-plus/'\nexport { Model, Class };\n\nexport function attributes( attrDefs ) : typeof Model {\n    @define class DefaultRecord extends Model {\n        static attributes = attrDefs;\n    }\n\n    return DefaultRecord;\n}\n\nimport { ChainableAttributeSpec } from './record'\n\n/** Typeless attribute declaration with default value. */ \nexport function value( x : any ) : ChainableAttributeSpec {\n    return new ChainableAttributeSpec({ value : x });\n}\n\n/** Wrap model or collection method in transaction. */\nexport function transaction< F extends Function >( method : F ) : F {\n    return <any>function( ...args ){\n        let result;\n        \n        this.transaction( () => {\n            result = method.apply( this, args );\n        });\n        \n        return result;\n    }\n}"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__rest","e","indexOf","getOwnPropertySymbols","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","levelToNumber","none","error","warn","info","log","debug","a_level","a_msg","a_props","msg","props","level","levelAsNumber","throw","logger","Error","stop","process","env","NODE_ENV","console","args","name_1","push","apply","value","proto","getPrototypeOf","every","isValidJSON","Class","obj","fun","ArrayProto","arr","result","someArray","someObject","predicate","some","x","source","dest","discard","name","other","defaults","func","memo","first","DateProto","Date","ObjectProto","a","protoA","notEqual","arraysNotEqual","keysA","keys","objectsNotEqual","HashProto","hash","definition","_i","names","names_1","_a","name_2","prop","o","Mixable","protoProps","staticProps","BaseClass","getBaseClass","mixins","defineMixin","merge","mergeObject","getStaticDefinitions","onDefine","definitions","mergeInheritedMembers","spec","statics","TheSubclass","tslib_1.__extends","predefine","define","Constructor","__super__","MixinsState","get","populate","onExtend","ClassOrDefinition","Ctor","rules","definitionRules","hashMap","definitionKey","_b","mergeRules","appliedMixins","transform","rule","slice","mixins_1","mixin","isArray","sourceMixins","concat","ctors","ctors_1","unshift","object","ignore","dontMix","getOwnPropertyNames","forEachOwnProp","sourceProp","_this","assignProperty","mixinRules","protoValue","baseProto","resolveRule","function","caller","list","pipe","classFirst","classLast","destProp","configurable","map","EventMap","handlers","addEventsMap","addEvent","split","eventSplitter","getBubblingHandler","callback","EventDescriptor","event_1","on","event_2","off","handler","_bubblingHandlers","event","trigger5","trigger3","trigger2","context","next","_events","filteredHead","prev","head","ev","_callback","EventHandler","once_1","_once","listOff","name_3","api","events","test","self","queue","all","listSend2","listSend3","listSend4","listSend5","f","listSend6","strings","once","_idCount","cid","uniqueId","initialize","Messenger","localEvents","_localEvents","properties","eventsMap","defineProperties","toPropertyDescriptor","addReference","a_source","_listeningTo","removeAll","second","_disposed","stopListening","Events","omit","listener","extend","tools.assign","tools.log","_validateNested","nested","validate","ValidationError","iteratee","each","eachError","referenceMask","reference","splitTail","path","match","substr","tail","pop","local","resolve","Function","shift","join","root","action","skip","getStore","getOwner","promise","options","thenDo","abortIO","ioUpdate","_ioPromise","then","resp","triggerAndBubble","catch","err","abort","eventSource","trigger","collection","ItemsBehavior","cidPrefix","Transactional","endpoint","_endpoint","Transactional_1","_owner","_ownerKey","_changeEventName","listenTo","isRoot","transactionApi","begin","update","set","commit","values","transaction","_createTransaction","__inner_state__","_changeToken","data","resolveReference","_defaultStore","v","k","val","getOwnerEndpoint","_validationError","validationError","getValidationError","_transaction","markAsDirty","dirty","silent","_isDirty","initiator","originalOptions","_onChildrenChange","aquire","owner","child","free","_endpoints","_begin","_markAsDirty","record","_attributes","doUpdate","attributes","_previousAttributes","AttributesCopy","_changedAttributes","UpdateRecordMixin","attribute","propagateChanges","forceAttributeChange","a_values","unknown","changes","parse","shouldBeAnObject","RecordTransaction","nested_1","attrDefs","attrs","attr","Attributes","_log","nested_2","changes_1","emptyOptions","a_options","getHooks","transforms","changeHandlers","type","toJSON","changeEvents","hasCustomDefault","defaultValue","tools.isValidJSON","JSON","stringify","isRequired","convert","getHook_1","getHook","reduce","chainGetHooks","validate_1","chainTransforms","handleChange","chainChangeHandlers","AnyType","_attribute","model","setAttribute","isChanged","text","getClassName","Record","Attribute definition","Prev. value","New value","prevHook","nextHook","prevTransform","nextTransform","prevHandler","nextHandler","AggregatedType","clone","canBeUpdated","nestedTransaction","_shared","persistent","_handleChange","unset","dispose","ChainableAttributeSpec","check","metadata","definitionDecorator","ref","_onChange","emptyFunction","changed","eventMap","unsubscribe","subscribe","cloned","_isRequired","has","asProp","_has","attrSpec","Number","String","Boolean","inferType","shared","DateType","date","timestamp","getTime","toISOString","msDatePattern","MSDateType","msDate","exec","TimestampType","microsoft","isNaN","supportsDate","struct","minutesOffset","isoDatePattern","numericKeys","undefined","UTC","safeParseDate","ImmutableClassType","PrimitiveType","NumericType","num","isFinite","Math","round","Integer","integer","window","ArrayType","ObjectType","FunctionType","doNothing","shareAndListen","listen","share","SharedType","implicitObject","attributesDefinition","baseClassAttributes","myAttributes","_.transform","createAttribute","allAttributes","_.defaults","ConstructorsMixin","constructorsMixin","_attributesArray","createPropertyDescriptor","_toJSON","attrsWithParse","filter","_parse","parseMixin","attrSpecs","eventsApi.EventMap","createWatcherFromRef","watcher","localEventsMixin","attrDef","toAttributeOptions","Attribute","IORecordMixin","save","getEndpoint","json","startIO","isNew","id","fetch","read","destroy","remove","isEmpty","_cidCounter","_super","typeCheck","diff","hasChanged","old","nullify","forEachAttr","idAttribute","_attributesArray_1","copy","pinStore","errors","asJson","l","newModel","clear","Attributes definition:","Collection","BaseRecordAttributes","BaseRecordAttributesCopy","IdAttribute","DefaultCollection","createSharedTypeSpec","dynamicMixin","_aquire","_free","_aggregationError","_itemEvents","_comparator","sort","models","index","previous","added","removed","sorted","CollectionTransaction","logAggregationError","added_1","_d","removed_1","_e","items","a_items","forceMerge","_byId","prevLength","a_items_1","item","updateIndex","convertAndAquire","addIndex","appendElements","needSort","at","length_1","j","moveElements","sortElements","sortOrMoveElements","silentOptions","len","src","_reallocateEmpty","_prevById","prevModels","toAdd","orderKept","_reallocate","reusedCount","previous_1","_garbageCollect","children","children_1","freeAll","addedOrChanged","toRemove","removeIndex","_removeFromIndex","_count","CollectionRefsType","records","comparator","emptySetTransaction","toElements","subset","SubsetOf","subsetOf","_SubsetOf","RefsCollection","Refs","Subset","itemEvents","aa","bb","_store","objOrId","bindContext","toPredicateFunction","find","mapped","count","a_index","elements","add","reset","enabled","liveUpdates","filter_1","_liveUpdates","updated","tslib_1.__assign","aggregated","a_elements","previousModels","previousModels_1","toDispose","addTransaction","recordsOrIds","removeMany","el","splice","notify","removeOne","setTransaction","modelOrId","a_next","Argument","Attributes spec","parsed","collectionRef","RecordRefType","from","masterCollection","getMasterCollection","parseReference","CollectionConstructor","subsetOfBehavior","refs","toArray","SubsetOfCollection","resolvedWith","resolveRefs","delaySet","raw","toggle","addAll","defineSubsetCollection","master","elements_1","tools.notEqual","Store","store","global","listenToOnce","DefaultRecord","Model","method","reject","onAbort","fn","Promise","a_resolve","a_reject","attrName","getMetadata"],"mappings":"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"}