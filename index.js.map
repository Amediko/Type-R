{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 50a4948147fc7dadc20f","webpack:///./src/index.ts","webpack:///./src/class.ts","webpack:///./src/tools.ts","webpack:///./src/model.ts","webpack:///./src/record/index.ts","webpack:///./src/record/transaction.ts","webpack:///./src/record/define.ts","webpack:///./src/record/attribute.ts","webpack:///./src/record/nestedTypes.ts"],"names":[],"mappings":"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","file":"./index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Nested\"] = factory();\n\telse\n\t\troot[\"Nested\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 50a4948147fc7dadc20f\n **/","import { Class, mixins, define,  mixinRules, extendable } from './class.ts'\r\nimport { Model } from './model.ts'\r\n//import { Collection } from './collection'\r\nimport * as tools from './tools.ts'\r\n\r\nexport {\r\n    Class, define, mixins, mixinRules, extendable,\r\n    Model,\r\n    //Collection,\r\n    tools\r\n}; \n\n\n/** WEBPACK FOOTER **\n ** ./src/index.ts\n **/","/**\r\n * Mixins and @define metaprogramming class extensions\r\n * \r\n * Vlad Balin & Volicon, (c) 2016\r\n */\r\nimport { log, assign, omit, getPropertyDescriptor } from './tools.ts'\r\n\r\ntype MergeRule = 'merge' | 'pipe' | 'sequence' | 'reverse' | 'every' | 'some'\r\n\r\ninterface IMixinRules {\r\n    [ propertyName : string ] : MergeRule | IMixinRules\r\n}\r\n\r\nexport interface ClassDefinition {\r\n    properties? : PropertyDescriptorMap\r\n    mixins? : Array< Object >\r\n    mixinRules? : IMixinRules\r\n    [ name : string ] : any\r\n}\r\n\r\ndeclare function __extends( a, b )\r\n\r\nexport interface Factory {\r\n    create( ...args : any[] ) : {}\r\n}\r\n\r\nexport interface Extendable extends Factory {\r\n    define(spec? : ClassDefinition, statics? : {} ) : Extendable\r\n    extend(spec? : ClassDefinition, statics? : {} ) : Extendable\r\n    mixins( ...mixins : {}[] ) : Extendable\r\n    mixinRules( mixinRules : IMixinRules ) : Extendable\r\n}\r\n\r\n// Base class, holding metaprogramming class extensions\r\n// Supports mixins, and Class.define metaprogramming method.\r\nexport class Class {\r\n\r\n    // Generic class factory. May be overridden for abstract classes. Not inherited.\r\n    static create( a : any, b? : any, c? : any ) : Class {\r\n        return new (<any>this)( a, b, c );\r\n    }\r\n\r\n    protected static _mixinRules : IMixinRules = { properties : 'merge' };\r\n\r\n    /**\r\n     * Attach mixins to class prototype.\r\n     */\r\n    static mixins( ...mixins : {}[] ) : Extendable {\r\n        const proto      = this.prototype,\r\n              mergeRules : IMixinRules = this._mixinRules || {};\r\n\r\n        for( var i = mixins.length - 1; i >= 0; i-- ) {\r\n            const mixin = mixins[ i ];\r\n            if( mixin instanceof Array ) {\r\n                Class.mixins.apply( this, mixin );\r\n            }\r\n            else {\r\n                mergeProps( proto, mixin, mergeRules );\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    // Members merging policy is controlled by MyClass.mixinRules property.\r\n    // mixinRules are properly inherited and merged.\r\n    static mixinRules( mixinRules : IMixinRules ) : Extendable {\r\n        const Base = Object.getPrototypeOf( this.prototype ).constructor;\r\n\r\n        if( Base._mixinRules ) {\r\n            mergeProps( mixinRules, Base._mixinRules );\r\n        }\r\n\r\n        this._mixinRules = mixinRules;\r\n        return this;\r\n    }\r\n\r\n    // Autobinding helper to be used from constructors\r\n    bindAll( ...names : string [] )\r\n    bindAll() {\r\n        for( var i = 0; i < arguments.length; i++ ) {\r\n            const name = arguments[ i ];\r\n\r\n            this[ name ] = this[ name ].bind( this );\r\n        }\r\n    }\r\n\r\n    // Attach Class methods to existing constructors\r\n    static attach( ...args : any[] ) : void {\r\n        for (let Ctor of args) {\r\n            Ctor.create            = this.create;\r\n            Ctor.define            = this.define;\r\n            Ctor.mixins            = this.mixins;\r\n            Ctor.mixinRules        = this.mixinRules;\r\n            Ctor._mixinRules       = this._mixinRules;\r\n            Ctor.prototype.bindAll = this.prototype.bindAll;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Main metaprogramming method. May be overriden in subclasses to customize the behavior.   \r\n     * - Merge definition to the prototype.\r\n     * - Add native properties with descriptors from spec.properties to the prototype.\r\n     * - Prevents inheritance of 'create' factory method.\r\n     * - Assign mixinRules static property, and merge it with parent.\r\n     * - Adds mixins.\r\n     */\r\n    static define( definition : ClassDefinition = {}, staticProps? : {} ) : Extendable {\r\n        // That actually might happen when we're using @define decorator... \r\n        if( !this.define ){\r\n            log.error( \"[Class.define] Class must have class extensions to use @define decorator. Use '@extendable' before @define, or extend the base class with class extensions.\", definition );\r\n            return this;\r\n        }\r\n\r\n        // Obtain references to prototype and base class.\r\n        const proto = this.prototype,\r\n              BaseClass : Extendable = Object.getPrototypeOf( proto ).constructor;\r\n\r\n        // Make sure we don't inherit class factories.\r\n        if( BaseClass.create === this.create ) {\r\n            this.create = Class.create;\r\n        }\r\n\r\n        // Extract prototype properties from the definition.\r\n        const protoProps = omit( definition, 'properties', 'mixins', 'mixinRules' ),\r\n            { properties = <PropertyDescriptorMap> {}, mixins, mixinRules } = definition;\r\n\r\n        // Update prototype and statics.\r\n        assign( proto, protoProps );\r\n        assign( this, staticProps );\r\n\r\n        // Define native properties.\r\n        properties && Object.defineProperties( proto, properties );\r\n\r\n        // Apply mixins and mixin rules.\r\n        mixinRules && this.mixinRules( mixinRules );\r\n        mixins && this.mixins( mixins );\r\n\r\n        return this;\r\n    }\r\n\r\n    // Backbone-compatible extend method to be used in ES5 and for backward compatibility\r\n    static extend(spec? : ClassDefinition, statics? : {} ) : Extendable {\r\n        let Subclass : Extendable;\r\n\r\n        // If constructor function is given...\r\n        if( spec.constructor ){\r\n            // ...we need to manually call internal TypeScript __extend function. Hack! Hack!\r\n            Subclass = <any>spec.constructor; \r\n            __extends( Subclass, this );\r\n        }\r\n        // Otherwise, create the subclall in usual way.\r\n        else{\r\n            Subclass = class Subclass extends this {};\r\n        }\r\n\r\n        // And apply definitions\r\n        return Subclass.define( spec, statics );\r\n    }\r\n}\r\n\r\n// @mixinRules({ ... }) decorator\r\nexport function mixinRules( rules : IMixinRules ) {\r\n    return createDecorator( 'mixinRules', rules );\r\n}\r\n\r\n// @mixins( A, B, C ) decorator\r\nexport function mixins( ...list : {}[] ) {\r\n    return createDecorator( 'mixins', list );\r\n}\r\n\r\n// @extendable decorator\r\nexport function extendable( Type : Function ) : Function{\r\n    Class.attach( Type );\r\n    return Type;\r\n}\r\n\r\nfunction defineDecorator( spec : {} | Extendable ) {\r\n    return typeof spec === 'function' ?\r\n                   (<Extendable>spec).define() :\r\n                   createDecorator( 'define', spec );\r\n}\r\n\r\nexport { defineDecorator as define };\r\n\r\n// create ES7 decorator function for the static class members\r\nfunction createDecorator( name : string, spec : {} ) : ( Ctor : Extendable ) => Extendable {\r\n    return function( Ctor : Extendable ) : Extendable {\r\n        if( Ctor[ name ] ) {\r\n            Ctor[ name ]( spec );\r\n        }\r\n        else {\r\n            Class[ name ].call( Ctor, spec );\r\n        }\r\n\r\n        return Ctor;\r\n    }\r\n}\r\n\r\n/***********************\r\n * Mixins helpers\r\n */\r\nfunction mergeObjects( a : {}, b : {}, rules? : IMixinRules ) : {} {\r\n    const x = assign( {}, a );\r\n    return mergeProps( x , b, rules );\r\n}\r\n\r\ninterface IMergeFunctions {\r\n    [ name : string ] : ( a : Function, b : Function ) => Function\r\n}\r\n\r\nconst mergeFunctions : IMergeFunctions = {\r\n    pipe< A, B, C >( a: ( x : B ) => C, b : ( x : A ) => B ) : ( x : A ) => C {\r\n        return function( x : A ) : C {\r\n            return a.call( this, b.call( this, x ) );\r\n        }\r\n    },\r\n\r\n    sequence( a : Function, b : Function ){\r\n        return function() : void {\r\n            a.apply( this, arguments );\r\n            b.apply( this, arguments );\r\n        }\r\n    },\r\n\r\n    reverse( a : Function, b : Function ){\r\n        return function() : void {\r\n            b.apply( this, arguments );\r\n            a.apply( this, arguments );\r\n        }\r\n    },\r\n\r\n    every( a : Function, b : Function ){\r\n        return function() {\r\n            return a.apply( this, arguments ) && b.apply( this, arguments );\r\n        }\r\n    },\r\n\r\n    some( a : Function, b : Function ){\r\n        return function() {\r\n            return a.apply( this, arguments ) || b.apply( this, arguments );\r\n        }\r\n    }\r\n};\r\n\r\nfunction mergeProps< T extends {} >( target : T, source : {}, rules : IMixinRules = {}) : T {\r\n    for( let name of Object.getOwnPropertyNames( source ) ) {\r\n        const sourceProp = Object.getOwnPropertyDescriptor( source, name ),\r\n              destProp   = getPropertyDescriptor( target, name ); // Shouldn't be own\r\n\r\n        if( destProp ) {\r\n            const rule  = rules[ name ],\r\n                  value = destProp.value;\r\n\r\n            if( rule && value ) {\r\n                target[ name ] = typeof rule === 'object' ?\r\n                    mergeObjects( value, sourceProp.value, rule ) :(\r\n                        rule === 'merge' ?\r\n                            mergeObjects( value, sourceProp.value ) :\r\n                            mergeFunctions[ rule ]( value, sourceProp.value )\r\n                    );\r\n            }\r\n        }\r\n        else {\r\n            Object.defineProperty( target, name, sourceProp );\r\n        }\r\n    }\r\n\r\n    return target;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/class.ts\n **/","/**\r\n * Simple overridable logging stubs\r\n *\r\n */\r\n\r\nexport let log = {\r\n    level : 2,\r\n\r\n    error( ...args : any[] ) : void {\r\n        console.error.apply( this, args );\r\n    },\r\n\r\n    warn( ...args : any[] ) : void {\r\n        if( this.level > 0 ) console.warn.apply( this, args );\r\n    },\r\n\r\n    info(){\r\n        if( this.level > 1 ) console.info.apply( this, arguments );\r\n    },\r\n\r\n    debug(){\r\n        if( this.level > 2 ) console.log.apply( this, arguments );\r\n    }\r\n};\r\n\r\n// Check if value is valid JSON.\r\nexport function isValidJSON( value : any ) : boolean {\r\n    if( value === null ){\r\n        return true;\r\n    }\r\n\r\n    switch( typeof value ){\r\n    case 'number' :\r\n    case 'string' :\r\n    case 'boolean' :\r\n        return true;\r\n\r\n    case 'object':\r\n        var proto = Object.getPrototypeOf( value );\r\n\r\n        if( proto === Object.prototype || proto === Array.prototype ){\r\n            return every( value, isValidJSON );\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * Object manipulation helpers...\r\n */\r\n\r\ntype Iteratee = ( value : any, key? : string | number ) => any;\r\n\r\nfunction someArray( arr : any[], fun : Iteratee ) : any {\r\n    let result;\r\n\r\n    for( let i = 0; i < arr.length; i++ ){\r\n        if( result = fun( arr[ i ], i ) ){\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nfunction someObject( obj : {}, fun : Iteratee ) : any {\r\n    let result;\r\n\r\n    for( let key in obj ){\r\n        if( obj.hasOwnProperty( key ) ){\r\n            if( result = fun( obj[ key ], key ) ){\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function some( obj, fun : Iteratee ) : any {\r\n    if( Object.getPrototypeOf( obj ) === ArrayProto ){\r\n        return someArray( obj, fun );\r\n    }\r\n    else{\r\n        return someObject( obj, fun );\r\n    }\r\n}\r\n\r\nexport function every( obj : { }, predicate : Iteratee ) : boolean {\r\n    return !some( obj, x => !predicate( x ) );\r\n}\r\n\r\nexport function getPropertyDescriptor( obj : {}, prop : string ) : PropertyDescriptor {\r\n    let desc : PropertyDescriptor;\r\n\r\n    for( let proto = obj; !desc && proto; proto = Object.getPrototypeOf( proto ) ) {\r\n        desc = Object.getOwnPropertyDescriptor( obj, prop );\r\n    }\r\n\r\n    return desc;\r\n}\r\n\r\nexport function omit( source : {}, ...rest : string[] ) : {}\r\nexport function omit( source ) : {} {\r\n    const dest = {}, discard = {};\r\n\r\n    for( let i = 1; i < arguments.length; i ++ ){\r\n        discard[ arguments[ i ] ] = true;\r\n    }\r\n\r\n    for( var name in source ) {\r\n        if( !discard[ name ] && source.hasOwnProperty( name ) ) {\r\n            dest[ name ] = source[ name ];\r\n        }\r\n    }\r\n\r\n    return dest;\r\n}\r\n\r\nexport function transform< A, B >( dest : { [ key : string ] : A }, source : { [ key : string ] : B }, fun : ( value : B, key : string ) => A | void ) : { [ key : string ] : A } {\r\n    for( var name in source ) {\r\n        if( source.hasOwnProperty( name ) ) {\r\n            var value = fun( source[ name ], name );\r\n            value === void 0 || ( dest[ name ] = < A >value );\r\n        }\r\n    }\r\n\r\n    return dest;\r\n}\r\n\r\nexport function fastAssign( dest : {}, source : {} ) : void {\r\n    for( var name in source ) {\r\n        dest[ name ] = source[ name ];\r\n    }\r\n}\r\n\r\nexport function fastDefaults( dest : {}, source : {} ) : void {\r\n    for( var name in source ) {\r\n        dest[ name ] === void 0 || ( dest[ name ] = source[ name ] );\r\n    }\r\n}\r\n\r\nfunction forAllArgs( fun ) {\r\n    return function< T >( dest : T, ...sources ) : T {\r\n        for( var i = 0; i < sources.length; i++ ) {\r\n            const source = sources[ i ];\r\n            source && fun( dest, source );\r\n        }\r\n\r\n        return dest;\r\n    }\r\n}\r\n\r\nexport const assign = forAllArgs( ( dest, source ) => {\r\n    for( var name in source ) {\r\n        if( source.hasOwnProperty( name ) ) {\r\n            dest[ name ] = source[ name ];\r\n        }\r\n    }\r\n} );\r\n\r\nexport const defaults = forAllArgs( ( dest, source ) => {\r\n    for( var name in source ) {\r\n        if( source.hasOwnProperty( name ) ) {\r\n            dest[ name ] === void 0 || ( dest[ name ] = source[ name ] );\r\n        }\r\n    }\r\n} );\r\n\r\n/**\r\n * notEqual( a, b ) function, for deep JSON comparison\r\n * Optimized for primitive types\r\n */\r\n\r\nconst ArrayProto = Array.prototype,\r\n      DateProto = Date.prototype,\r\n      ObjectProto = Object.prototype;\r\n\r\nexport function notEqual( a : any, b : any) : boolean {\r\n    if( a === b ) return false;\r\n\r\n    if( a && b && typeof a == 'object' && typeof b == 'object' ) {\r\n        const protoA = Object.getPrototypeOf( a );\r\n\r\n        if( protoA !== Object.getPrototypeOf( b ) ) return true;\r\n\r\n        switch( protoA ){\r\n            case DateProto   : return +a !== +b;\r\n            case ArrayProto  : return arraysNotEqual( a, b );\r\n            case ObjectProto :\r\n            case null:\r\n                return objectsNotEqual( a, b );\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction objectsNotEqual( a, b ) {\r\n    const keysA = Object.keys( a );\r\n\r\n    if( keysA.length !== Object.keys( b ).length ) return true;\r\n\r\n    for( let i = 0; i < keysA.length; i++ ) {\r\n        const key = keysA[ i ];\r\n\r\n        if( !b.hasOwnProperty( key ) || notEqual( a[ key ], b[ key ] ) ) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction arraysNotEqual( a, b ) {\r\n    if( a.length !== b.length ) return true;\r\n\r\n    for( let i = 0; i < a.length; i++ ) {\r\n        if( notEqual( a[ i ], b[ i ] ) ) return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nvar numericKeys    = [ 1, 4, 5, 6, 7, 10, 11 ],\r\n    msDatePattern  = /\\/Date\\(([0-9]+)\\)\\//,\r\n    isoDatePattern = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\r\n\r\nexport function parseDate( date ) {\r\n    var msDate, timestamp, struct, minutesOffset = 0;\r\n\r\n    if( msDate = msDatePattern.exec( date ) ) {\r\n        timestamp = Number( msDate[ 1 ] );\r\n    }\r\n    else if( ( struct = isoDatePattern.exec( date )) ) {\r\n        // avoid NaN timestamps caused by undefined values being passed to Date.UTC\r\n        for( var i = 0, k; ( k = numericKeys[ i ] ); ++i ) {\r\n            struct[ k ] = +struct[ k ] || 0;\r\n        }\r\n\r\n        // allow undefined days and months\r\n        struct[ 2 ] = (+struct[ 2 ] || 1) - 1;\r\n        struct[ 3 ] = +struct[ 3 ] || 1;\r\n\r\n        if( struct[ 8 ] !== 'Z' && struct[ 9 ] !== undefined ) {\r\n            minutesOffset = struct[ 10 ] * 60 + struct[ 11 ];\r\n\r\n            if( struct[ 9 ] === '+' ) {\r\n                minutesOffset = 0 - minutesOffset;\r\n            }\r\n        }\r\n\r\n        timestamp =\r\n            Date.UTC( struct[ 1 ], struct[ 2 ], struct[ 3 ], struct[ 4 ], struct[ 5 ] + minutesOffset, struct[ 6 ],\r\n                      struct[ 7 ] );\r\n    }\r\n    else {\r\n        timestamp = Date.parse( date );\r\n    }\r\n\r\n    return timestamp;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tools.ts\n **/","import { Record } from './record/index.ts'\r\nimport { CollectionConstructor, RecordDefinition, CollectionDefinition, ICollection } from './types'\r\n\r\nexport class Model extends Record {\r\n    static Collection : CollectionConstructor\r\n\r\n    // Returns owner without the key (usually it's collection)\r\n    get collection() : ICollection {\r\n        return this._ownerKey ? null : <any> this._owner;\r\n    }\r\n\r\n    static define( protoProps : RecordDefinition, staticProps ){\r\n        Record.define( protoProps, staticProps );\r\n\r\n        const BaseCollection : CollectionConstructor = Object.getPrototypeOf( this.prototype ).constructor.Collection;\r\n\r\n        const collection = protoProps && protoProps.collection;\r\n\r\n\r\n        let CollectionConstructor : CollectionConstructor;\r\n\r\n        // If collection constructor is specified, just take it. \r\n        if( typeof collection === 'function' ) {\r\n            CollectionConstructor = <CollectionConstructor> collection;\r\n        } \r\n        // Same when Collection is specified as static class member.  \r\n        else if( this.Collection !== BaseCollection ){\r\n            CollectionConstructor = this.Collection;\r\n        } \r\n        // Otherwise we need to create new Collection type...\r\n        else{\r\n            // ...which must extend Collection of our base Record.\r\n            CollectionConstructor = class Collection extends BaseCollection {};\r\n            CollectionConstructor.define( <CollectionDefinition> collection );\r\n        }\r\n\r\n        // Link collection with the record\r\n        CollectionConstructor.prototype.Record = this;\r\n        this.Collection = CollectionConstructor;\r\n\r\n        return this;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/model.ts\n **/","import { Record, RecordDefinition } from './transaction.ts'\r\nimport { assign, defaults, omit } from '../tools.ts'\r\nimport { Class, ClassDefinition, Extendable } from '../class.ts'\r\nimport { compile, AttributesSpec } from './define.ts'\r\n\r\nimport { TransactionalType } from './nestedTypes.ts'\r\n\r\nexport interface RecordConstructor extends Extendable {\r\n    new ( attrs? : {}, options? : {} ) : Record;\r\n    define( spec? : RecordDefinition, statics? : {} )\r\n}\r\n\r\nRecord.define = function( protoProps : RecordDefinition, staticProps ){\r\n    const baseProto : Record = Object.getPrototypeOf( this.prototype ),\r\n            BaseConstructor = < typeof Record >baseProto.constructor;\r\n\r\n    if( protoProps ) {\r\n        // Compile attributes spec, creating definition mixin.\r\n        const definition = compile( protoProps.attributes, <AttributesSpec> baseProto._attributes );\r\n\r\n        // Explicit 'properties' declaration overrides auto-generated attribute properties.\r\n        assign( definition.properties, protoProps.properties || {} );\r\n\r\n        // Merge in definition.\r\n        defaults( definition, omit( protoProps, 'attributes', 'collection' ) );            \r\n        Class.define.call( this, definition, staticProps );\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nRecord._attribute = TransactionalType\r\n\r\n\r\nexport { Record }\n\n\n/** WEBPACK FOOTER **\n ** ./src/record/index.ts\n **/","/**\r\n * Record core implementing transactional updates.\r\n * The root of all definitions. \r\n */\r\n\r\nimport { log } from '../tools.ts'\r\nimport { Class, ClassDefinition } from '../class.ts'\r\n\r\n// TODO: Move these definitions here.\r\nimport { Constructor, Transactional, Transaction, TransactionOptions, Owner } from './types.ts'\r\n\r\n/***************************************************************\r\n * Record Definition as accepted by Record.define( definition )\r\n */\r\n\r\nexport interface RecordDefinition extends ClassDefinition {\r\n    attributes? : AttributeDescriptorMap\r\n}\r\n\r\nexport interface AttributeDescriptorMap {\r\n    [ name : string ] : AttributeDescriptor\r\n}\r\n\r\nexport interface AttributeDescriptor {\r\n    type? : Constructor\r\n    value? : any\r\n\r\n    parse? : AttributeParse\r\n    toJSON? : AttributeToJSON\r\n   \r\n    getHooks? : GetHook[]\r\n    transforms? : Transform[]\r\n    changeHandlers? : ChangeHandler[]\r\n}\r\n\r\nexport type GetHook = ( value : any, key : string ) => any;\r\n\r\nexport type ChangeAttrHandler = ( ( value : any, attr : string ) => void ) | string;\r\nexport type Transform = ( next : any, options : TransactionOptions, prev : any, record : Record ) => any;\r\nexport type ChangeHandler = ( next : any, prev : any, record : Record ) => void;\r\n\r\nexport type AttributeToJSON = ( value : any, key : string ) => any\r\nexport type AttributeParse = ( value : any, key : string ) => any\r\n\r\n/*************************************\r\n * Attribute definitions\r\n */\r\nexport interface AttributesValues {\r\n    [ key : string ] : any\r\n}\r\n\r\nexport type CloneAttributesCtor = new ( x : AttributesValues ) => AttributesValues\r\n\r\nexport interface AttributesSpec {\r\n    [ key : string ] : Attribute\r\n}\r\n\r\nexport interface Attribute extends AttributeUpdatePipeline, AttributeSerialization {\r\n    clone( value : any ) : any\r\n    create() : any\r\n}\r\n\r\nexport interface AttributeUpdatePipeline{\r\n    canBeUpdated( prev : any, next : any ) : boolean\r\n    transform : Transform\r\n    isChanged( a : any, b : any ) : boolean\r\n    handleChange : ChangeHandler\r\n}\r\n\r\nexport interface AttributeSerialization {\r\n    toJSON : AttributeToJSON\r\n    parse : AttributeParse\r\n}\r\n\r\n/*******************************************************\r\n * Record core implementation\r\n */\r\n\r\ninterface ConstructorOptions extends TransactionOptions{\r\n    clone? : boolean\r\n}\r\n\r\n// Client unique id counter\r\nlet _cidCounter : number = 0;\r\n\r\nexport class Record extends Class implements Owner, Transactional {\r\n    // Implemented at the index.ts to avoid circular dependency. Here we have just proper singature.\r\n    static define( protoProps : RecordDefinition, staticProps ) : typeof Record { return this; }\r\n\r\n    /***********************************\r\n     * Core Members\r\n     */\r\n    // Previous attributes\r\n    _previousAttributes : {}\r\n\r\n    // Current attributes    \r\n    attributes : AttributesValues\r\n\r\n    // Transactional control\r\n    _changing : boolean\r\n    _pending : boolean\r\n\r\n\r\n    /**\r\n     * Ownerhsip API\r\n     */\r\n    // Reference to owner\r\n    _owner : Owner\r\n\r\n    // Owner's attribute name, if it's Record \r\n    _ownerKey : string;\r\n\r\n    // Returns Record owner skipping collections. TODO: Move out\r\n    getOwner() : Owner {\r\n        const { _owner } = this;\r\n        // If there are no key, owner must be transactional object, and it's the collection.\r\n        // We don't expect that collection can be the member of collection, so we're skipping just one level up. An optimization.\r\n        return this._ownerKey ? _owner : _owner && ( <any>_owner )._owner;\r\n    }\r\n\r\n    /***********************************\r\n     * Notification API\r\n     */ \r\n    // Record is changed\r\n    _notifyChange( options : TransactionOptions ) : void {}\r\n\r\n    // Record's attribute is changed\r\n    _notifyChangeAttr( key : string, options : TransactionOptions ) : void {}\r\n\r\n    /***********************************\r\n     * Identity managements\r\n     */\r\n\r\n    // Client unique id \r\n    cid : string;\r\n\r\n    // Client id prefix\r\n    cidPrefix : string;\r\n\r\n    // Id attribute name ('id' by default)\r\n    idAttribute : string;\r\n\r\n    // Fixed 'id' property pointing to id attribute\r\n    get id() : string | number { return this.attributes[ this.idAttribute ]; }\r\n    set id( x : string | number ){ setAttribute( this, this.idAttribute, x ); }\r\n\r\n    /***********************************\r\n     * Dynamically compiled stuff\r\n     */\r\n\r\n    // Attributes specifications \r\n    _attributes : AttributesSpec\r\n    \r\n    // Attributes object copy constructor\r\n    Attributes : CloneAttributesCtor\r\n\r\n    // forEach function for traversing through attributes, with protective default implementation\r\n    // Overriden by dynamically compiled loop unrolled function in define.ts\r\n    forEachAttr( attrs : {}, iteratee : ( value : any, key? : string, spec? : Attribute ) => void ) : void {\r\n        const { _attributes } = this;\r\n\r\n        for( let name in attrs ){\r\n            const spec = _attributes[ name ];\r\n\r\n            if( spec ){\r\n                iteratee( attrs[ name ], name, spec );\r\n            }\r\n            else{\r\n                log.warn( '[Unknown Attribute]', this, 'Unknown record attribute \"' + name + '\" is ignored:', attrs );\r\n            }\r\n        }\r\n    }\r\n\r\n    // Attributes-level serialization\r\n    _toJSON(){ return {}; }\r\n\r\n    // Attributes-level parse\r\n    _parse( data ){ return data; }\r\n\r\n    // Create record default values, optionally augmenting given values \r\n    defaults( values? : {} ){ return {}; }\r\n\r\n    /***************************************************\r\n     * Record construction\r\n     */\r\n    // Create record, optionally setting an owner\r\n    constructor( a_values? : {}, a_options? : ConstructorOptions, owner? : Owner ){\r\n        super();\r\n\r\n        const options = a_options || {},\r\n              values = ( options.parse ? this.parse( a_values ) :  a_values ) || {};\r\n\r\n        this._changing = this._pending = false;\r\n        this._owner = owner;\r\n        this.cid = this.cidPrefix + _cidCounter++;\r\n\r\n        // TODO: type error for wrong object.\r\n\r\n        const attributes = options.clone ? cloneAttributes( this, values ) : this.defaults( values ); \r\n\r\n        this.forEachAttr( attributes, ( value : any, key : string, attr : AttributeUpdatePipeline ) => {\r\n            const next = attributes[ key ] = attr.transform( value, options, void 0, this );\r\n                  attr.handleChange( next, void 0, this );\r\n        });\r\n\r\n        this.attributes = this._previousAttributes = attributes;\r\n\r\n        this.initialize( a_values, a_options );\r\n    }\r\n\r\n    // Initialization callback, to be overriden by the subclasses \r\n    initialize( values?, options? ){}\r\n\r\n    // Deeply clone record, optionally setting new owner.\r\n    clone( owner? : any ) : this {\r\n        return new (<any>this.constructor)( this.attributes, { clone : true }, owner );\r\n    }\r\n\r\n    /**\r\n     * Serialization control\r\n     */\r\n\r\n    // Default record-level serializer, to be overriden by subclasses \r\n    toJSON(){\r\n        const json = {};\r\n\r\n        this.forEachAttr( this.attributes, ( value, key : string, { toJSON } : AttributeSerialization ) =>{\r\n            // If attribute serialization is not disabled, and its value is not undefined...\r\n            if( toJSON && value !== void 0 ){\r\n                // ...serialize it according with its spec.\r\n                json[ key ] = toJSON.call( this, value, key );\r\n            }\r\n        });\r\n    }\r\n    \r\n    // Default record-level parser, to be overriden by the subclasses.\r\n    parse( data ){\r\n        // Call dynamically compiled loop-unrolled attribute-level parse function.\r\n        return this._parse( data );\r\n    }\r\n\r\n    /**\r\n     * Transactional control\r\n     */\r\n\r\n     // Object sync API\r\n     set( values : {}, options? : TransactionOptions ) : this {\r\n        if( values ){\r\n            this.createTransaction( values, options ).commit( options );\r\n        } \r\n\r\n        return this;\r\n    }\r\n    \r\n    // Create transaction\r\n    createTransaction( a_values : {}, options : TransactionOptions = {} ) : Transaction {\r\n        const transaction = new RecordTransaction( this ),\r\n              { changes, nested } = transaction,\r\n              { attributes } = this,\r\n              values = options.parse ? this.parse( a_values ) : a_values,\r\n              merge = options.merge === void 0 || options.merge;\r\n\r\n        if( Object.getPrototypeOf( values ) === Object.prototype ){\r\n            this.forEachAttr( values, ( value, key : string, attr : AttributeUpdatePipeline ) => {\r\n                const prev = attributes[ key ];\r\n\r\n                // handle deep update...\r\n                if( merge && attr.canBeUpdated( prev, value ) ) {\r\n                    nested.push( prev.createTransaction( value, options ) );\r\n                    return;\r\n                }\r\n\r\n                // cast and hook...\r\n                const next = attr.transform( value, options, prev, this );\r\n\r\n                if( attr.isChanged( next, prev ) ) {\r\n                    attributes[ key ] = next;\r\n                    changes.push( key );\r\n\r\n                    // Do the rest of the job after assignment\r\n                    attr.handleChange( next, prev, this );\r\n                }\r\n            } );\r\n        }\r\n        else{\r\n            log.error( '[Type Error]', this, 'Record update rejected (', values, '). Incompatible type.' );\r\n        }\r\n\r\n        return transaction;\r\n    }\r\n\r\n    // Execute given function in the scope of ad-hoc transaction\r\n    transaction( fun : ( self : this ) => void, options : TransactionOptions = {} ) {\r\n        const isRoot = begin( this );\r\n        fun( this );\r\n        isRoot && commit( this, options );\r\n    }\r\n\r\n    // Handle nested changes\r\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void {        \r\n        this.forceAttributeChange( child._ownerKey, options );\r\n    }\r\n\r\n    forceAttributeChange( key, options : TransactionOptions = {} ){\r\n        // Touch an attribute in bounds of transaction\r\n        const isRoot = begin( this );\r\n\r\n        if( !options.silent ){\r\n            this._pending = true;\r\n            key && this._notifyChangeAttr( key, options );\r\n        }\r\n\r\n        isRoot && commit( this, options );\r\n    }\r\n};\r\n\r\n/**************************************************\r\n * Initialize Record prototype elements\r\n */\r\n\r\nconst recordProto = Record.prototype;\r\n\r\n// Default client id prefix \r\nrecordProto.cid = 'c';\r\n\r\n// Default id attribute name\r\nrecordProto.idAttribute = 'id';\r\n\r\n/***********************************************\r\n * Helper functions\r\n */\r\n\r\n// Deeply clone record attributes\r\nfunction cloneAttributes( record : Record, a_attributes : AttributesValues ) : AttributesValues {\r\n    const attributes = new record.Attributes( a_attributes );\r\n\r\n    record.forEachAttr( attributes, function( value, name, attr : Attribute ){\r\n        attributes[ name ] = attr.clone( value ); //TODO: Add owner?\r\n    } );\r\n\r\n    return attributes;\r\n}\r\n\r\n // Optimized single attribute transactional update. To be called from attributes setters\r\nexport function setAttribute( record : Record, name : string, value : any ) : void {\r\n    const isRoot  = begin( record ),\r\n          options = {};\r\n\r\n    const { attributes } = record,\r\n          spec = record._attributes[ name ],\r\n          prev = attributes[ name ];\r\n\r\n    // handle deep update...\r\n    if( spec.canBeUpdated( prev, value ) ) {\r\n        prev.createTransaction( value, options ).commit( options );\r\n    }\r\n    else {\r\n        // cast and hook...\r\n        const next = spec.transform( value, options, prev, record );\r\n\r\n        if( spec.isChanged( next, prev ) ) {\r\n            attributes[ name ] = next;\r\n\r\n            // Do the rest of the job after assignment\r\n            if( spec.handleChange ) {\r\n                spec.handleChange( next, prev, this );\r\n            }\r\n\r\n            record._pending = true;\r\n            record._notifyChangeAttr( name, options );\r\n        }\r\n    }\r\n\r\n    isRoot && commit( record, options );\r\n}\r\n\r\n/**\r\n * Transactional brackets\r\n *  begin( model ) => true | false;\r\n *  commit( model, options ) => void 0\r\n */\r\n\r\n// Start transaction on the record. Return true if it's opening transaction.\r\nfunction begin( record : Record ) : boolean {\r\n    const isRoot = !record._changing;\r\n\r\n    if( isRoot ){\r\n        // If it's opening transaction, copy attributes\r\n        record._changing           = true;\r\n        record._previousAttributes = new record.Attributes( record.attributes );\r\n    }\r\n\r\n    return isRoot;\r\n}\r\n\r\n// Commit transaction. Send out change event and notify owner.\r\nfunction commit( record : Record, options : TransactionOptions ){\r\n    if( !options.silent ){\r\n        while( record._pending ){\r\n            record._pending = false;\r\n            record._notifyChange( options );\r\n        }\r\n    }\r\n\r\n    record._pending  = false;\r\n    record._changing = false;\r\n\r\n    // TODO: should it be in the transaction scope?\r\n    // So, upper-level change:attr handlers will work in the scope of current\r\n    // transaction. Short answer: no. Leave it like this.\r\n    const { _owner } = record;\r\n    if( _owner ){\r\n        _owner._onChildrenChange( record, options );\r\n    }\r\n}\r\n\r\n// Transaction class. Implements two-phase transactions on object's tree. \r\nclass RecordTransaction implements Transaction {\r\n    isRoot : boolean\r\n    changes : string[]\r\n    nested : Transaction[]\r\n\r\n    // open transaction\r\n    constructor( public model : Record ){\r\n        this.isRoot  = begin( model );\r\n        this.model   = model;\r\n        this.changes = [];\r\n        this.nested  = [];\r\n    }\r\n\r\n    // commit transaction\r\n    commit( options : TransactionOptions = {} ){\r\n        const { nested, model } = this;\r\n\r\n        // Commit all nested transactions...\r\n        for( let i = 0; i < nested.length; i++ ){\r\n            nested[ i ].commit( options );\r\n        }\r\n\r\n        // Notify listeners on attribute changes...\r\n        if( !options.silent ){\r\n            const { changes } = this;\r\n\r\n            if( changes.length ){\r\n                model._pending = true;\r\n            }\r\n\r\n            for( let i = 0; i < changes.length; i++ ){\r\n                model._notifyChangeAttr( changes[ i ], options )\r\n            }\r\n        }\r\n\r\n        this.isRoot && commit( model, options );\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/record/transaction.ts\n **/","import { GenericAttribute } from './attribute.ts';\r\nimport { Attribute, AttributesValues, AttributeDescriptorMap, CloneAttributesCtor } from './transaction.ts'\r\nimport { defaults, isValidJSON, transform } from '../tools.ts'\r\nimport { log } from '../tools.ts'\r\n\r\nexport interface DynamicMixin {\r\n    _attributes : AttributesSpec\r\n    Attributes : CloneAttributesCtor\r\n    properties : PropertyDescriptorMap\r\n    forEach? : ForEach\r\n    defaults : Defaults\r\n    _toJSON : ToJSON\r\n    _parse : Parse\r\n}\r\n\r\n// Refine AttributesSpec definition.\r\nexport interface AttributesSpec {\r\n    [ key : string ] : GenericAttribute\r\n}\r\n\r\ntype ForEach   = ( obj : {}, iteratee : ( val : any, key? : string, spec? : Attribute ) => void ) => void;\r\ntype Defaults  = ( attrs? : {} ) => {}\r\ntype Parse     = ( data : any ) => any;\r\ntype ToJSON    = () => any;\r\n\r\n// Compile attributes spec\r\nexport function compile( rawSpecs : AttributeDescriptorMap, baseAttributes : AttributesSpec ) : DynamicMixin {\r\n    const myAttributes = transform( <AttributesSpec>{}, rawSpecs, GenericAttribute.create ),\r\n          allAttributes = defaults( <AttributesSpec>{}, myAttributes, baseAttributes ),\r\n          Attributes = createCloneCtor( allAttributes ),\r\n          mixin : DynamicMixin = {\r\n            Attributes : Attributes,\r\n            _attributes : new Attributes( allAttributes ),\r\n            properties : transform( <PropertyDescriptorMap>{}, myAttributes, x => x.createPropertyDescriptor() ),\r\n            defaults : createDefaults( allAttributes ),\r\n            _toJSON : createToJSON( allAttributes ), // <- TODO: profile and check if there is any real benefit. I doubt it. \r\n            _parse : createParse( myAttributes, allAttributes )\r\n         }; \r\n\r\n    // Enable optimized forEach if warnings are disabled.\r\n    if( log.level > 0 ){\r\n        mixin.forEach = createForEach( allAttributes );\r\n    }\r\n\r\n    return mixin;\r\n}\r\n\r\nexport function createForEach( attrSpecs : AttributesSpec ) : ForEach {\r\n    let statements = [ 'var v, _a=this._attributes;' ];\r\n\r\n    for( let name in attrSpecs ){\r\n        statements.push( `( v = a.${name} ) === void 0 || f( v, \"${name}\", _a.${name} );` );\r\n    }\r\n\r\n    return <ForEach> new Function( 'a', 'f', statements.join( '' ) );\r\n}\r\n\r\nexport function createCloneCtor( attrSpecs : AttributesSpec ) : CloneAttributesCtor {\r\n    var statements = [];\r\n\r\n    for( let name in attrSpecs ){\r\n        statements.push( `this.${name} = x.${name};` );\r\n    }\r\n\r\n    var CloneCtor = new Function( \"x\", statements.join( '' ) );\r\n    CloneCtor.prototype = Object.prototype;\r\n    return <CloneAttributesCtor> CloneCtor;\r\n}\r\n\r\n// Create optimized model.defaults( attrs, options ) function\r\nfunction createDefaults( attrSpecs : AttributesSpec ) : Defaults {\r\n    let assign_f = ['var v;'], create_f = [];\r\n\r\n    function appendExpr( name, expr ){\r\n        assign_f.push( `this.${name} = ( v = a.${name} ) === void 0 ? ${expr} : v;` );\r\n        create_f.push( `this.${name} = ${expr};` );\r\n    }\r\n\r\n    // Compile optimized constructor function for efficient deep copy of JSON literals in defaults.\r\n    for( let name in attrSpecs ){\r\n        const attrSpec = attrSpecs[ name ],\r\n              { value, type } = attrSpec;\r\n\r\n        if( value === void 0 && type ){\r\n            // if type with no value is given, create an empty object\r\n            appendExpr( name, `i.${name}.create()` );//TODO: consider adding owner reference\r\n        }\r\n        else{\r\n            // If value is given, type casting logic will do the job later, converting value to the proper type.\r\n            if( isValidJSON( value ) ){\r\n                // JSON literals must be deep copied.\r\n                appendExpr( name, JSON.stringify( value ) );\r\n            }\r\n            else if( value === void 0 ){\r\n                // handle undefined value separately. Usual case for model ids.\r\n                appendExpr( name, 'void 0' );\r\n            }\r\n            else{\r\n                // otherwise, copy value by reference.\r\n                appendExpr( name, `i.${name}.value` );\r\n            }\r\n        }\r\n    }\r\n\r\n    const CreateDefaults : any = new Function( 'i', create_f.join( '' ) ),\r\n          AssignDefaults : any = new Function( 'a', 'i', assign_f.join( '' ) );\r\n\r\n    CreateDefaults.prototype = AssignDefaults.prototype = Object.prototype;\r\n\r\n    // Create model.defaults( attrs, options ) function\r\n    // 'attrs' will override default values, options will be passed to nested backbone types\r\n    return function( attrs? : {} ){ //TODO: Consider removing of the CreateDefaults. Currently is not used. May be used in Record costructor, though.\r\n        return attrs ? new AssignDefaults( attrs, this._attributes ) : new CreateDefaults( this._attributes );\r\n    }\r\n}\r\n\r\nfunction createParse( allAttrSpecs : AttributesSpec, attrSpecs : AttributesSpec ) : Parse {\r\n    var statements = [ 'var a=this._attributes;' ],\r\n        create     = false;\r\n\r\n    for( let name in allAttrSpecs ){\r\n        const local = attrSpecs[ name ];\r\n\r\n        // Is there any 'parse' option in local model definition?\r\n        if( local && local.parse ) create = true;\r\n\r\n        // Add statement for each attribute with 'parse' option.\r\n        if( allAttrSpecs[ name ].parse ){\r\n            const s = `r.${name} === void 0 ||( r.${name} = a.${name}.parse.call( this, r.${name}, \"${name}\") );`;\r\n            statements.push( s );\r\n        }\r\n    }\r\n\r\n    if( create ){\r\n        statements.push( 'return r;' );\r\n        return <any> new Function( 'r', statements.join( '' ) );\r\n    }\r\n }\r\n\r\nfunction createToJSON( attrSpecs : AttributesSpec ) : ToJSON {\r\n    let statements = [ `var json = {},v=this.attributes,a=this._attributes;` ];\r\n\r\n    for( let key in attrSpecs ){\r\n        const toJSON = attrSpecs[ key ].toJSON;\r\n\r\n        if( toJSON ){\r\n            statements.push( `json.${key} = a.${key}.toJSON.call( this, v.${ key }, '${key}' );` );\r\n        }\r\n    }\r\n\r\n    statements.push( `return json;` );\r\n\r\n    return <any> new Function( statements.join( '' ) );\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/record/define.ts\n **/","import { setAttribute, Record, Attribute, Transform, ChangeHandler, AttributeDescriptor } from './transaction.ts'\r\nimport { notEqual, assign } from '../tools.ts'\r\n\r\nimport { Owner, Transactional, TransactionOptions, Constructor } from './types.ts'\r\n\r\ntype GetHook = ( value : any, key : string ) => any;\r\nexport type ChangeAttrHandler = ( ( value : any, attr : string ) => void ) | string;\r\n\r\ndeclare global {\r\n    interface Function {\r\n        _attribute : typeof GenericAttribute\r\n    }\r\n}\r\n\r\n// TODO: interface differs from options, do something obout it\r\nexport class GenericAttribute implements Attribute {\r\n    // Factory method to create attribute from options \r\n    static create( options : AttributeDescriptor, name : string ) : GenericAttribute {\r\n        const type = options.type,\r\n              AttributeCtor = type ? type._attribute : GenericAttribute;\r\n\r\n        return new AttributeCtor( name, options );\r\n    }\r\n    /**\r\n     * Update pipeline functions\r\n     * =========================\r\n     *\r\n     * Stage 0. canBeUpdated( value )\r\n     * - presence of this function implies attribute's ability to update in place.\r\n     */\r\n     canBeUpdated( prev, next ) : boolean {\r\n         return false;\r\n     }\r\n\r\n    /**\r\n     * Stage 1. Transform stage\r\n     */\r\n    transform( value, options, prev, model ) { return value; }\r\n\r\n    // convert attribute type to `this.type`\r\n    convert( value, options, model ) { return value; }\r\n\r\n    /**\r\n     * Stage 2. Check if attr value is changed\r\n     */\r\n    isChanged( a, b ) {\r\n        return notEqual( a, b );\r\n    }\r\n\r\n    /**\r\n     * Stage 3. Handle attribute change\r\n     */\r\n    handleChange( next, prev, model ) {}\r\n\r\n\r\n    /**\r\n     * End update pipeline definitions.\r\n     */\r\n\r\n    // create empty object passing backbone options to constructor...\r\n    create() { return new ( <any>this.type )(); }\r\n\r\n    // generic clone function for typeless attributes\r\n    // Must be overriden in sublass\r\n    clone( value, options : { deep? : boolean } = {} ) {\r\n        if( value && typeof value === 'object' ) {\r\n            // delegate to object's clone(), if it exist...\r\n            if( value.clone ) {\r\n                return value.clone( options );\r\n            }\r\n\r\n            if( options.deep ){\r\n                const proto = Object.getPrototypeOf( value );\r\n\r\n                // attempt to deep copy raw objects, assuming they are JSON\r\n                if( proto === Object.prototype || proto === Array.prototype ){\r\n                    return JSON.parse( JSON.stringify( value ) );\r\n                }\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    validate( model, value, name ) {}\r\n\r\n    toJSON( value, key ) {\r\n        return value && value.toJSON ? value.toJSON() : value;\r\n    }\r\n\r\n    createPropertyDescriptor() : PropertyDescriptor | void {\r\n        const { name, getHook } = this;\r\n\r\n        if( name !== 'id' ){\r\n            return {\r\n                // call to optimized set function for single argument.\r\n                set( value ){\r\n                    setAttribute( <any>this, name, value );\r\n                },\r\n\r\n                // attach get hook to the getter function, if present\r\n                get : getHook ?\r\n                      function() {\r\n                          return getHook.call( this, this.attributes[ name ], name );\r\n                      } :\r\n                      function() {\r\n                          return this.attributes[ name ];\r\n                      }\r\n            }\r\n        }\r\n    }\r\n\r\n    value : any\r\n    type : Constructor\r\n\r\n    parse : ( value, key : string ) => any\r\n\r\n    initialize( name : string, options ){}\r\n\r\n    constructor( public name : string, public options : AttributeDescriptor ) {\r\n        const {\r\n                  value, type, parse, toJSON,\r\n                  getHooks = [],\r\n                  transforms = [],\r\n                  changeHandlers = []\r\n              } = options;\r\n\r\n        this.value = value;\r\n        this.type  = type;\r\n\r\n        this.parse  = parse;\r\n        this.toJSON = toJSON === void 0 ? this.toJSON : toJSON;\r\n\r\n        /**\r\n         * Assemble pipelines...\r\n         */\r\n\r\n        // `convert` is default transform, which is always present...\r\n        this.transform = this.convert;\r\n\r\n        // No change handler by default\r\n        this.handleChange = null;\r\n\r\n        // Get hook from the attribute will be used first...\r\n        this.getHook = this.get || null;\r\n\r\n        // let subclasses configure the pipeline...\r\n        this.initialize.apply( this, arguments );\r\n\r\n        // let attribute spec configure the pipeline...\r\n        getHooks.forEach( gh => this.addGetHook( gh ) );\r\n        transforms.forEach( t => this.addTransform( t ) );\r\n        changeHandlers.forEach( ch => this.addChangeHandler( ch ) );\r\n    }\r\n\r\n    getHook : ( value, key : string ) => any\r\n    get : ( value, key : string ) => any\r\n\r\n    addGetHook( next : GetHook ) : void {\r\n        const prev = this.getHook;\r\n\r\n        this.getHook = prev ?\r\n                       function( value, name ) {\r\n                           const next = prev.call( value, name );\r\n                           return next.call( next, name );\r\n                       } : next;\r\n    }\r\n\r\n    addTransform( next : Transform ) : void {\r\n        const prev = this.transform;\r\n\r\n        this.transform = function( value, options, prev, model ) {\r\n                             const next = prev.call( this, value, options, prev, model );\r\n                             return next.call( this, next, options, prev, model );\r\n                         }\r\n    }\r\n\r\n    addChangeHandler( next : ChangeHandler ) : void {\r\n        const prev = this.handleChange;\r\n\r\n        this.handleChange = prev ?\r\n                            function( next, prev, model ) {\r\n                                prev.call( this, next, prev, model );\r\n                                next.call( this, next, prev, model );\r\n                            } : next;\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/record/attribute.ts\n **/","import { GenericAttribute } from './attribute.ts'\r\nimport { Owner, Transactional, TransactionalConstructor, TransactionOptions } from './types.ts' \r\n\r\nexport class TransactionalType extends GenericAttribute {\r\n    type : TransactionalConstructor;\r\n\r\n    canBeUpdated( prev : Transactional, next : any ) : boolean {\r\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\r\n        return prev && next && !( next instanceof this.type );\r\n    }\r\n\r\n    convert( value : any, options : TransactionOptions, record : Owner & Transactional ){\r\n        // Invoke class factory to handle abstract classes\r\n        return value == null || value instanceof this.type ? value : this.type.create( value, options, record );\r\n    }\r\n\r\n    create() : Transactional {\r\n        return new this.type();\r\n    }\r\n\r\n    handleChange( next : Transactional, prev : Transactional, record : Owner & Transactional ){\r\n        // Remove reference to self\r\n        if( prev && prev._owner === record ){\r\n            prev._ownerKey = prev._owner = null;\r\n        } \r\n\r\n        // Take ownership if possible\r\n        if( next && !next._owner ){\r\n            next._owner = record;\r\n            next._ownerKey = this.name;\r\n        }\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/record/nestedTypes.ts\n **/"],"sourceRoot":""}